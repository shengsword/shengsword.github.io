!function e(t,n,r){function i(a,s){if(!n[a]){if(!t[a]){var l="function"==typeof require&&require;if(!s&&l)return l(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var c=n[a]={exports:{}};t[a][0].call(c.exports,(function(e){return i(t[a][1][e]||e)}),c,c.exports,e,t,n,r)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<r.length;a++)i(r[a]);return i}({1:[function(e,t,n){const r={Position:"vPosition",Normal:"vNormal",UV1:"vUV1",UV2:"vUV2",Tangent:"vTangent",Binormal:"vBinormal",JointIndex:"vJointIndex",JointWeight:"vJointWeight",VertexColor:"vColor",MorphPosition:"vMorphPosition",MorphPosition1:"vMorphPosition1",MorphPosition2:"vMorphPosition2",MorphPosition3:"vMorphPosition3",MorphPosition4:"vMorphPosition4"};t.exports=r},{}],2:[function(e,t,n){const r=e("./math/Vec3"),i=e("./math/Mat4"),o=e("./math/Quaternion"),a=e("./math/Aabbox"),s=e("./GlobalID");var l=[],u=new r,c=new i,f=new i,h=new o,d=new o,p=new o;t.exports=class e{constructor(e){this._id=s(),this.name=e||"untitled",this._dirtyLocal=!1,this._dirtyWorld=!1,this.visible=!0,this.up=r.AxisY(),this._position=r.Zero(),this._quaternion=new o,this._localPosition=r.Zero(),this._localScale=r.One(),this._localQuaternion=new o,this._localMat=new i,this._worldMat=new i,this._invWorldMat=new i,this._invWorldDirty=!1,this._dirtyNormal=!1,this._aabbChanged=!1,this._parent=null,this._children=[],this._aabb=new a,this._tmpVec3=new r,this._target=new r,this.subHierarchyVersion=0,this._worldVersion=0}get aabbChanged(){return this._aabbChanged}set aabbChanged(e){this._aabbChanged=e}_markWorldDirty(){this._dirtyNormal=!0,this._dirtyWorld=!0,this._aabbChanged=!0}sync(){var e,t;if(!0===this._dirtyLocal&&(this._localMat.compose(this._localPosition,this._localQuaternion,this._localScale),this._dirtyLocal=!1,this._markWorldDirty()),!1!==this._dirtyWorld)for(null===this._parent?this._worldMat.copy(this._localMat):this._parent._worldMat.mulTo(this._localMat,this._worldMat),this._worldMat.getTranslation(this._position),this._invWorldDirty=!0,this._dirtyWorld=!1,this._worldVersion++,e=0,t=this._children.length;e<t;e++)this._children[e]._markWorldDirty()}getWorldVersion(){return this._worldVersion}syncTrees(){this.sync();for(var e=this._children,t=0,n=e.length;t<n;t++)e[t].syncTrees()}getFullAabb(e,t){var n;return e.reset(),t||this.getWorld(),this.iterateDown((function(r){t||r.sync(),void 0!==r.getAabb&&!1===(n=r.getAabb(t)).isEmpty()&&e.merge(n)})),e}getLocal(){return!0===this._dirtyLocal&&(this._localMat.compose(this._localPosition,this._localQuaternion,this._localScale),this._dirtyLocal=!1,this._markWorldDirty()),this._localMat}getWorld(){var e=this;for(l.length=0;null!==e;)l.push(e),e=e._parent;for(var t=l.length-1;t>=0;t--)l[t].sync();return this._worldMat}getInvWorld(){var e=this.getWorld();return this._invWorldDirty?(this._invWorldDirty=!1,e.calcInverse(this._invWorldMat)):this._invWorldMat}setLocalPosition(){1===arguments.length?this._localPosition.copy(arguments[0]):this._localPosition.set(arguments[0],arguments[1],arguments[2]),this._dirtyLocal=!0}get localPosition(){return this._localPosition}set localPosition(e){this.setLocalPosition(e)}setLocalQuaternion(){1===arguments.length?this._localQuaternion.copy(arguments[0]):this._localQuaternion.set(arguments[0],arguments[1],arguments[2],arguments[3]),this._dirtyLocal=!0}get localQuaternion(){return this._localQuaternion}set localQuaternion(e){this.setLocalQuaternion(e)}getPosition(){return this.getWorld().getTranslation(this._position),this._position}get position(){return this.getWorld().getTranslation(this._position),this._position}set position(e){this.setPosition(e)}setPosition(){arguments.length>1?u.set(arguments[0],arguments[1],arguments[2]):u.copy(arguments[0]),null===this._parent||(this._parent.getWorld().calcInverse(c),u.transformByMat4(c)),this._localPosition.copy(u),this._dirtyLocal=!0}get parent(){return this._parent}set parent(e){this._parent.removeChild(this),e&&e.addChild(this)}get scale(){return this._localScale}set scale(e){this.setScale(e)}setScale(){arguments.length>1?this._localScale.set(arguments[0],arguments[1],arguments[2]):this._localScale.copy(arguments[0]),this._dirtyLocal=!0}get quaternion(){return this.getWorld().decompose(this._position,this._quaternion,this._tmpVec3),this._quaternion}set quaternion(e){this.setQuaternion(e)}setQuaternion(){arguments.length>1?d.set(arguments[0],arguments[1],arguments[2],arguments[3]):d.copy(arguments[0]),null===this._parent?this._localQuaternion.copy(d):(p.copy(this._parent.quaternion).invert(),p.mulTo(d,this._localQuaternion)),this._dirtyLocal=!0}addChild(t){return t===this?this:t instanceof e?(null!==t._parent&&t._parent.removeChild(t),t._parent=this,t._markWorldDirty(),this._children.push(t),this._notifyHierarchyDirty(!0),this):void window.console.warn("BaseNode.addChild must accept the argument typed of ICreator.BaseNode!",t)}_notifyHierarchyDirty(e){e&&this.subHierarchyVersion++,this.iterateUp((function(e){e.subHierarchyVersion++}))}lookAt(e){3===arguments.length?this._target.set(arguments[0],arguments[1],arguments[2]):this._target.copy(e),f.lookAt(this.position,this._target,this.up),this.setQuaternion(h.buildByMat(f))}setLocal(e){this._localMat.copy(e),this._localMat.compose(this._localPosition,this._localQuaternion,this._localScale),this._dirtyLocal=!1,this._dirtyWorld=!0}translateLocal(){var e=new r;return function(t,n,r){e.set(t,n,r),this.localQuaternion.transformVector(e,e);var i=e.add(this.localPosition);this.setLocalPosition(i)}}removeChildren(){for(var e=0;e<this._children.length;e++)this._children[e]._parent=null;this._children=[],this._notifyHierarchyDirty(!0)}removeChild(e){if(arguments.length>1)for(var t=0;t<arguments.length;t++)this.removeChild(arguments[t]);var n=this._children.indexOf(e);-1!==n&&(e._parent=null,this._children.splice(n,1)),this._notifyHierarchyDirty(!0)}remove(e){window.console.warn("BaseNode.remove is deprecated, try use .removeChild instead .... :) "),this.removeChild(e)}findByName(e){if(this.name===e)return this;for(var t=0,n=this._children.length;t<n;t++){var r=this._children[t].findByName(e);if(null!==r)return r}return null}iterateUp(e){if(null!==this._parent){if(!0===e(this._parent))return;this._parent.iterateUp(e)}}iterateDown(e){if(!0!==e(this))for(var t=this._children,n=0,r=t.length;n<r;n++)t[n].iterateDown(e)}getNDC(e,t){return void 0===t?t=new r:t.set(0,0,0),e.getView().mulTo(this.getWorld(),f),e._projectionMat.mulTo(f,f),t.applyProjection(f),t}copy(e,t){if(this.name=e.name,this.up.copy(e.up),this._localPosition.copy(e._localPosition),this._localQuaternion.copy(e._localQuaternion),this._localScale.copy(e._localScale),this._position.copy(e._position),this._quaternion.copy(e._quaternion),this._localMat.copy(e._localMat),this._worldMat.copy(e._worldMat),this._invWorldMat.copy(e._invWorldMat),this._invWorldDirty=e._invWorldDirty,this._dirtyWorld=e._dirtyWorld,this._dirtyLocal=e._dirtyLocal,this._dirtyNormal=e._dirtyNormal,this._aabbChanged=!0,this._target.copy(e._target),this.visible=e.visible,!1===t)return this;for(var n=0;n<e._children.length;n++){var r=e._children[n].clone(t);this.addChild(r)}return this}clone(t){return(new e).copy(this,t)}}},{"./GlobalID":14,"./math/Aabbox":46,"./math/Mat4":47,"./math/Quaternion":49,"./math/Vec3":53}],3:[function(e,t,n){const{VertexAttribute:r,VertexBuffer:i,Model:o}=e("."),a=new r(new i(new Float32Array([-1,-1,4,-1,-1,4]),2));t.exports=({vs:e="\nprecision highp float;\nattribute vec2 position;\nvoid main() {\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n}",fs:t,uniforms:n={}})=>new o({vs:e,fs:t,attributes:{position:a},vertexCount:3,uniforms:n})},{".":44}],4:[function(e,t,n){function r(){}function i(e,t,n,r,i){var o=this;o.name=e,o.q=t,o.components=n,o.type=r,o.strategy=i}function o(e,t,n,r,o){i.call(this,e,t,n,r,o),this.qc=[],this.outcomponents=3}function a(e,t,n,r,o){i.call(this,e,t,n,r,o)}function s(e,t,n){var r=this;if(!n&&t<65536||0==n)r.faces=new Uint16Array(3*t);else{if(n&&2!=n)throw"Unsupported type";r.faces=new Uint32Array(3*t)}r.prediction=new Uint32Array(3*e)}function l(e,t,n){if(3&t)throw"Memory aligned on 4 bytes is mandatory";var r=this,s=r.stream=new Stream(e,t,n);if(2021286656==s.readInt()){s.readInt();r.entropy=s.readUChar(),r.geometry={};for(var l=s.readInt(),u=0;u<l;u++){var c=s.readString();r.geometry[c]=s.readString()}l=s.readInt();r.attributes={};for(u=0;u<l;u++){var f,h=s.readString(),d=s.readInt(),p=s.readFloat(),_=s.readUChar(),b=s.readUChar(),m=s.readUChar();switch(d){case 2:f=a;break;case 3:f=o;break;case 1:default:f=i}r.attributes[h]=new f(h,p,_,b,m)}r.geometry.nvert=r.nvert=r.stream.readInt(),r.geometry.nface=r.nface=r.stream.readInt()}}BitStream=function(e){var t=this;t.a=e,t.current=e[0],t.position=0,t.pending=32},BitStream.prototype={read:function(e){var t=this;if(e>t.pending){t.pending=e-t.pending;var n=t.current<<t.pending>>>0;return t.pending=32-t.pending,t.current=t.a[++t.position],n|=t.current>>>t.pending,t.current=(t.current&(1<<t.pending)-1)>>>0,n}t.pending-=e;n=t.current>>>t.pending;return t.current=(t.current&(1<<t.pending)-1)>>>0,n}},Stream=function(e,t,n){var r=this;r.data=e,r.buffer=new Uint8Array(e),r.pos=t||0,r.view=new DataView(e)},Stream.prototype={logs:new Uint8Array(16768),readChar:function(){var e=this.buffer[this.pos++];return e>127&&(e-=256),e},readUChar:function(){return this.buffer[this.pos++]},readShort:function(){return this.pos+=2,this.view.getInt16(this.pos-2,!0)},readFloat:function(){return this.pos+=4,this.view.getFloat32(this.pos-4,!0)},readInt:function(){return this.pos+=4,this.view.getInt32(this.pos-4,!0)},readArray:function(e){var t=this.buffer.subarray(this.pos,this.pos+e);return this.pos+=e,t},readString:function(){var e=this.readShort(),t=String.fromCharCode.apply(null,this.readArray(e-1));return this.pos++,t},readBitStream:function(){var e=this.readInt(),t=3&this.pos;0!=t&&(this.pos+=4-t);var n=new BitStream(new Uint32Array(this.data,this.pos,e));return this.pos+=4*e,n},decodeArray:function(e,t){for(var n=this,i=n.readBitStream(),o=new r;n.logs.length<t.length;)n.logs=new Uint8Array(t.length);o.decompress(this,n.logs);for(var a=0;a<n.logs.readed;a++){var s=n.logs[a];if(0!=s){var l=1<<s>>>1;for(u=0;u<e;u++)t[a*e+u]=i.read(s)-l}else for(var u=0;u<e;u++)t[a*e+u]=0}return n.logs.readed},decodeValues:function(e,t){for(var n=this,i=n.readBitStream(),o=new r,a=t.length/e;n.logs.length<a;)n.logs=new Uint8Array(a);for(var s=0;s<e;s++){o.decompress(this,n.logs);for(var l=0;l<n.logs.readed;l++){var u=n.logs[l];if(0!=u){var c=i.read(u),f=1<<u-1>>>0;c<f&&(c=-c-f),t[l*e+s]=c}else t[l*e+s]=0}}return n.logs.readed},decodeDiffs:function(e){for(var t=this,n=t.readBitStream(),i=new r,o=e.length;t.logs.length<o;)t.logs=new Uint8Array(o);i.decompress(this,t.logs);for(var a=0;a<t.logs.readed;a++){var s=t.logs[a];if(0!=s){var l=1<<s>>>1;e[a]=n.read(s)-l}else e[a]=0}return t.logs.readed},decodeIndices:function(e){for(var t=this,n=t.readBitStream(),i=new r,o=e.length;t.logs.length<o;)t.logs=new Uint8Array(o);i.decompress(this,t.logs);for(var a=0;a<t.logs.readed;a++){var s=t.logs[a];0!=s?e[a]=(1<<s)+n.read(s)-1:e[a]=0}return t.logs.readed}},r.prototype={wordsize:8,dictionary_size:256,starts:new Uint32Array(256),queue:new Uint32Array(512),index:new Uint32Array(512),lengths:new Uint32Array(512),table:new Uint8Array(8192),decompress:function(e,t){var n=e.readUChar();this.probs=e.readArray(2*n),this.createDecodingTables();var r=e.readInt();if(r>1e8)throw"TOO LARGE!";if(t||(t=new Uint8Array(r)),t.length<r)throw"Array for results too small";t.readed=r;var i=e.readInt();if(r>1e8)throw"TOO LARGE!";var o=e.readArray(i);return r&&this._decompress(o,i,t,r),t},createDecodingTables:function(){var e=this,t=e.probs.length/2;if(!(t<=1)){for(var n=r.prototype.queue,i=0,o=0,a=0,s=0;s<t;s++)n[s]=e.probs[2*s+1]<<8;for(var l=Math.floor((e.dictionary_size-1)/(t-1)),u=2,c=n[0],f=n[1],h=c*c>>>16;h>f&&u<l;)h=h*c>>>16,u++;if(u>=16){e.table[o++]=e.probs[0];for(var d=1;d<t;d++){for(s=0;s<u-1;s++)e.table[o++]=e.probs[0];e.table[o++]=e.probs[2*d]}e.starts[0]=(u-1)*t;for(d=1;d<t;d++)e.starts[d]=d;for(var p=0;p<u;p++){for(var _=1;_<t;_++){var b=_+p*t;p>0&&(n[b]=h*n[_]>>16),e.index[b]=_*u-p,e.lengths[b]=p+1}h=0==p?c:h*c>>>16}var m=(u-1)*t;n[m]=h,e.index[m]=0,e.lengths[m]=u,a=1+u*(t-1),i=u*t}else{for(s=0;s<t;s++)n[s]=e.probs[2*s+1]<<8,e.index[s]=s,e.lengths[s]=1,e.starts[s]=s,e.table[s]=e.probs[2*s];o=t,i=t,a=t}for(;a<e.dictionary_size;){var v=0,g=0;for(s=0;s<t;s++){var y=n[e.starts[s]];y>g&&(v=s,g=y)}var x=e.starts[v],E=e.index[x],T=e.lengths[x];for(s=0;s<t;s++){n[i]=n[s]*n[x]>>>16,e.index[i]=o,e.lengths[i]=T+1,i++;for(d=0;d<T;d++)e.table[o+d]=e.table[E+d];if(o+=T,e.table[o++]=e.probs[2*s],s+a==e.dictionary_size-1)break}s==t&&(e.starts[v]+=t),a+=t-1}var S=0;for(s=0,_=0;s<i;s++,_++)_>=t&&(_=0),e.starts[_]>s||(e.index[S]=e.index[s],e.lengths[S]=e.lengths[s],S++)}},_decompress:function(e,t,n,r){var i=0,o=0;if(2!=this.probs.length){for(;i<t-1;){l=e[i++];var a=(s=this.index[l])+this.lengths[l];for(u=s;u<a;u++)n[o++]=this.table[u]}var s;for(l=e[i],a=(s=this.index[l])+r-o,u=s;u<a;u++)n[o++]=this.table[u];return n}for(var l=this.probs[0],u=0;u<r;u++)n[u]=l}},i.prototype={Type:{UINT32:0,INT32:1,UINT16:2,INT16:3,UINT8:4,INT8:5,FLOAT:6,DOUBLE:7},Strategy:{PARALLEL:1,CORRELATED:2},init:function(e,t){var n=this,r=e*n.components;switch(n.values=new Int32Array(r),n.type){case n.Type.UINT32:case n.Type.INT32:n.values=n.buffer=new Int32Array(r);break;case n.Type.UINT16:case n.Type.INT16:n.buffer=new Int16Array(r);break;case n.Type.UINT8:n.buffer=new Uint8Array(r);break;case n.Type.INT8:n.buffer=new Int8Array(r);break;case n.Type.FLOAT:case n.Type.DOUBLE:n.buffer=new Float32Array(r);break;default:throw"Error if reading"}},decode:function(e,t){var n=this;n.strategy&n.Strategy.CORRELATED?t.decodeArray(n.components,n.values):t.decodeValues(n.components,n.values)},deltaDecode:function(e,t){var n=this,r=n.values,i=n.components;if(n.strategy&n.Strategy.PARALLEL)for(var o=t.length/3,a=1;a<o;a++)for(var s=0;s<i;s++)r[a*i+s]+=r[t[3*a]*i+s]+r[t[3*a+1]*i+s]-r[t[3*a+2]*i+s];else if(t)for(o=t.length/3,a=1;a<o;a++)for(s=0;s<i;s++)r[a*i+s]+=r[t[3*a]*i+s];else for(a=i;a<e*i;a++)r[a]+=r[a-i]},postDelta:function(){},dequantize:function(e){var t=this,n=t.components*e;switch(t.type){case t.Type.UINT32:case t.Type.INT32:break;case t.Type.UINT16:case t.Type.INT16:case t.Type.UINT8:case t.Type.INT8:for(var r=0;r<n;r++)t.buffer[r]=t.values[r]*t.q;break;case t.Type.FLOAT:case t.Type.DOUBLE:for(r=0;r<n;r++)t.buffer[r]=t.values[r]*t.q}}},o.prototype=Object.create(i.prototype),o.prototype.decode=function(e,t){for(var n=0;n<4;n++)this.qc[n]=t.readUChar();i.prototype.decode.call(this,e,t)},o.prototype.dequantize=function(e){for(var t=this,n=0;n<e;n++){var r=4*n,i=n*t.outcomponents,o=t.values[r+0],a=t.values[r+1],s=t.values[r+2];t.buffer[i+0]=(s+o)*t.qc[0]&255,t.buffer[i+1]=o*t.qc[1],t.buffer[i+2]=(a+o)*t.qc[2]&255}},a.prototype=Object.create(i.prototype),a.prototype.Prediction={DIFF:0,ESTIMATED:1,BORDER:2},a.prototype.init=function(e,t){var n=this,r=e*n.components;switch(n.values=new Int32Array(2*e),n.type){case n.Type.INT16:n.buffer=new Int16Array(r);break;case n.Type.FLOAT:case n.Type.DOUBLE:n.buffer=new Float32Array(r);break;default:throw"Error if reading"}},a.prototype.decode=function(e,t){this.prediction=t.readUChar(),t.decodeArray(2,this.values)},a.prototype.deltaDecode=function(e,t){var n=this;if(n.prediction==n.Prediction.DIFF)if(t)for(var r=1;r<e;r++)for(var i=0;i<2;i++){n.values[2*r+i];n.values[2*r+i]+=n.values[2*t[3*r]+i]}else for(r=2;r<2*e;r++){n.values[r];n.values[r]+=n.values[r-2]}},a.prototype.postDelta=function(e,t,n,r){var i=this;if(i.prediction!=i.Prediction.DIFF){if(!n.position)throw"No position attribute found. Use DIFF normal strategy instead.";var o=n.position;i.estimated=new Float32Array(3*e),i.estimateNormals(e,o.values,t,r.faces),i.prediction==i.Prediction.BORDER&&(i.boundary=new Uint32Array(e),i.markBoundary(e,t,r.faces,i.boundary)),i.computeNormals(e)}},a.prototype.dequantize=function(e){var t=this;if(t.prediction==t.Prediction.DIFF)for(var n=0;n<e;n++)t.toSphere(n,t.values,n,t.buffer,t.q)},a.prototype.computeNormals=function(e){var t=this,n=t.estimated;if(t.prediction==t.Prediction.ESTIMATED)for(var r=0;r<e;r++)t.toOcta(r,n,r,t.values,t.q),t.toSphere(r,t.values,r,t.buffer,t.q);else for(var i=0,o=(r=0,0);r<e;r++,o+=3)if(0!=t.boundary[r])t.toOcta(r,n,i,t.values,t.q),t.toSphere(i,t.values,r,t.buffer,t.q),i++;else{var a=1/Math.sqrt(n[o]*n[o]+n[o+1]*n[o+1]+n[o+2]*n[o+2]);t.type==t.Type.INT16&&(a*=32767),t.buffer[o]=n[o]*a,t.buffer[o+1]=n[o+1]*a,t.buffer[o+2]=n[o+2]*a}},a.prototype.markBoundary=function(e,t,n,r){for(var i=0;i<3*t;i+=3)r[n[i+0]]^=n[i+1]^n[i+2],r[n[i+1]]^=n[i+2]^n[i+0],r[n[i+2]]^=n[i+0]^n[i+1]},a.prototype.estimateNormals=function(e,t,n,r){for(var i=this,o=0;o<3*n;o+=3){var a=3*r[o+0],s=3*r[o+1],l=3*r[o+2],u=t[s+0]-t[a+0],c=t[s+1]-t[a+1],f=t[s+2]-t[a+2],h=t[l+0]-t[a+0],d=t[l+1]-t[a+1],p=t[l+2]-t[a+2],_=c*p-f*d,b=f*h-u*p,m=u*d-c*h;i.estimated[a+0]+=_,i.estimated[a+1]+=b,i.estimated[a+2]+=m,i.estimated[s+0]+=_,i.estimated[s+1]+=b,i.estimated[s+2]+=m,i.estimated[l+0]+=_,i.estimated[l+1]+=b,i.estimated[l+2]+=m}},a.prototype.toSphere=function(e,t,n,r,i){var o=2*e,a=3*n,s=t[o]>0?t[o]:-t[o],l=t[o+1]>0?t[o+1]:-t[o+1];r[a]=t[o],r[a+1]=t[o+1],r[a+2]=i-s-l,r[a+2]<0&&(r[a]=t[o]>0?i-l:l-i,r[a+1]=t[o+1]>0?i-s:s-i);var u=1/Math.sqrt(r[a]*r[a]+r[a+1]*r[a+1]+r[a+2]*r[a+2]);this.type==this.Type.INT16&&(u*=32767),r[a]*=u,r[a+1]*=u,r[a+2]*=u},a.prototype.toOcta=function(e,t,n,r,i){var o=2*n,a=3*e,s=(t[a]>0?t[a]:-t[a])+(t[a+1]>0?t[a+1]:-t[a+1])+(t[a+2]>0?t[a+2]:-t[a+2]),l=t[a]/s,u=t[a+1]/s,c=l>0?l:-l,f=u>0?u:-u;t[a+2]<0&&(l=t[a]>=0?1-f:f-1,u=t[a+1]>=0?1-c:c-1),r[o]+=l*i,r[o+1]+=u*i},s.prototype={decode:function(e){var t=this,n=e.readInt();t.front=new Int32Array(5*n);var i=new r;t.clers=i.decompress(e),t.bitstream=e.readBitStream()},decodeGroups:function(e){var t=e.readInt();this.groups=new Array(t);for(var n=0;n<t;n++){for(var r=e.readInt(),i=e.readUChar(),o={end:r,properties:{}},a=0;a<i;a++){var s=e.readString();o.properties[s]=e.readString()}this.groups[n]=o}}},onmessage=function(e){if("string"!=typeof e.data){var t=e.data.buffer;if(t){var n=new l(t);n.attributes.normal&&e.data.short_normals&&(n.attributes.normal.type=3),n.attributes.color&&e.data.rgba_colors&&(n.attributes.color.outcomponents=4);var r=n.decode();postMessage({model:r,buffer:t,request:e.data.request})}}},l.prototype={decode:function(){var e=this;for(var t in e.last=new Uint32Array(3*e.nvert),e.last_count=0,e.attributes)e.attributes[t].init(e.nvert,e.nface);return 0==e.nface?e.decodePointCloud():e.decodeMesh(),e.geometry},decodePointCloud:function(){var e=this;for(var t in e.index=new s(e.nvert,e.nface,0),e.index.decodeGroups(e.stream),e.geometry.groups=e.index.groups,e.attributes){var n=e.attributes[t];n.decode(e.nvert,e.stream),n.deltaDecode(e.nvert),n.dequantize(e.nvert),e.geometry[n.name]=n.buffer}},decodeMesh:function(){var e=this;e.index=new s(e.nvert,e.nface),e.index.decodeGroups(e.stream),e.index.decode(e.stream),e.vertex_count=0;var t=0;e.cler=0;for(var n=0;n<e.index.groups.length;n++){var r=e.index.groups[n].end;this.decodeFaces(3*t,3*r),t=r}for(var i in e.geometry.index=e.index.faces,e.geometry.groups=e.index.groups,e.attributes)e.attributes[i].decode(e.nvert,e.stream);for(var i in e.attributes)e.attributes[i].deltaDecode(e.nvert,e.index.prediction);for(var i in e.attributes)e.attributes[i].postDelta(e.nvert,e.nface,e.attributes,e.index);for(var i in e.attributes){var o=e.attributes[i];o.dequantize(e.nvert),e.geometry[o.name]=o.buffer}},ilog2:function(e){for(var t=0;e>>=1;)++t;return t},decodeFaces:function(e,t){var n=this,r=n.index.clers,i=n.index.bitstream,o=n.index.front,a=0;function s(e,t,n,r,i){o[a]=e,o[a+1]=t,o[a+2]=n,o[a+3]=r,o[a+4]=i,a+=5}for(var l=new Uint32Array(t-e),u=0,c=0,f=[],h=n.ilog2(n.nvert)+1,d=-1,p=n.index.prediction;e<t;)if(-1==d&&u>=c&&!f.length){var _=n.vertex_count-1,b=[],m=0;6==r[n.cler++]&&(m=i.read(3));for(var v=0;v<3;v++){var g;m&1<<v?g=i.read(h):(p[3*n.vertex_count]=p[3*n.vertex_count+1]=p[3*n.vertex_count+2]=_,_=g=n.vertex_count++),b[v]=g,n.index.faces[e++]=g}var y=a;l[c++]=a,s(b[1],b[2],b[0],y+10,y+5),l[c++]=a,s(b[2],b[0],b[1],y+0,y+10),l[c++]=a,s(b[0],b[1],b[2],y+5,y+0)}else{var x;if(-1!=d?(x=d,d=-1):x=u<c?l[u++]:f.pop(),void 0===x)throw"aarrhhj";if(!(o[x]<0)){var E=r[n.cler++];if(4!=E){var T=o[x+0],S=o[x+1],R=o[x+2],M=o[x+3],N=o[x+4];d=a;var A=-1;if(0==E||6==E)6==E?A=i.read(h):(p[3*n.vertex_count]=S,p[3*n.vertex_count+1]=T,p[3*n.vertex_count+2]=R,A=n.vertex_count++),o[M+4]=d,o[N+3]=d+5,o[a]=T,o[a+1]=A,o[a+2]=S,o[a+3]=M,o[a+4]=d+5,a+=5,l[c++]=a,o[a]=A,o[a+1]=S,o[a+2]=T,o[a+3]=d,o[a+4]=N,a+=5;else if(1==E)o[o[M+3]+4]=d,o[N+3]=d,A=o[M],o[a]=A,o[a+1]=S,o[a+2]=T,o[a+3]=o[M+3],o[a+4]=N,a+=5,o[M]=-1;else if(2==E)o[o[N+4]+3]=d,o[M+4]=d,A=o[N+1],o[a]=T,o[a+1]=A,o[a+2]=S,o[a+3]=M,o[a+4]=o[N+4],a+=5,o[N]=-1;else{if(5==E){f.push(x),d=-1;continue}if(3!=E)throw"INVALID CLER!";o[o[M+3]+4]=o[N+4],o[o[N+4]+3]=o[M+3],A=o[M],o[M]=-1,o[N]=-1,d=-1}if(S>=n.nvert||T>=n.nvert||A>=n.nvert)throw"Topological error";n.index.faces[e]=S,n.index.faces[e+1]=T,n.index.faces[e+2]=A,e+=3}}}}},t.exports=l},{}],5:[function(e,t,n){const r=e("./AttributeNames"),i=e("./WebGLConstants"),{Mesh:o,MeshLayout:a}=e("./Mesh");t.exports=class extends o{constructor(){super("cube");var e=new a;e.addAttributes([{name:r.Position,size:3,data:[.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5,.5,.5,.5,.5,.5,-.5,-.5,.5,-.5,-.5,-.5,-.5,.5,-.5,-.5,.5,.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5,.5,.5,-.5,.5,.5,-.5,-.5,.5,-.5,-.5,-.5,-.5,.5,-.5,-.5,.5,.5,-.5,.5,-.5,.5,.5,-.5,.5,.5,.5,.5,-.5,.5,.5,-.5,-.5,-.5,-.5,-.5,-.5,-.5,.5]},{name:r.Normal,size:3,data:[0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0]},{name:r.UV1,size:2,data:[1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0]}],i.FLOAT,r.Static),e.setIndex([0,2,1,0,3,2,4,6,5,4,7,6,8,10,9,8,11,10,12,14,13,12,15,14,16,18,17,16,19,18,20,22,21,20,23,22],r.Static),this.buildByLayout(e)}}},{"./AttributeNames":1,"./Mesh":18,"./WebGLConstants":38}],6:[function(e,t,n){const r=e("./Texture"),i=e("./WebGLConstants");t.exports=class extends r{constructor(e){(e=e||{}).wrapT=e.wrapT||i.CLAMP_TO_EDGE,e.wrapS=e.wrapS||i.CLAMP_TO_EDGE,e.mipMaping=void 0===e.mipMaping||e.mipMaping,super(e),this.name=e.name||"untitled",this._flipY=!1}get isCubeMap(){return!0}}},{"./Texture":33,"./WebGLConstants":38}],7:[function(e,t,n){const r=e("./Texture"),i=e("./WebGLConstants");class o extends r{constructor(e,t,n){(n=n||{}).magFilter=n.magFilter||i.NEAREST,n.minFilter=n.minFilter||i.NEAREST,n.mipMaping=!1,super(n),this.width=e,this.height=t,this._flipY=!1}}o.createFloat4=(e,t,n,r=!1)=>{const a=new Float32Array(e*t*4);return n&&n(a),new o(e,t,{format:i.RGBA,dataType:i.FLOAT,wrapS:i.CLAMP_TO_EDGE,wrapT:i.CLAMP_TO_EDGE,magFilter:r?i.LINEAR:i.NEAREST,minFilter:r?i.LINEAR:i.NEAREST,anistropy:1,width:e,height:t,source:a})},t.exports=o},{"./Texture":33,"./WebGLConstants":38}],8:[function(e,t,n){t.exports=class{constructor(e,t){this._current=new Float32Array(e),this._target=new Float32Array(e),this._delta=new Float32Array(e),this._delay=void 0!==t?t:.15,this._reset=!1,this._start=0,this.reset()}setDelay(e){this._delay=e}reset(){for(var e=0,t=this._current.length;e<t;e++)this._current[e]=this._target[e]=0;this._reset=!0}update(e){for(var t=Math.min(1,this._delay*e*60),n=0,r=this._current.length;n<r;n++){var i=(this._target[n]-this._current[n])*t;this._delta[n]=i,this._current[n]+=i}return this._delta}set(){for(var e=0,t=this._current.length;e<t;e++)this._current[e]=this._target[e]=arguments[e];this._reset=!1}isReset(){return this._reset}getCurrent(){return this._current}setTarget(){for(var e=0,t=this._target.length;e<t;e++)this._reset?this._target[e]=this._current[e]=arguments[e]:this._target[e]=arguments[e];this._reset=!1}addTarget(){for(var e=0;e<arguments.length;e++)this._target[e]+=arguments[e]}getTarget(){return this._target}getDelta(){return this._delta}getStart(){return this._start}setStart(e){this._start=e}}},{}],9:[function(e,t,n){t.exports=class{constructor(e,t){this._enabled=!0,this._name=t,this._mask=[],this._events={},this._mappings={},this._eventManager=e,this._boundCallback=this._collectNativeEvents.bind(this),this._priority=10,this._hasSources=!1}addMappings(e,t){for(var n in e)e[this._name+":"+n]=e[n],delete e[n];this._eventManager.addMappings(e,t)}_collectNativeEvents(e){if(this._enabled&&!this._mask.length){var t=this._mappings[e.type];if(t)for(var n=0;n<t.length;n++){var r=t[n];if(!r._source.isEventRegistered||r._source.isEventRegistered(e,r._parsedEvent)){if(r._source.populateEvent(e,r),r._nativeEvents||(r._nativeEvents=[]),!r._nativeEvents.length){var i=this._eventManager._queues[r._priority];i||(i=[],this._eventManager._queues[r._priority]=i),i.push(r)}r._nativeEvents.push(e)}}}}_addEvent(e,t){var n,r=this._name+":"+t,i=!1,o=this._mappings[e.name];o?n=this._findEvent(o,r,e.raw):(o=[],this._mappings[e.name]=o,i=!0);var a=this._events[t];a||(a=[],this._events[t]=a),n||(n=new Event(r),o.push(n),a.push(n)),n._parsedEvent=e,n._priority=10;var s=this._eventManager._getSource(e.name);s&&(this._enabled&&i&&s.setEnable(e.name,this._boundCallback,!0),this._hasSources=!0,n._source=s)}_findEvent(e,t,n){for(var r=0;r<e.length;r++){var i=e[r];if(i.type===t&&i._parsedEvent.raw===n)return i}}_setEnable(e){for(var t in this._enabled=e,this._mappings){var n=this._mappings[t][0];n._source&&n._source.setEnable(t,this._boundCallback,e)}}}},{}],10:[function(e,t,n){const r=e("./EventGroup");var i=["shift","alt","ctrl","meta"];t.exports=class{constructor(){this._groups={},this._sources=[],this._queues=[],this._queues[10]=[],this._callbacks={},this._params={},this._maskedGroups=[],window.dumpEventGroups=this._dumpEventGroups.bind(this),window.dumpEventSequence=this._dumpEventSequence.bind(this)}registerEventSource(e){if(!e.setEnable||!e.supportsEvent||!e.getName)throw"Invalid input target "+JSON.stringify(e);this._sources.push(e),e.setEventManager(this)}getEventSource(e){for(var t=0;t<this._sources.length;t++){var n=this._sources[t];if(n.getName()===e)return n}}addMappings(e,t){for(var n in e){var r=e[n],i=n.split(":");if(2!==i.length)throw"Mapping should be of the form 'group:methodName': ['nativeevent1’, 'nativeevent2',...] ";var o,a,s=this._getOrCreateGroup(i[0]),l=i[1];if(t)if("object"==typeof t){if(!(o=t[l])||"function"!=typeof o)throw"Cannot find method "+l+" on "+t;o=o.bind(t)}else{if("function"!=typeof t)throw"Invalid listener "+t;o=t}if("string"==typeof r)a=this._parseNativeEvent(r),s._addEvent(a,l);else for(var u=0;u<r.length;u++){var c=r[u];a=this._parseNativeEvent(c),s._addEvent(a,l)}this._callbacks[s._name+":"+l]=o}}group(e){return this._getOrCreateGroup(e)}setEnable(e,t){var n,r=this._groups[e];for(var i in r&&r._setEnable(t),this._groups)r=this._groups[i],t?(n=r._mask.indexOf(e))>=0&&(r._mask.splice(n,1),this._maskedGroups.splice(this._maskedGroups.indexOf(e),1)):0===(n=r._name.indexOf(e))&&"."===r._name[n+e.length]&&(r._mask.push(e),this._maskedGroups.push(e));if(!t)for(var o=0;o<this._queues.length;o++){var a=this._queues[o];if(a)for(var s=a.length-1;s>=0;s--){var l=a[s];l.type.indexOf(e)>=0&&(a.splice(s,1),l._nativeEvents.length=0)}}}setPriority(e,t){var n=e.split(":");if(t<0)throw"priority must be a positive number";var r,i,o=this._groups[n[0]];if(o&&n[1]){for(r=o._events[n[1]],i=0;i<r.length;i++)r[i]._priority=t;o._priority>t&&(o._priority=t)}else for(var a in this._groups)if((o=this._groups[a])._name.indexOf(e)>=0)for(var s in o._events)for(r=o._events[s],i=0;i<r.length;i++)r[i]._priority=t}getHigherPriority(e){var t=10;for(var n in this._groups){var r=this._groups[n];r._name.indexOf(e)>=0&&r._priority<t&&(t=r._priority)}return t>0?t-1:0}getParam(e){return this._params[e]}setParam(e,t){this._params[e]=t}cleanup(){for(var e in this._groups){this._groups[e]._setEnable(!1)}}_parseNativeEvent(e){var t,n=e.split(" "),r={};for(r.name=n[0],t=1;t<n.length;t++){var o=n[t],a=!0;0===o.indexOf("!")&&(a=!1,o=o.substring(1,o.length)),i.indexOf(o)>=0?r[o]=a:r.action=o.toLowerCase()}if(r.action)for(t=0;t<i.length;t++){var s=i[t];0===r.action.indexOf(s)&&(r[s]=!0)}return 0===r.name.indexOf("key")&&!r.action&&n.length>1&&(r.action=n[n.length-1]),r.raw=e,r}_getOrCreateGroup(e){var t=this._groups[e];if(!t){t=new r(this,e),this._groups[e]=t;for(var n=0;n<this._maskedGroups.length;n++){var i=this._maskedGroups[n];0===e.indexOf(i)&&t._mask.push(i)}}return t}update(){var e;for(e=0;e<this._sources.length;e++){var t=this._sources[e];t.poll&&t.poll()}for(e=0;e<this._queues.length;e++){var n=this._queues[e];if(n){for(var r=0;r<n.length;r++){var i=n[r];this._callbacks[i.type](i),i._nativeEvents.length=0}n.length=0}}}_getSource(e){for(var t=0;t<this._sources.length;t++){var n=this._sources[t];if(n.supportsEvent(e))return n}}_dumpEventGroups(e,t){}_dumpEventSequence(e,t){}}},{"./EventGroup":9}],11:[function(e,t,n){t.exports=class{constructor(e){this._target=e,this._supportedEvents=[]}supportsEvent(e){for(var t=0;t<this._supportedEvents.length;t++){var n=this._supportedEvents[t];if(0===e.indexOf(n))return!0}return!1}setEventManager(e){this._eventManager=e}}},{}],12:[function(e,t,n){var r=r||{};r.keyFrame=function(){this.bb=null,this.bb_pos=0},r.keyFrame.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.keyFrame.prototype.key=function(){return this.bb.readFloat32(this.bb_pos)},r.keyFrame.prototype.value=function(){return this.bb.readFloat32(this.bb_pos+4)},r.keyFrame.createkeyFrame=function(e,t,n){return e.prep(4,8),e.writeFloat32(n),e.writeFloat32(t),e.offset()},r.keyFrame2=function(){this.bb=null,this.bb_pos=0},r.keyFrame2.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.keyFrame2.prototype.key=function(){return this.bb.readFloat32(this.bb_pos)},r.keyFrame2.prototype.value=function(e){return(e||new r.Vec2).__init(this.bb_pos+4,this.bb)},r.keyFrame2.createkeyFrame2=function(e,t,n,r){return e.prep(4,12),e.prep(4,8),e.writeFloat32(r),e.writeFloat32(n),e.writeFloat32(t),e.offset()},r.keyFrame3=function(){this.bb=null,this.bb_pos=0},r.keyFrame3.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.keyFrame3.prototype.key=function(){return this.bb.readFloat32(this.bb_pos)},r.keyFrame3.prototype.value=function(e){return(e||new r.Vec3).__init(this.bb_pos+4,this.bb)},r.keyFrame3.createkeyFrame3=function(e,t,n,r,i){return e.prep(4,16),e.prep(4,12),e.writeFloat32(i),e.writeFloat32(r),e.writeFloat32(n),e.writeFloat32(t),e.offset()},r.keyFrame4=function(){this.bb=null,this.bb_pos=0},r.keyFrame4.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.keyFrame4.prototype.key=function(){return this.bb.readFloat32(this.bb_pos)},r.keyFrame4.prototype.value=function(e){return(e||new r.Vec4).__init(this.bb_pos+4,this.bb)},r.keyFrame4.createkeyFrame4=function(e,t,n,r,i,o){return e.prep(4,20),e.prep(4,16),e.writeFloat32(o),e.writeFloat32(i),e.writeFloat32(r),e.writeFloat32(n),e.writeFloat32(t),e.offset()},r.NodeAnimation=function(){this.bb=null,this.bb_pos=0},r.NodeAnimation.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.NodeAnimation.getRootAsNodeAnimation=function(e,t){return(t||new r.NodeAnimation).__init(e.readInt32(e.position())+e.position(),e)},r.NodeAnimation.prototype.nodeId=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.NodeAnimation.prototype.position=function(e,t){var n=this.bb.__offset(this.bb_pos,6);return n?(t||new r.keyFrame3).__init(this.bb.__vector(this.bb_pos+n)+16*e,this.bb):null},r.NodeAnimation.prototype.positionLength=function(){var e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0},r.NodeAnimation.prototype.rotation=function(e,t){var n=this.bb.__offset(this.bb_pos,8);return n?(t||new r.keyFrame3).__init(this.bb.__vector(this.bb_pos+n)+16*e,this.bb):null},r.NodeAnimation.prototype.rotationLength=function(){var e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0},r.NodeAnimation.prototype.scale=function(e,t){var n=this.bb.__offset(this.bb_pos,10);return n?(t||new r.keyFrame3).__init(this.bb.__vector(this.bb_pos+n)+16*e,this.bb):null},r.NodeAnimation.prototype.scaleLength=function(){var e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0},r.NodeAnimation.prototype.quarternion=function(e,t){var n=this.bb.__offset(this.bb_pos,12);return n?(t||new r.keyFrame4).__init(this.bb.__vector(this.bb_pos+n)+20*e,this.bb):null},r.NodeAnimation.prototype.quarternionLength=function(){var e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0},r.NodeAnimation.startNodeAnimation=function(e){e.startObject(5)},r.NodeAnimation.addNodeId=function(e,t){e.addFieldOffset(0,t,0)},r.NodeAnimation.addPosition=function(e,t){e.addFieldOffset(1,t,0)},r.NodeAnimation.startPositionVector=function(e,t){e.startVector(16,t,4)},r.NodeAnimation.addRotation=function(e,t){e.addFieldOffset(2,t,0)},r.NodeAnimation.startRotationVector=function(e,t){e.startVector(16,t,4)},r.NodeAnimation.addScale=function(e,t){e.addFieldOffset(3,t,0)},r.NodeAnimation.startScaleVector=function(e,t){e.startVector(16,t,4)},r.NodeAnimation.addQuarternion=function(e,t){e.addFieldOffset(4,t,0)},r.NodeAnimation.startQuarternionVector=function(e,t){e.startVector(20,t,4)},r.NodeAnimation.endNodeAnimation=function(e){return e.endObject()},r.MorphTargetAnimation=function(){this.bb=null,this.bb_pos=0},r.MorphTargetAnimation.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.MorphTargetAnimation.getRootAsMorphTargetAnimation=function(e,t){return(t||new r.MorphTargetAnimation).__init(e.readInt32(e.position())+e.position(),e)},r.MorphTargetAnimation.prototype.property=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.MorphTargetAnimation.prototype.data=function(e,t){var n=this.bb.__offset(this.bb_pos,6);return n?(t||new r.keyFrame).__init(this.bb.__vector(this.bb_pos+n)+8*e,this.bb):null},r.MorphTargetAnimation.prototype.dataLength=function(){var e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0},r.MorphTargetAnimation.startMorphTargetAnimation=function(e){e.startObject(2)},r.MorphTargetAnimation.addProperty=function(e,t){e.addFieldOffset(0,t,0)},r.MorphTargetAnimation.addData=function(e,t){e.addFieldOffset(1,t,0)},r.MorphTargetAnimation.startDataVector=function(e,t){e.startVector(8,t,4)},r.MorphTargetAnimation.endMorphTargetAnimation=function(e){return e.endObject()},r.MorphAnimation=function(){this.bb=null,this.bb_pos=0},r.MorphAnimation.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.MorphAnimation.getRootAsMorphAnimation=function(e,t){return(t||new r.MorphAnimation).__init(e.readInt32(e.position())+e.position(),e)},r.MorphAnimation.prototype.morphId=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.MorphAnimation.prototype.channels=function(e,t){var n=this.bb.__offset(this.bb_pos,6);return n?(t||new r.MorphTargetAnimation).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.MorphAnimation.prototype.channelsLength=function(){var e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0},r.MorphAnimation.startMorphAnimation=function(e){e.startObject(2)},r.MorphAnimation.addMorphId=function(e,t){e.addFieldOffset(0,t,0)},r.MorphAnimation.addChannels=function(e,t){e.addFieldOffset(1,t,0)},r.MorphAnimation.createChannelsVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.MorphAnimation.startChannelsVector=function(e,t){e.startVector(4,t,4)},r.MorphAnimation.endMorphAnimation=function(e){return e.endObject()},r.Animation=function(){this.bb=null,this.bb_pos=0},r.Animation.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Animation.getRootAsAnimation=function(e,t){return(t||new r.Animation).__init(e.readInt32(e.position())+e.position(),e)},r.Animation.bufferHasIdentifier=function(e){return e.__has_identifier("FLBS")},r.Animation.prototype.name=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.Animation.prototype.from=function(){var e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readFloat32(this.bb_pos+e):0},r.Animation.prototype.to=function(){var e=this.bb.__offset(this.bb_pos,8);return e?this.bb.readFloat32(this.bb_pos+e):0},r.Animation.prototype.animateNodes=function(e,t){var n=this.bb.__offset(this.bb_pos,10);return n?(t||new r.NodeAnimation).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.Animation.prototype.animateNodesLength=function(){var e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Animation.prototype.animateMorphs=function(e,t){var n=this.bb.__offset(this.bb_pos,12);return n?(t||new r.MorphAnimation).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.Animation.prototype.animateMorphsLength=function(){var e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Animation.startAnimation=function(e){e.startObject(5)},r.Animation.addName=function(e,t){e.addFieldOffset(0,t,0)},r.Animation.addFrom=function(e,t){e.addFieldFloat32(1,t,0)},r.Animation.addTo=function(e,t){e.addFieldFloat32(2,t,0)},r.Animation.addAnimateNodes=function(e,t){e.addFieldOffset(3,t,0)},r.Animation.createAnimateNodesVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.Animation.startAnimateNodesVector=function(e,t){e.startVector(4,t,4)},r.Animation.addAnimateMorphs=function(e,t){e.addFieldOffset(4,t,0)},r.Animation.createAnimateMorphsVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.Animation.startAnimateMorphsVector=function(e,t){e.startVector(4,t,4)},r.Animation.endAnimation=function(e){return e.endObject()},r.Animation.finishAnimationBuffer=function(e,t){e.finish(t,"FLBS")},r.LIGHTTYPE={POINT:0,0:"POINT",DIRECTION:1,1:"DIRECTION",SPOT:2,2:"SPOT"},r.AbstractNode={NONE:0,0:"NONE",BaseNode:1,1:"BaseNode",MeshNode:2,2:"MeshNode"},r.Vec2=function(){this.bb=null,this.bb_pos=0},r.Vec2.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Vec2.prototype.x=function(){return this.bb.readFloat32(this.bb_pos)},r.Vec2.prototype.y=function(){return this.bb.readFloat32(this.bb_pos+4)},r.Vec2.createVec2=function(e,t,n){return e.prep(4,8),e.writeFloat32(n),e.writeFloat32(t),e.offset()},r.Vec3=function(){this.bb=null,this.bb_pos=0},r.Vec3.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Vec3.prototype.x=function(){return this.bb.readFloat32(this.bb_pos)},r.Vec3.prototype.y=function(){return this.bb.readFloat32(this.bb_pos+4)},r.Vec3.prototype.z=function(){return this.bb.readFloat32(this.bb_pos+8)},r.Vec3.createVec3=function(e,t,n,r){return e.prep(4,12),e.writeFloat32(r),e.writeFloat32(n),e.writeFloat32(t),e.offset()},r.Vec4=function(){this.bb=null,this.bb_pos=0},r.Vec4.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Vec4.prototype.x=function(){return this.bb.readFloat32(this.bb_pos)},r.Vec4.prototype.y=function(){return this.bb.readFloat32(this.bb_pos+4)},r.Vec4.prototype.z=function(){return this.bb.readFloat32(this.bb_pos+8)},r.Vec4.prototype.w=function(){return this.bb.readFloat32(this.bb_pos+12)},r.Vec4.createVec4=function(e,t,n,r,i){return e.prep(4,16),e.writeFloat32(i),e.writeFloat32(r),e.writeFloat32(n),e.writeFloat32(t),e.offset()},r.Transform=function(){this.bb=null,this.bb_pos=0},r.Transform.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Transform.getRootAsTransform=function(e,t){return(t||new r.Transform).__init(e.readInt32(e.position())+e.position(),e)},r.Transform.prototype.position=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?(e||new r.Vec3).__init(this.bb_pos+t,this.bb):null},r.Transform.prototype.rotation=function(e){var t=this.bb.__offset(this.bb_pos,6);return t?(e||new r.Vec4).__init(this.bb_pos+t,this.bb):null},r.Transform.prototype.scale=function(e){var t=this.bb.__offset(this.bb_pos,8);return t?(e||new r.Vec3).__init(this.bb_pos+t,this.bb):null},r.Transform.startTransform=function(e){e.startObject(3)},r.Transform.addPosition=function(e,t){e.addFieldStruct(0,t,0)},r.Transform.addRotation=function(e,t){e.addFieldStruct(1,t,0)},r.Transform.addScale=function(e,t){e.addFieldStruct(2,t,0)},r.Transform.endTransform=function(e){return e.endObject()},r.Transform.createTransform=function(e,t,n,i){return r.Transform.startTransform(e),r.Transform.addPosition(e,t),r.Transform.addRotation(e,n),r.Transform.addScale(e,i),r.Transform.endTransform(e)},r.Matrix4=function(){this.bb=null,this.bb_pos=0},r.Matrix4.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Matrix4.getRootAsMatrix4=function(e,t){return(t||new r.Matrix4).__init(e.readInt32(e.position())+e.position(),e)},r.Matrix4.prototype.data=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0},r.Matrix4.prototype.dataLength=function(){var e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Matrix4.prototype.dataArray=function(){var e=this.bb.__offset(this.bb_pos,4);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null},r.Matrix4.startMatrix4=function(e){e.startObject(1)},r.Matrix4.addData=function(e,t){e.addFieldOffset(0,t,0)},r.Matrix4.createDataVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addFloat32(t[n]);return e.endVector()},r.Matrix4.startDataVector=function(e,t){e.startVector(4,t,4)},r.Matrix4.endMatrix4=function(e){return e.endObject()},r.Matrix4.createMatrix4=function(e,t){return r.Matrix4.startMatrix4(e),r.Matrix4.addData(e,t),r.Matrix4.endMatrix4(e)},r.Light=function(){this.bb=null,this.bb_pos=0},r.Light.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Light.getRootAsLight=function(e,t){return(t||new r.Light).__init(e.readInt32(e.position())+e.position(),e)},r.Light.prototype.name=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.Light.prototype.linkNodeId=function(e){var t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null},r.Light.prototype.type=function(){var e=this.bb.__offset(this.bb_pos,8);return e?this.bb.readInt8(this.bb_pos+e):r.LIGHTTYPE.POINT},r.Light.prototype.color=function(e){var t=this.bb.__offset(this.bb_pos,10);return t?(e||new r.Vec3).__init(this.bb_pos+t,this.bb):null},r.Light.prototype.intensity=function(){var e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readFloat32(this.bb_pos+e):0},r.Light.prototype.range=function(){var e=this.bb.__offset(this.bb_pos,14);return e?this.bb.readFloat32(this.bb_pos+e):0},r.Light.prototype.innerAngle=function(){var e=this.bb.__offset(this.bb_pos,16);return e?this.bb.readFloat32(this.bb_pos+e):0},r.Light.prototype.angle=function(){var e=this.bb.__offset(this.bb_pos,18);return e?this.bb.readFloat32(this.bb_pos+e):0},r.Light.prototype.castShadows=function(){var e=this.bb.__offset(this.bb_pos,20);return!!e&&!!this.bb.readInt8(this.bb_pos+e)},r.Light.startLight=function(e){e.startObject(9)},r.Light.addName=function(e,t){e.addFieldOffset(0,t,0)},r.Light.addLinkNodeId=function(e,t){e.addFieldOffset(1,t,0)},r.Light.addType=function(e,t){e.addFieldInt8(2,t,r.LIGHTTYPE.POINT)},r.Light.addColor=function(e,t){e.addFieldStruct(3,t,0)},r.Light.addIntensity=function(e,t){e.addFieldFloat32(4,t,0)},r.Light.addRange=function(e,t){e.addFieldFloat32(5,t,0)},r.Light.addInnerAngle=function(e,t){e.addFieldFloat32(6,t,0)},r.Light.addAngle=function(e,t){e.addFieldFloat32(7,t,0)},r.Light.addCastShadows=function(e,t){e.addFieldInt8(8,+t,0)},r.Light.endLight=function(e){return e.endObject()},r.Light.createLight=function(e,t,n,i,o,a,s,l,u,c){return r.Light.startLight(e),r.Light.addName(e,t),r.Light.addLinkNodeId(e,n),r.Light.addType(e,i),r.Light.addColor(e,o),r.Light.addIntensity(e,a),r.Light.addRange(e,s),r.Light.addInnerAngle(e,l),r.Light.addAngle(e,u),r.Light.addCastShadows(e,c),r.Light.endLight(e)},r.Camera=function(){this.bb=null,this.bb_pos=0},r.Camera.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Camera.getRootAsCamera=function(e,t){return(t||new r.Camera).__init(e.readInt32(e.position())+e.position(),e)},r.Camera.prototype.name=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.Camera.prototype.type=function(e){var t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null},r.Camera.prototype.linkNodeId=function(e){var t=this.bb.__offset(this.bb_pos,8);return t?this.bb.__string(this.bb_pos+t,e):null},r.Camera.prototype.lockTargetId=function(e){var t=this.bb.__offset(this.bb_pos,10);return t?this.bb.__string(this.bb_pos+t,e):null},r.Camera.prototype.fov=function(){var e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readFloat32(this.bb_pos+e):0},r.Camera.prototype.nearDistance=function(){var e=this.bb.__offset(this.bb_pos,14);return e?this.bb.readFloat32(this.bb_pos+e):0},r.Camera.prototype.farDistance=function(){var e=this.bb.__offset(this.bb_pos,16);return e?this.bb.readFloat32(this.bb_pos+e):0},r.Camera.startCamera=function(e){e.startObject(7)},r.Camera.addName=function(e,t){e.addFieldOffset(0,t,0)},r.Camera.addType=function(e,t){e.addFieldOffset(1,t,0)},r.Camera.addLinkNodeId=function(e,t){e.addFieldOffset(2,t,0)},r.Camera.addLockTargetId=function(e,t){e.addFieldOffset(3,t,0)},r.Camera.addFov=function(e,t){e.addFieldFloat32(4,t,0)},r.Camera.addNearDistance=function(e,t){e.addFieldFloat32(5,t,0)},r.Camera.addFarDistance=function(e,t){e.addFieldFloat32(6,t,0)},r.Camera.endCamera=function(e){return e.endObject()},r.Camera.createCamera=function(e,t,n,i,o,a,s,l){return r.Camera.startCamera(e),r.Camera.addName(e,t),r.Camera.addType(e,n),r.Camera.addLinkNodeId(e,i),r.Camera.addLockTargetId(e,o),r.Camera.addFov(e,a),r.Camera.addNearDistance(e,s),r.Camera.addFarDistance(e,l),r.Camera.endCamera(e)},r.BaseNode=function(){this.bb=null,this.bb_pos=0},r.BaseNode.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.BaseNode.getRootAsBaseNode=function(e,t){return(t||new r.BaseNode).__init(e.readInt32(e.position())+e.position(),e)},r.BaseNode.prototype.name=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.BaseNode.prototype.id=function(e){var t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null},r.BaseNode.prototype.transform=function(e){var t=this.bb.__offset(this.bb_pos,8);return t?(e||new r.Transform).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null},r.BaseNode.startBaseNode=function(e){e.startObject(3)},r.BaseNode.addName=function(e,t){e.addFieldOffset(0,t,0)},r.BaseNode.addId=function(e,t){e.addFieldOffset(1,t,0)},r.BaseNode.addTransform=function(e,t){e.addFieldOffset(2,t,0)},r.BaseNode.endBaseNode=function(e){return e.endObject()},r.BaseNode.createBaseNode=function(e,t,n,i){return r.BaseNode.startBaseNode(e),r.BaseNode.addName(e,t),r.BaseNode.addId(e,n),r.BaseNode.addTransform(e,i),r.BaseNode.endBaseNode(e)},r.SubMesh=function(){this.bb=null,this.bb_pos=0},r.SubMesh.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.SubMesh.getRootAsSubMesh=function(e,t){return(t||new r.SubMesh).__init(e.readInt32(e.position())+e.position(),e)},r.SubMesh.prototype.materialIndex=function(){var e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readInt32(this.bb_pos+e):0},r.SubMesh.prototype.indexStart=function(){var e=this.bb.__offset(this.bb_pos,6);return e?this.bb.readInt32(this.bb_pos+e):0},r.SubMesh.prototype.indexCount=function(){var e=this.bb.__offset(this.bb_pos,8);return e?this.bb.readInt32(this.bb_pos+e):0},r.SubMesh.prototype.verticesStart=function(){var e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readInt32(this.bb_pos+e):0},r.SubMesh.prototype.verticesCount=function(){var e=this.bb.__offset(this.bb_pos,12);return e?this.bb.readInt32(this.bb_pos+e):0},r.SubMesh.startSubMesh=function(e){e.startObject(5)},r.SubMesh.addMaterialIndex=function(e,t){e.addFieldInt32(0,t,0)},r.SubMesh.addIndexStart=function(e,t){e.addFieldInt32(1,t,0)},r.SubMesh.addIndexCount=function(e,t){e.addFieldInt32(2,t,0)},r.SubMesh.addVerticesStart=function(e,t){e.addFieldInt32(3,t,0)},r.SubMesh.addVerticesCount=function(e,t){e.addFieldInt32(4,t,0)},r.SubMesh.endSubMesh=function(e){return e.endObject()},r.SubMesh.createSubMesh=function(e,t,n,i,o,a){return r.SubMesh.startSubMesh(e),r.SubMesh.addMaterialIndex(e,t),r.SubMesh.addIndexStart(e,n),r.SubMesh.addIndexCount(e,i),r.SubMesh.addVerticesStart(e,o),r.SubMesh.addVerticesCount(e,a),r.SubMesh.endSubMesh(e)},r.MeshNode=function(){this.bb=null,this.bb_pos=0},r.MeshNode.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.MeshNode.getRootAsMeshNode=function(e,t){return(t||new r.MeshNode).__init(e.readInt32(e.position())+e.position(),e)},r.MeshNode.prototype.name=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.MeshNode.prototype.id=function(e){var t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null},r.MeshNode.prototype.transform=function(e){var t=this.bb.__offset(this.bb_pos,8);return t?(e||new r.Transform).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null},r.MeshNode.prototype.visible=function(){var e=this.bb.__offset(this.bb_pos,10);return!!e&&!!this.bb.readInt8(this.bb_pos+e)},r.MeshNode.prototype.subMeshes=function(e,t){var n=this.bb.__offset(this.bb_pos,12);return n?(t||new r.SubMesh).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.MeshNode.prototype.subMeshesLength=function(){var e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0},r.MeshNode.prototype.geometry=function(e){var t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readUint8(this.bb.__vector(this.bb_pos+t)+e):0},r.MeshNode.prototype.geometryLength=function(){var e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0},r.MeshNode.prototype.geometryArray=function(){var e=this.bb.__offset(this.bb_pos,14);return e?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null},r.MeshNode.prototype.wireframe=function(e){var t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+4*e):0},r.MeshNode.prototype.wireframeLength=function(){var e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0},r.MeshNode.prototype.wireframeArray=function(){var e=this.bb.__offset(this.bb_pos,16);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null},r.MeshNode.prototype.receiveShadow=function(){var e=this.bb.__offset(this.bb_pos,18);return!!e&&!!this.bb.readInt8(this.bb_pos+e)},r.MeshNode.prototype.castShadow=function(){var e=this.bb.__offset(this.bb_pos,20);return!!e&&!!this.bb.readInt8(this.bb_pos+e)},r.MeshNode.prototype.skinId=function(e){var t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__string(this.bb_pos+t,e):null},r.MeshNode.prototype.morphId=function(e){var t=this.bb.__offset(this.bb_pos,24);return t?this.bb.__string(this.bb_pos+t,e):null},r.MeshNode.startMeshNode=function(e){e.startObject(11)},r.MeshNode.addName=function(e,t){e.addFieldOffset(0,t,0)},r.MeshNode.addId=function(e,t){e.addFieldOffset(1,t,0)},r.MeshNode.addTransform=function(e,t){e.addFieldOffset(2,t,0)},r.MeshNode.addVisible=function(e,t){e.addFieldInt8(3,+t,0)},r.MeshNode.addSubMeshes=function(e,t){e.addFieldOffset(4,t,0)},r.MeshNode.createSubMeshesVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.MeshNode.startSubMeshesVector=function(e,t){e.startVector(4,t,4)},r.MeshNode.addGeometry=function(e,t){e.addFieldOffset(5,t,0)},r.MeshNode.createGeometryVector=function(e,t){e.startVector(1,t.length,1);for(var n=t.length-1;n>=0;n--)e.addInt8(t[n]);return e.endVector()},r.MeshNode.startGeometryVector=function(e,t){e.startVector(1,t,1)},r.MeshNode.addWireframe=function(e,t){e.addFieldOffset(6,t,0)},r.MeshNode.createWireframeVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addInt32(t[n]);return e.endVector()},r.MeshNode.startWireframeVector=function(e,t){e.startVector(4,t,4)},r.MeshNode.addReceiveShadow=function(e,t){e.addFieldInt8(7,+t,0)},r.MeshNode.addCastShadow=function(e,t){e.addFieldInt8(8,+t,0)},r.MeshNode.addSkinId=function(e,t){e.addFieldOffset(9,t,0)},r.MeshNode.addMorphId=function(e,t){e.addFieldOffset(10,t,0)},r.MeshNode.endMeshNode=function(e){return e.endObject()},r.MeshNode.createMeshNode=function(e,t,n,i,o,a,s,l,u,c,f,h){return r.MeshNode.startMeshNode(e),r.MeshNode.addName(e,t),r.MeshNode.addId(e,n),r.MeshNode.addTransform(e,i),r.MeshNode.addVisible(e,o),r.MeshNode.addSubMeshes(e,a),r.MeshNode.addGeometry(e,s),r.MeshNode.addWireframe(e,l),r.MeshNode.addReceiveShadow(e,u),r.MeshNode.addCastShadow(e,c),r.MeshNode.addSkinId(e,f),r.MeshNode.addMorphId(e,h),r.MeshNode.endMeshNode(e)},r.Node=function(){this.bb=null,this.bb_pos=0},r.Node.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Node.getRootAsNode=function(e,t){return(t||new r.Node).__init(e.readInt32(e.position())+e.position(),e)},r.Node.prototype.nodeType=function(){var e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readUint8(this.bb_pos+e):r.AbstractNode.NONE},r.Node.prototype.node=function(e){var t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__union(e,this.bb_pos+t):null},r.Node.startNode=function(e){e.startObject(2)},r.Node.addNodeType=function(e,t){e.addFieldInt8(0,t,r.AbstractNode.NONE)},r.Node.addNode=function(e,t){e.addFieldOffset(1,t,0)},r.Node.endNode=function(e){return e.endObject()},r.Node.createNode=function(e,t,n){return r.Node.startNode(e),r.Node.addNodeType(e,t),r.Node.addNode(e,n),r.Node.endNode(e)},r.Skin=function(){this.bb=null,this.bb_pos=0},r.Skin.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Skin.getRootAsSkin=function(e,t){return(t||new r.Skin).__init(e.readInt32(e.position())+e.position(),e)},r.Skin.prototype.id=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.Skin.prototype.jointIds=function(e,t){var n=this.bb.__offset(this.bb_pos,6);return n?this.bb.__string(this.bb.__vector(this.bb_pos+n)+4*e,t):null},r.Skin.prototype.jointIdsLength=function(){var e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Skin.prototype.bindPoses=function(e,t){var n=this.bb.__offset(this.bb_pos,8);return n?(t||new r.Matrix4).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.Skin.prototype.bindPosesLength=function(){var e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Skin.startSkin=function(e){e.startObject(3)},r.Skin.addId=function(e,t){e.addFieldOffset(0,t,0)},r.Skin.addJointIds=function(e,t){e.addFieldOffset(1,t,0)},r.Skin.createJointIdsVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.Skin.startJointIdsVector=function(e,t){e.startVector(4,t,4)},r.Skin.addBindPoses=function(e,t){e.addFieldOffset(2,t,0)},r.Skin.createBindPosesVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.Skin.startBindPosesVector=function(e,t){e.startVector(4,t,4)},r.Skin.endSkin=function(e){return e.endObject()},r.Skin.createSkin=function(e,t,n,i){return r.Skin.startSkin(e),r.Skin.addId(e,t),r.Skin.addJointIds(e,n),r.Skin.addBindPoses(e,i),r.Skin.endSkin(e)},r.MorphTarget=function(){this.bb=null,this.bb_pos=0},r.MorphTarget.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.MorphTarget.getRootAsMorphTarget=function(e,t){return(t||new r.MorphTarget).__init(e.readInt32(e.position())+e.position(),e)},r.MorphTarget.prototype.name=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.MorphTarget.prototype.positions=function(e){var t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0},r.MorphTarget.prototype.positionsLength=function(){var e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0},r.MorphTarget.prototype.positionsArray=function(){var e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null},r.MorphTarget.prototype.normals=function(e){var t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+4*e):0},r.MorphTarget.prototype.normalsLength=function(){var e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0},r.MorphTarget.prototype.normalsArray=function(){var e=this.bb.__offset(this.bb_pos,8);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null},r.MorphTarget.startMorphTarget=function(e){e.startObject(3)},r.MorphTarget.addName=function(e,t){e.addFieldOffset(0,t,0)},r.MorphTarget.addPositions=function(e,t){e.addFieldOffset(1,t,0)},r.MorphTarget.createPositionsVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addFloat32(t[n]);return e.endVector()},r.MorphTarget.startPositionsVector=function(e,t){e.startVector(4,t,4)},r.MorphTarget.addNormals=function(e,t){e.addFieldOffset(2,t,0)},r.MorphTarget.createNormalsVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addFloat32(t[n]);return e.endVector()},r.MorphTarget.startNormalsVector=function(e,t){e.startVector(4,t,4)},r.MorphTarget.endMorphTarget=function(e){return e.endObject()},r.MorphTarget.createMorphTarget=function(e,t,n,i){return r.MorphTarget.startMorphTarget(e),r.MorphTarget.addName(e,t),r.MorphTarget.addPositions(e,n),r.MorphTarget.addNormals(e,i),r.MorphTarget.endMorphTarget(e)},r.Morph=function(){this.bb=null,this.bb_pos=0},r.Morph.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Morph.getRootAsMorph=function(e,t){return(t||new r.Morph).__init(e.readInt32(e.position())+e.position(),e)},r.Morph.prototype.id=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.Morph.prototype.morphTargets=function(e,t){var n=this.bb.__offset(this.bb_pos,6);return n?(t||new r.MorphTarget).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.Morph.prototype.morphTargetsLength=function(){var e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Morph.startMorph=function(e){e.startObject(2)},r.Morph.addId=function(e,t){e.addFieldOffset(0,t,0)},r.Morph.addMorphTargets=function(e,t){e.addFieldOffset(1,t,0)},r.Morph.createMorphTargetsVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.Morph.startMorphTargetsVector=function(e,t){e.startVector(4,t,4)},r.Morph.endMorph=function(e){return e.endObject()},r.Morph.createMorph=function(e,t,n){return r.Morph.startMorph(e),r.Morph.addId(e,t),r.Morph.addMorphTargets(e,n),r.Morph.endMorph(e)},r.Option=function(){this.bb=null,this.bb_pos=0},r.Option.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Option.getRootAsOption=function(e,t){return(t||new r.Option).__init(e.readInt32(e.position())+e.position(),e)},r.Option.prototype.lights=function(e,t){var n=this.bb.__offset(this.bb_pos,4);return n?(t||new r.Light).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.Option.prototype.lightsLength=function(){var e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Option.prototype.cameras=function(e,t){var n=this.bb.__offset(this.bb_pos,6);return n?(t||new r.Camera).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.Option.prototype.camerasLength=function(){var e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Option.startOption=function(e){e.startObject(2)},r.Option.addLights=function(e,t){e.addFieldOffset(0,t,0)},r.Option.createLightsVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.Option.startLightsVector=function(e,t){e.startVector(4,t,4)},r.Option.addCameras=function(e,t){e.addFieldOffset(1,t,0)},r.Option.createCamerasVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.Option.startCamerasVector=function(e,t){e.startVector(4,t,4)},r.Option.endOption=function(e){return e.endObject()},r.Option.createOption=function(e,t,n){return r.Option.startOption(e),r.Option.addLights(e,t),r.Option.addCameras(e,n),r.Option.endOption(e)},r.Model=function(){this.bb=null,this.bb_pos=0},r.Model.prototype.__init=function(e,t){return this.bb_pos=e,this.bb=t,this},r.Model.getRootAsModel=function(e,t){return(t||new r.Model).__init(e.readInt32(e.position())+e.position(),e)},r.Model.bufferHasIdentifier=function(e){return e.__has_identifier("FLBS")},r.Model.prototype.version=function(e){var t=this.bb.__offset(this.bb_pos,4);return t?this.bb.__string(this.bb_pos+t,e):null},r.Model.prototype.nodes=function(e,t){var n=this.bb.__offset(this.bb_pos,6);return n?(t||new r.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.Model.prototype.nodesLength=function(){var e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Model.prototype.parentIndex=function(e){var t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+4*e):0},r.Model.prototype.parentIndexLength=function(){var e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Model.prototype.parentIndexArray=function(){var e=this.bb.__offset(this.bb_pos,8);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null},r.Model.prototype.skins=function(e,t){var n=this.bb.__offset(this.bb_pos,10);return n?(t||new r.Skin).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.Model.prototype.skinsLength=function(){var e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Model.prototype.option=function(e){var t=this.bb.__offset(this.bb_pos,12);return t?(e||new r.Option).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null},r.Model.prototype.morphs=function(e,t){var n=this.bb.__offset(this.bb_pos,14);return n?(t||new r.Morph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+n)+4*e),this.bb):null},r.Model.prototype.morphsLength=function(){var e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0},r.Model.startModel=function(e){e.startObject(6)},r.Model.addVersion=function(e,t){e.addFieldOffset(0,t,0)},r.Model.addNodes=function(e,t){e.addFieldOffset(1,t,0)},r.Model.createNodesVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.Model.startNodesVector=function(e,t){e.startVector(4,t,4)},r.Model.addParentIndex=function(e,t){e.addFieldOffset(2,t,0)},r.Model.createParentIndexVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addInt32(t[n]);return e.endVector()},r.Model.startParentIndexVector=function(e,t){e.startVector(4,t,4)},r.Model.addSkins=function(e,t){e.addFieldOffset(3,t,0)},r.Model.createSkinsVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.Model.startSkinsVector=function(e,t){e.startVector(4,t,4)},r.Model.addOption=function(e,t){e.addFieldOffset(4,t,0)},r.Model.addMorphs=function(e,t){e.addFieldOffset(5,t,0)},r.Model.createMorphsVector=function(e,t){e.startVector(4,t.length,4);for(var n=t.length-1;n>=0;n--)e.addOffset(t[n]);return e.endVector()},r.Model.startMorphsVector=function(e,t){e.startVector(4,t,4)},r.Model.endModel=function(e){return e.endObject()},r.Model.finishModelBuffer=function(e,t){e.finish(t,"FLBS")},r.Model.createModel=function(e,t,n,i,o,a,s){return r.Model.startModel(e),r.Model.addVersion(e,t),r.Model.addNodes(e,n),r.Model.addParentIndex(e,i),r.Model.addSkins(e,o),r.Model.addOption(e,a),r.Model.addMorphs(e,s),r.Model.endModel(e)},t.exports=r},{}],13:[function(e,t,n){var r={};r.Offset,r.Table,r.SIZEOF_SHORT=2,r.SIZEOF_INT=4,r.FILE_IDENTIFIER_LENGTH=4,r.Encoding={UTF8_BYTES:1,UTF16_STRING:2},r.int32=new Int32Array(2),r.float32=new Float32Array(r.int32.buffer),r.float64=new Float64Array(r.int32.buffer),r.isLittleEndian=1===new Uint16Array(new Uint8Array([1,0]).buffer)[0],r.Long=function(e,t){this.low=0|e,this.high=0|t},r.Long.create=function(e,t){return 0==e&&0==t?r.Long.ZERO:new r.Long(e,t)},r.Long.prototype.toFloat64=function(){return(this.low>>>0)+4294967296*this.high},r.Long.prototype.equals=function(e){return this.low==e.low&&this.high==e.high},r.Long.ZERO=new r.Long(0,0),r.Builder=function(e){if(e)t=e;else var t=1024;this.bb=r.ByteBuffer.allocate(t),this.space=t,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},r.Builder.prototype.forceDefaults=function(e){this.force_defaults=e},r.Builder.prototype.dataBuffer=function(){return this.bb},r.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())},r.Builder.prototype.prep=function(e,t){e>this.minalign&&(this.minalign=e);for(var n=1+~(this.bb.capacity()-this.space+t)&e-1;this.space<n+e+t;){var i=this.bb.capacity();this.bb=r.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-i}this.pad(n)},r.Builder.prototype.pad=function(e){for(var t=0;t<e;t++)this.bb.writeInt8(--this.space,0)},r.Builder.prototype.writeInt8=function(e){this.bb.writeInt8(this.space-=1,e)},r.Builder.prototype.writeInt16=function(e){this.bb.writeInt16(this.space-=2,e)},r.Builder.prototype.writeInt32=function(e){this.bb.writeInt32(this.space-=4,e)},r.Builder.prototype.writeInt64=function(e){this.bb.writeInt64(this.space-=8,e)},r.Builder.prototype.writeFloat32=function(e){this.bb.writeFloat32(this.space-=4,e)},r.Builder.prototype.writeFloat64=function(e){this.bb.writeFloat64(this.space-=8,e)},r.Builder.prototype.addInt8=function(e){this.prep(1,0),this.writeInt8(e)},r.Builder.prototype.addInt16=function(e){this.prep(2,0),this.writeInt16(e)},r.Builder.prototype.addInt32=function(e){this.prep(4,0),this.writeInt32(e)},r.Builder.prototype.addInt64=function(e){this.prep(8,0),this.writeInt64(e)},r.Builder.prototype.addFloat32=function(e){this.prep(4,0),this.writeFloat32(e)},r.Builder.prototype.addFloat64=function(e){this.prep(8,0),this.writeFloat64(e)},r.Builder.prototype.addFieldInt8=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt8(t),this.slot(e))},r.Builder.prototype.addFieldInt16=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt16(t),this.slot(e))},r.Builder.prototype.addFieldInt32=function(e,t,n){(this.force_defaults||t!=n)&&(this.addInt32(t),this.slot(e))},r.Builder.prototype.addFieldInt64=function(e,t,n){!this.force_defaults&&t.equals(n)||(this.addInt64(t),this.slot(e))},r.Builder.prototype.addFieldFloat32=function(e,t,n){(this.force_defaults||t!=n)&&(this.addFloat32(t),this.slot(e))},r.Builder.prototype.addFieldFloat64=function(e,t,n){(this.force_defaults||t!=n)&&(this.addFloat64(t),this.slot(e))},r.Builder.prototype.addFieldOffset=function(e,t,n){(this.force_defaults||t!=n)&&(this.addOffset(t),this.slot(e))},r.Builder.prototype.addFieldStruct=function(e,t,n){t!=n&&(this.nested(t),this.slot(e))},r.Builder.prototype.nested=function(e){if(e!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")},r.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")},r.Builder.prototype.slot=function(e){this.vtable[e]=this.offset()},r.Builder.prototype.offset=function(){return this.bb.capacity()-this.space},r.Builder.growByteBuffer=function(e){var t=e.capacity();if(3221225472&t)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=t<<1,i=r.ByteBuffer.allocate(n);return i.setPosition(n-t),i.bytes().set(e.bytes(),n-t),i},r.Builder.prototype.addOffset=function(e){this.prep(r.SIZEOF_INT,0),this.writeInt32(this.offset()-e+r.SIZEOF_INT)},r.Builder.prototype.startObject=function(e){this.notNested(),null==this.vtable&&(this.vtable=[]),this.vtable_in_use=e;for(var t=0;t<e;t++)this.vtable[t]=0;this.isNested=!0,this.object_start=this.offset()},r.Builder.prototype.endObject=function(){if(null==this.vtable||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var e=this.offset(),t=this.vtable_in_use-1;t>=0&&0==this.vtable[t];t--);for(var n=t+1;t>=0;t--)this.addInt16(0!=this.vtable[t]?e-this.vtable[t]:0);this.addInt16(e-this.object_start);var i=(n+2)*r.SIZEOF_SHORT;this.addInt16(i);var o=0,a=this.space;e:for(t=0;t<this.vtables.length;t++){var s=this.bb.capacity()-this.vtables[t];if(i==this.bb.readInt16(s)){for(var l=r.SIZEOF_SHORT;l<i;l+=r.SIZEOF_SHORT)if(this.bb.readInt16(a+l)!=this.bb.readInt16(s+l))continue e;o=this.vtables[t];break}}return o?(this.space=this.bb.capacity()-e,this.bb.writeInt32(this.space,o-e)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-e,this.offset()-e)),this.isNested=!1,e},r.Builder.prototype.finish=function(e,t){if(t){var n=t;if(this.prep(this.minalign,r.SIZEOF_INT+r.FILE_IDENTIFIER_LENGTH),n.length!=r.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+r.FILE_IDENTIFIER_LENGTH);for(var i=r.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(n.charCodeAt(i))}this.prep(this.minalign,r.SIZEOF_INT),this.addOffset(e),this.bb.setPosition(this.space)},r.Builder.prototype.requiredField=function(e,t){var n=this.bb.capacity()-e,r=n-this.bb.readInt32(n);if(!(0!=this.bb.readInt16(r+t)))throw new Error("FlatBuffers: field "+t+" must be set")},r.Builder.prototype.startVector=function(e,t,n){this.notNested(),this.vector_num_elems=t,this.prep(r.SIZEOF_INT,e*t),this.prep(n,e*t)},r.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()},r.Builder.prototype.createString=function(e){if(e instanceof Uint8Array)var t=e;else{t=[];for(var n=0;n<e.length;){var r,i=e.charCodeAt(n++);if(i<55296||i>=56320)r=i;else r=(i<<10)+e.charCodeAt(n++)+-56613888;r<128?t.push(r):(r<2048?t.push(r>>6&31|192):(r<65536?t.push(r>>12&15|224):t.push(r>>18&7|240,r>>12&63|128),t.push(r>>6&63|128)),t.push(63&r|128))}}this.addInt8(0),this.startVector(1,t.length,1),this.bb.setPosition(this.space-=t.length);n=0;for(var o=this.space,a=this.bb.bytes();n<t.length;n++)a[o++]=t[n];return this.endVector()},r.Builder.prototype.createLong=function(e,t){return r.Long.create(e,t)},r.ByteBuffer=function(e){this.bytes_=e,this.position_=0},r.ByteBuffer.allocate=function(e){return new r.ByteBuffer(new Uint8Array(e))},r.ByteBuffer.prototype.bytes=function(){return this.bytes_},r.ByteBuffer.prototype.position=function(){return this.position_},r.ByteBuffer.prototype.setPosition=function(e){this.position_=e},r.ByteBuffer.prototype.capacity=function(){return this.bytes_.length},r.ByteBuffer.prototype.readInt8=function(e){return this.readUint8(e)<<24>>24},r.ByteBuffer.prototype.readUint8=function(e){return this.bytes_[e]},r.ByteBuffer.prototype.readInt16=function(e){return this.readUint16(e)<<16>>16},r.ByteBuffer.prototype.readUint16=function(e){return this.bytes_[e]|this.bytes_[e+1]<<8},r.ByteBuffer.prototype.readInt32=function(e){return this.bytes_[e]|this.bytes_[e+1]<<8|this.bytes_[e+2]<<16|this.bytes_[e+3]<<24},r.ByteBuffer.prototype.readUint32=function(e){return this.readInt32(e)>>>0},r.ByteBuffer.prototype.readInt64=function(e){return new r.Long(this.readInt32(e),this.readInt32(e+4))},r.ByteBuffer.prototype.readUint64=function(e){return new r.Long(this.readUint32(e),this.readUint32(e+4))},r.ByteBuffer.prototype.readFloat32=function(e){return r.int32[0]=this.readInt32(e),r.float32[0]},r.ByteBuffer.prototype.readFloat64=function(e){return r.int32[r.isLittleEndian?0:1]=this.readInt32(e),r.int32[r.isLittleEndian?1:0]=this.readInt32(e+4),r.float64[0]},r.ByteBuffer.prototype.writeInt8=function(e,t){this.bytes_[e]=t},r.ByteBuffer.prototype.writeUint8=function(e,t){this.bytes_[e]=t},r.ByteBuffer.prototype.writeInt16=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8},r.ByteBuffer.prototype.writeUint16=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8},r.ByteBuffer.prototype.writeInt32=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24},r.ByteBuffer.prototype.writeUint32=function(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24},r.ByteBuffer.prototype.writeInt64=function(e,t){this.writeInt32(e,t.low),this.writeInt32(e+4,t.high)},r.ByteBuffer.prototype.writeUint64=function(e,t){this.writeUint32(e,t.low),this.writeUint32(e+4,t.high)},r.ByteBuffer.prototype.writeFloat32=function(e,t){r.float32[0]=t,this.writeInt32(e,r.int32[0])},r.ByteBuffer.prototype.writeFloat64=function(e,t){r.float64[0]=t,this.writeInt32(e,r.int32[r.isLittleEndian?0:1]),this.writeInt32(e+4,r.int32[r.isLittleEndian?1:0])},r.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+r.SIZEOF_INT+r.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var e="",t=0;t<r.FILE_IDENTIFIER_LENGTH;t++)e+=String.fromCharCode(this.readInt8(this.position_+r.SIZEOF_INT+t));return e},r.ByteBuffer.prototype.__offset=function(e,t){var n=e-this.readInt32(e);return t<this.readInt16(n)?this.readInt16(n+t):0},r.ByteBuffer.prototype.__union=function(e,t){return e.bb_pos=t+this.readInt32(t),e.bb=this,e},r.ByteBuffer.prototype.__string=function(e,t){e+=this.readInt32(e);var n=this.readInt32(e),i="",o=0;if(e+=r.SIZEOF_INT,t===r.Encoding.UTF8_BYTES)return this.bytes_.subarray(e,e+n);for(;o<n;){var a,s=this.readUint8(e+o++);if(s<192)a=s;else{var l=this.readUint8(e+o++);if(s<224)a=(31&s)<<6|63&l;else{var u=this.readUint8(e+o++);if(s<240)a=(15&s)<<12|(63&l)<<6|63&u;else a=(7&s)<<18|(63&l)<<12|(63&u)<<6|63&this.readUint8(e+o++)}}a<65536?i+=String.fromCharCode(a):(a-=65536,i+=String.fromCharCode(55296+(a>>10),56320+(1023&a)))}return i},r.ByteBuffer.prototype.__indirect=function(e){return e+this.readInt32(e)},r.ByteBuffer.prototype.__vector=function(e){return e+this.readInt32(e)+r.SIZEOF_INT},r.ByteBuffer.prototype.__vector_len=function(e){return this.readInt32(e+this.readInt32(e))},r.ByteBuffer.prototype.__has_identifier=function(e){if(e.length!=r.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+r.FILE_IDENTIFIER_LENGTH);for(var t=0;t<r.FILE_IDENTIFIER_LENGTH;t++)if(e.charCodeAt(t)!=this.readInt8(this.position_+r.SIZEOF_INT+t))return!1;return!0},r.ByteBuffer.prototype.createLong=function(e,t){return r.Long.create(e,t)},t.exports=r},{}],14:[function(e,t,n){let r=0;t.exports=()=>r++},{}],15:[function(e,t,n){arguments[4][14][0].apply(n,arguments)},{dup:14}],16:[function(e,t,n){t.exports={}},{}],17:[function(e,t,n){const r=e("@egjs/hammerjs"),i=e("./EventSource");r.NO_MOUSEEVENTS=!0,t.exports=class extends i{constructor(e,t){super(e),this._defaultRatio=[1,1],this._hammerEvents=["pan","pinch","press","rotate","swipe","doubletap","doubletap2fingers","singletap"],this._supportedEvents=["touchstart","touchend","touchcancel","touchmove"],this._hammer=new r.Manager(e),this._hammer.add(new r.Pan),this._hammer.add(new r.Pinch),this._hammer.get("pan").set({threshold:0,pointers:0});var n=this._hammer.get("pinch");n.set({threshold:.1,enable:!1}),n.recognizeWith(this._hammer.get("pan")),this._hammer.add(new r.Tap({event:"doubletap",pointers:1,taps:2,time:250,interval:450,threshold:5,posThreshold:50})),this._hammer.add(new r.Tap({event:"doubletap2fingers",pointers:2,taps:2,time:250,interval:450,threshold:5,posThreshold:50})),this._hammer.add(new r.Tap({event:"singletap",pointers:1,taps:1,time:250,interval:450,threshold:5,posThreshold:20}))}getName(){return"TouchScreen"}setEnable(e,t,n){this._isNativeEvent(e)?n?this._target.addEventListener(e,t):this._target.removeEventListener(e,t):(e.indexOf("pinch")>=0&&n&&this._hammer.get("pinch").set({enable:!0}),n?this._hammer.on(e,t):this._hammer.off(e,t))}populateEvent(e,t){if(this._isNativeEvent(e.type)){t.canvasX=t.canvasY=0;for(var n=e.touches.length?e.touches:e.changedTouches,r=n.length,i=0;i<r;++i)t.canvasX+=n[i].clientX/r,t.canvasY+=n[i].clientY/r;t.ctrlKey=e.ctrlKey,t.shiftKey=e.shiftKey,t.altKey=e.altKey,t.metaKey=e.metaKey,t.pointers=e.touches}else t.canvasX=e.center.x,t.canvasY=e.center.y,t.scale=e.scale,t.rotation=e.rotation,t.deltaX=e.deltaX,t.deltaY=e.deltaY,t.deltaTime=e.deltaTime,t.direction=e.direction,t.offsetDirection=e.offsetDirection,t.pointers=e.pointers,t.velocity=e.velocity;var o=this._target.getBoundingClientRect();t.canvasX+=-o.left,t.canvasY+=-o.top;var a=this._eventManager.getParam("pixelRatio");a||(a=this._defaultRatio),t.glX=t.canvasX*a[0],t.glY=(this._target.clientHeight-t.canvasY)*a[1]}_isNativeEvent(e){return this._supportedEvents.indexOf(e)>=0}isEventRegistered(e,t){if(e.preventDefault(),e.pointerType&&"touch"!==e.pointerType)return!1;if(!t.action)return!0;if(isNaN(t.action))throw"touch action should be a number representing the number of touches";var n=e.pointers;n||(n=e.touches);var r=parseInt(t.action);if("touchend"===e.type||"touchcancel"===e.type){if(n.length>=r)return!1}else if(n.length!==r)return!1;return!0}supportsEvent(e){var t=super.supportsEvent.call(this,e);if(t)return t;for(var n=0;n<this._hammerEvents.length;n++){var r=this._hammerEvents[n];if(0===e.indexOf(r))return!0}return!1}getHammer(){return this._hammer}}},{"./EventSource":11,"@egjs/hammerjs":55}],18:[function(e,t,n){const r=e("./AttributeNames"),i=e("./WebGLConstants"),o=e("./math/Vec3"),a=e("./math/Aabbox"),s=e("./VertexBuffer"),l=e("./VertexAttribute"),u=e("./GlobalID");var c,f=function(e){return void 0===c&&((c={})[i.BYTE]=Int8Array,c[i.UNSIGNED_BYTE]=Uint8Array,c[i.SHORT]=Int16Array,c[i.UNSIGNED_SHORT]=Uint16Array,c[i.UNSIGNED_INT]=Uint32Array,c[i.FLOAT]=Float32Array,c[i.DOUBLE]=Float64Array),c[e]};class h{constructor(e){this._id=u(),this.name=e||"untitled",this._vertAttribs={},this.index=null,this._aabb=null,this.fillMode=i.TRIANGLES}get isMesh(){return!0}get count(){if(this.index)return this.index._count;if(this._position)return this._position._count;var e,t=this._vertAttribs;for(var n in t)e||(e=t[n]._count),e>t[n]._count&&(e=t[n]._count);return e}get aabb(){return null===this._aabb&&this.calcAabb(),this._aabb}calcAabb(){this._aabb=new a;var e=this._vertAttribs[r.Position];if(e)for(var t=new o,n=e._count,i=0;i<n;i++)e.get(i,t),this._aabb.addPoint(t)}addVertexAttribute(e,t){this._vertAttribs[e]=t,e===r.Position&&(this._position=t)}getVertexAttribute(e){return this._vertAttribs[e]}removeVertexAttribute(e){delete this._vertAttribs[e],e===r.Position&&(this._position=null)}clearAttribute(){var e=this._vertAttribs;for(var t in e)delete e[t];this.index&&(this.index=null)}release(){var e=this._vertAttribs;for(var t in e){e[t]._buffer.release()}this.index&&this.index._buffer.release()}buildByLayout(e){var t=e._num,n=e._layouts;this._vertAttribs={};for(var r=null,i=0;i<n.length;i++)for(var o=n[i],a=o.type,u=o.attributes,c=o.usage,h=t*o.stride,d=new(r=f(a))(h),p=new s(d,o.stride,c),_=0,b=0;b<u.length;b++){var m=u[b],v=m.data,g=new l(p,m.size,_);g.setFromArray(v),_+=m.size,this.addVertexAttribute(m.name,g)}if(e._index){var y=e._index.data,x=e._index.usage;y instanceof(r=f(e._index.type))||(y=new r(y));var E=new s(y,1,x);this.index=new l(E,1,0)}}copy(e){for(var t in this.name=e.name,this._vertAttribs={},e._vertAttribs)this.addVertexAttribute(t,e._vertAttribs[t]);return this.index=e.index,this._aabb=e.aabb.clone(),this.fillMode=e.fillMode,this}clone(){return(new h).copy(this)}}t.exports={MeshLayout:class{constructor(e){this._num=e,this._layouts=[],this._index=null}addAttributes(e,t,n){for(var r=0,i=this._num,o=void 0===i,a=0;a<e.length;a++){var s=e[a];r+=s.size,o&&(s.data?(i=s.data.length/s.size,this._num&&i!==this._num&&window.console.error(".addAttributes: the count of vertex-attribute is not uniformity..."),this._num=i):window.console.error(".addAttributes: must assign the number of vertices orset the data of the attributes to make sure the capicity for the mesh"))}var l={attributes:e,type:t,usage:n,stride:r};this._layouts.push(l)}setIndex(e,t,n){this._index={data:e,usage:t,type:n}}},Mesh:h}},{"./AttributeNames":1,"./GlobalID":14,"./VertexAttribute":34,"./VertexBuffer":35,"./WebGLConstants":38,"./math/Aabbox":46,"./math/Vec3":53}],19:[function(e,t,n){const r=e("./WebGLConstants"),i=e("./HashShaderSet");t.exports=class{constructor({uniforms:e={},attributes:t,indices:n,vs:i,fs:o,drawMode:a=r.TRIANGLES,vertexCount:s,mesh:l,instanceCount:u}){this._vs=i,this._fs=o,this._uniforms=Object.assign({},e),this._attributes=t,this._indices=n,this._drawMode=a,this._vertexCount=s,this._instanceCount=u,this._shader={vs:i,fs:o},this._shaderHash=null}get vs(){return this._vs}get fs(){return this._fs}get instanceCount(){return this._instanceCount}get uniforms(){return this._uniforms}get attributes(){return this._attributes}get indices(){return this._indices}get vertexCount(){return this._vertexCount}get drawMode(){return this._drawMode}setUniforms(e){this._uniforms=Object.assign(this._uniforms,e)}setMesh(e){}get shaderHash(){return null===this._shaderHash&&this._computeShaderHash(),this._shaderHash}_computeShaderHash(){this._shaderHash=[this._hashShader(this._vs),this._hashShader(this._fs)].join("|")}_hashShader(e){const t=i[e];return t||(i[e]=Object.keys(i).length,i[e])}}},{"./HashShaderSet":16,"./WebGLConstants":38}],20:[function(e,t,n){const r=e("./Fbs"),i=e("./FlatBuffer"),o=e("./math/Mat4"),a=e("./AttributeNames"),s=e("./VertexAttribute"),l=e("./VertexBuffer"),u=e("./BaseNode"),c=e("./Corto");e("fast-text-encoding");const f=new TextDecoder("utf-8");t.exports=class e{static parseTransform(e,t){var n=e.position(),r=e.rotation(),i=e.scale(),o=n.x(),a=n.y(),s=n.z();(isNaN(o)||isNaN(a)||isNaN(s))&&(o=0,a=0,s=0);var l=r.x(),u=r.y(),c=r.z(),f=r.w();(isNaN(l)||isNaN(u)||isNaN(c)||isNaN(f))&&(l=0,u=0,c=0,f=1);var h=i.x(),d=i.y(),p=i.z();(isNaN(h)||isNaN(d)||isNaN(p)||0===h&&0===d&&0===p)&&(h=Number.MIN_VALUE,d=Number.MIN_VALUE,p=Number.MIN_VALUE),t.setLocalPosition(o,a,s),t.setLocalQuaternion(l,u,c,f),t.setScale(h,d,p)}static parseMorph(t,n){for(var r=t.id(),i=t.morphTargetsLength(),o=[],a=0;a<i;a++)o.push(e.parseMorphTarget(t.morphTargets(a)));n.morphs[r]=new Morph(r,o)}static parseSkin(e,t){var n=e.id(),r=e.jointIdsLength();r!==e.bindPosesLength()&&console.warn("skin data invalid.");for(var i=[],a=[],s=0;s<r;s++){var l=new o;l.setFromArray(e.bindPoses(s).dataArray()),i.push(e.jointIds(s)),a.push(l)}var u=new SkinEnvelope(i,a);t.skins[n]=new Skin(n,u,t.model)}static parseMesh(e){var t=e.slice(0,e.byteLength),n=new c(t.buffer).decode(),r={};r[a.Position]=new s(new l(n.position,3,a.Static)),r[a.Normal]=new s(new l(n.normal,3,a.Static)),n.uv&&(r[a.UV1]=new s(new l(n.uv,2,a.Static))),n.uv2&&(r[a.UV2]=new s(new l(n.uv2,2,a.Static))),n.color&&(r[a.VertexColor]=new s(new l(n.color,4,a.Static))),n.jointIndices&&n.jointWeights&&(r[a.JointIndex]=new s(new l(n.jointIndices,4,a.Static)),r[a.JointWeight]=new s(new l(n.jointWeights,4,a.Static)));var i=new l(n.index,1,a.Static);return i.isVertexBuffer=!1,r.indices=new s(i),r}static parseBaseNode(t,n){var r=t.id(i.Encoding.UTF8_BYTES);f.decode(r),r=t.name(i.Encoding.UTF8_BYTES);var o,a=f.decode(r);0===n.nodeArray.length?(o=new u(a),n.model=o):o=new u(a),e.parseTransform(t.transform(),o),n.nodeArray.push(o),n.nodeMap[a]=o}static parseMeshNode(t,n){var r=t.id(i.Encoding.UTF8_BYTES),o=f.decode(r),c=new u(o);e.parseTransform(t.transform(),c);const h=t.visible(),d=e.parseMesh(t.geometryArray()),p=new s(new l(new Uint32Array(t.wireframeArray()),1,a.Static),1,0);n.meshEntities.push({visible:h,mesh:d,wireframeIndex:p,node:c}),n.nodeArray.push(c),n.nodeMap[o]=c}static parseNode(t,n){switch(t.nodeType()){case r.AbstractNode.BaseNode:e.parseBaseNode(t.node(new r.BaseNode),n);break;case r.AbstractNode.MeshNode:e.parseMeshNode(t.node(new r.MeshNode),n);break;default:console.warn("invalid node type.")}}static decode(t,n){var o={model:void 0,meshEntities:[],nodeMap:{},parentIndexs:[],nodeArray:[],skins:{},morphs:{},cameras:{},lights:{}},a=new i.ByteBuffer(new Uint8Array(t)),s=r.Model.getRootAsModel(a);s.version(),o.parentIndexs=s.parentIndexArray(),n(.1),n(.7);for(var l=s.nodesLength(),u=0;u<l;u++)e.parseNode(s.nodes(u),o);n(.8);for(var c=o.nodeArray.length,f=0;f<c;f++){var h=o.parentIndexs[f];if(0===f&&-1!==h&&(h=-1,console.warn("RootNode has parent!!!!")),-1!==h){var d=o.nodeArray[h],p=o.nodeArray[f];d.addChild(p)}}n(.9);o.skins;return o.model.syncTrees(),n(1),o}}},{"./AttributeNames":1,"./BaseNode":2,"./Corto":4,"./Fbs":12,"./FlatBuffer":13,"./VertexAttribute":34,"./VertexBuffer":35,"./math/Mat4":47,"fast-text-encoding":61}],21:[function(e,t,n){const r=e("./EventSource");var i=0===navigator.platform.indexOf("Mac")?-1:-3;t.exports=class extends r{constructor(e,t){super(e),this._defaultRatio=[1,1],this._supportedEvents=["click","contextmenu","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseover","mouseout","mouseup"],t&&!1===t.scrollwheel||this._supportedEvents.push("wheel")}getName(){return"Mouse"}setEnable(e,t,n){n?this._target.addEventListener(e,t):this._target.removeEventListener(e,t)}populateEvent(e,t){t.canvasX=void 0===e.offsetX?e.layerX:e.offsetX,t.canvasY=void 0===e.offsetY?e.layerY:e.offsetY;var n=this._eventManager.getParam("pixelRatio");n||(n=this._defaultRatio),t.glX=t.canvasX*n[0],t.glY=(this._target.clientHeight-t.canvasY)*n[1],t.clientX=e.clientX,t.clientY=e.clientY,t.screenX=e.screenX,t.screenX=e.screenX,t.pageX=e.pageX,t.pageY=e.pageY,t.ctrlKey=e.ctrlKey,t.shiftKey=e.shiftKey,t.altKey=e.altKey,t.metaKey=e.metaKey,t.button=e.button,t.buttons=e.buttons,"wheel"===e.type&&(void 0!==e.wheelDelta?t.deltaY=e.wheelDelta/120:1===e.deltaMode?t.deltaY=e.deltaY/i:t.deltaY=e.deltaY/(10*i),t.deltaMode=e.deltaMode,t.deltaX=e.deltaX,t.deltaZ=e.deltaZ)}isEventRegistered(e,t){return e.preventDefault(),(!t.action||e.button===parseInt(t.action))&&((void 0===t.ctrl||e.ctrlKey===t.ctrl)&&((void 0===t.shift||e.shiftKey===t.shift)&&((void 0===t.alt||e.altKey===t.alt)&&(void 0===t.meta||e.metaKey===t.meta))))}}},{"./EventSource":11}],22:[function(e,t,n){var r=function(e,t){void 0===t&&(t=!1),this.initialize(e,t)};r.prototype.constructor=r,r.prototype.initialize=function(e,t){return void 0===t&&(t=!1),this.mask=e,this.skipNextObservers=t,this};var i=function(e,t){this.callback=e,this.mask=t};i.prototype.constructor=i;var o=function(){this._observers=[],this._eventState=new r(0)};o.prototype.constructor=o,o.prototype.add=function(e,t,n){if(void 0===t&&(t=-1),void 0===n&&(n=!1),!e)return null;var r=new i(e,t);return n?this._observers.unshift(r):this._observers.push(r),r},o.prototype.addUnique=function(e,t,n){for(var r=0;r<this._observers.length;r++)if(this._observers[r].callback===e)return!1;return this.add(e,t,n)},o.prototype.remove=function(e){var t=this._observers.indexOf(e);return-1!==t&&(this._observers.splice(t,1),!0)},o.prototype.removeCallback=function(e){for(var t=0;t<this._observers.length;t++)if(this._observers[t].callback===e)return this._observers.splice(t,1),!0;return!1},o.prototype.notifyObservers=function(e,t){void 0===t&&(t=-1);var n=this._eventState;n.mask=t,n.skipNextObservers=!1;for(var r=0,i=this._observers;r<i.length;r++){var o=i[r];if(o.mask&t&&o.callback(e,n),n.skipNextObservers)return!1}return!0},o.prototype.hasObservers=function(){return this._observers.length>0},o.prototype.clear=function(){this._observers=[]},o.prototype.clone=function(){var e=new o;return e._observers=this._observers.slice(0),e},t.exports={EventState:r,Observable:o,Observer:i}},{}],23:[function(e,t,n){const r=e("./DelayInterpolator"),i=e("./math/Vec2"),o=e("./math/Vec3"),a=e("./math/Spherical");var s=-1,l=0,u=1,c=2;class f{constructor(e,t){this._controller=e,this._state=s,t.group("scene.orbitcontroller.mousekeyboard").addMappings({onContextMenu:"contextmenu",onMove:"mousemove",onBeginRotate:"mousedown 0",onBeginPan:["mousedown 1","mousedown 2"],onZoom:"wheel",onEndMotion:["mouseup","mouseout"]},this)}get controller(){return this._controller}onContextMenu(e){e.preventDefault()}onBeginRotate(e){if(e.preventDefault(),e.stopPropagation(),!1!==this.controller.enableRotate){this._state=l;var t=e.canvasX,n=e.canvasY;this.controller.setBeginRotation(t,n)}}onBeginPan(e){if(e.preventDefault(),e.stopPropagation(),!1!==this.controller.enablePan){var t=e.canvasX,n=e.canvasY;this._state=c,this.controller.setBeginPan(t,n)}}onMove(e){e.preventDefault(),e.stopPropagation();var t=e.canvasX,n=e.canvasY,r=this.controller;switch(this._state){case l:if(!1===r.enableRotate)return;this.controller.setRotateTo(t,n);break;case c:if(!1===r.enablePan)return;this.controller.setPanTo(t,n)}}onZoom(e){this._state!==s&&this._state!==l||(e.preventDefault(),e.stopPropagation(),this.controller.addZoomDelta(-Math.sign(e.deltaY)))}onEndMotion(e){this._state=s}}class h{static getGroupName(){return"HammerEventGroup"}get controller(){return this._controller}constructor(e,t){this._controller=e,this._state=s,this._lastScale=0,this._rotating=!1,this._panning=!1,this._zooming=!1,t.group("scene.orbitcontroller.hammer").addMappings({pinchStart:"pinchstart",pinchInOut:["pinchin","pinchout"],pinchEnd:"pinchend",onBeginPan:"panstart 2",onBeginRotate:"panstart 1",onRotate:"panmove 1",onPan:"panmove 2",onEndRotatePan:["touchend 2","touchcancel 2","touchend 1","touchcancel 1"]},this)}onContextMenu(e){e.preventDefault()}pinchStart(e){this._state=u,e.preventDefault(),e.stopPropagation(),this._zooming=!0,this._lastScale=e.scale}pinchInOut(e){if(this._zooming){var t=(e.scale-this._lastScale)*this.controller.zoomSpeed*5;this._lastScale=e.scale,this.controller.addZoomDelta(-t)}}pinchEnd(e){this._state=s,this._zooming=!1}onBeginRotate(e){if(e.preventDefault(),e.stopPropagation(),!1!==this.controller.enableRotate){this._rotating=!0;var t=e.canvasX,n=e.canvasY;this.controller.setBeginRotation(t,n)}}onBeginPan(e){if(e.preventDefault(),e.stopPropagation(),!1!==this.controller.enablePan){var t=e.canvasX,n=e.canvasY;this._panning=!0,this.controller.setBeginPan(t,n)}}onPan(e){if(this._panning){e.preventDefault(),e.stopPropagation();var t=e.canvasX,n=e.canvasY;this.controller.setPanTo(t,n)}}onRotate(e){if(this._rotating){e.preventDefault(),e.stopPropagation();var t=e.canvasX,n=e.canvasY;this.controller.setRotateTo(t,n)}}onEndRotatePan(e){this._rotating&&this._panning&&(this._state=s)}}t.exports=class{constructor(e,t){this._eventBackends=[new f(this,t),new h(this,t)],this.enableRotate=!0,this.enablePan=!0,this.enableZoom=!0,this.enabled=!0,this.minSpeed=1,this.minRadius=1,this.maxRadius=1/0,this.minPolarAngle=.01*Math.PI,this.maxPolarAngle=.99*Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!0,this.dampingFactor=.3,this.zoomSpeed=2,this.rotateSpeed=.0035,this._tempVec3=new o,this._offset=new o,this._EPS=.001,this._spherical=new a,this._radiusDelay=new r(1),this._offsetDelay=new r(3),this._thetaPhiDelay=new r(2),this._rotateState=new i,this._rotateEnd=new i,this._rotateDelta=new i,this._panState=new i,this._panEnd=new i,this._panDelta=new i}enable(){}mount(e,t){this._eventGroups.forEach((n=>{n.mount(e,t)}))}setBeginRotation(e,t){!1!==this.enableRotate&&this._rotateState.set(e,t)}setRotateTo(e,t){!1!==this.enableRotate&&(this._rotateEnd.set(e,t),this._rotateEnd.subTo(this._rotateState,this._rotateDelta),this._thetaPhiDelay.addTarget(-this._rotateDelta.x,0),this._thetaPhiDelay.addTarget(0,-this._rotateDelta.y),this._rotateState.copy(this._rotateEnd))}setBeginPan(e,t){!1!==this.enablePan&&this._panState.set(e,t)}setPanTo(e,t){!1!==this.enablePan&&(this._panEnd.set(e,t),this._panEnd.subTo(this._panState,this._panDelta),this._tempVec3.set(-this._panDelta.x,0,0),this._offsetDelay.addTarget(this._tempVec3.x,this._tempVec3.y,this._tempVec3.z),this._tempVec3.set(0,this._panDelta.y,0),this._offsetDelay.addTarget(this._tempVec3.x,this._tempVec3.y,this._tempVec3.z),this._panState.copy(this._panEnd))}addZoomDelta(e){!1!==this.enableZoom&&this._radiusDelay.addTarget(e)}compute(e,t,n){n=void 0===n?0:n;var r=new o(e.data[12],e.data[13],e.data[14]);this._offset.copy(r).sub(t),this._spherical.setFromVec3(this._offset);var i=this._thetaPhiDelay.update(n),a=this._offsetDelay.update(n),s=this._radiusDelay.update(n)[0];this._spherical.theta+=.01*i[0],this._spherical.phi+=.01*i[1],this._spherical.theta=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi));var l=Math.max(this._spherical.radius,this.minSpeed),u=this._spherical.radius+s*l*.1*.016/n;if(u<this.minRadius){var c=t.clone().sub(r);0!==c.length()&&(c.normalize(),c.scale(this.minRadius-u),t.add(c))}this._spherical.radius=Math.max(this.minRadius,Math.min(this.maxRadius,u)),this._spherical.makeSafe();var f=e;this._tempVec3.setFromMat4Column(f,0),this._tempVec3.scale(a[0]),this._offset.setFromMat4Column(f,1),this._offset.scale(a[1]),this._tempVec3.add(this._offset),this._tempVec3.scale(.002*l),t.add(this._tempVec3),this._offset.buildFromSpherical(this._spherical);var h=this._offset.add(t);return(Math.abs(s)>this._EPS||Math.abs(i[0])>this._EPS||Math.abs(i[1])>this._EPS||Math.abs(a[0])>this._EPS||Math.abs(a[1])>this._EPS)&&(e.setTranslation(h),e.lookAt(h,t,new o(0,1,0)),!0)}}},{"./DelayInterpolator":8,"./math/Spherical":51,"./math/Vec2":52,"./math/Vec3":53}],24:[function(e,t,n){const r=e("./Model"),i=e("./math/Math"),o=e("./AttributeNames"),a=e("./pbr-chunks/chunks");var s,l={padding:(s={},function(e,t){return s[e]||(s[e]=new Array(e).join(" ")),s[e]+t+"\n\n"}),addMapDeclare:function(e,t,n,r,i){var o=e.name;if(r=r||o.charAt(0).toUpperCase()+o.substring(1),t[o]){var a=o+"Channel",s=o+"UV";return(t[name+"Tint"]?n[r+"Tint_FS"]:n[r+"_FS"]).replace(/\$\(UV\)/g,"varyUV"+t[s]).replace(/\$\(CHANNEL\)/g,t[a])}return n[r.substring(0,r.length-3)+"Constant_FS"]},worldDeclare:function(e,t){var n="";if(e.skin){var r=e.skinTech,i=e.skinParam;r===o.SkinFloat?(n+=t.SkinTexDecl_VS.replace(/\$\(SIZE\)/g,i+".0"),n+=t.SkinFloatTex_VS):r===o.SkinRGBA?(n+=t.SkinTexDecl_VS.replace(/\$\(SIZE\)/g,i+".0"),n+=t.SkinRgbaTex_VS):r===o.SkinUniform&&(n+=t.SkinUniforms_VS.replace(/\$\(JOINT_NUMS\)/g,i)),n+=t.SkinWorld_VS}else n+=t.World_VS;return n},vertexDeclare:function(e,t){var n="";return e.morph?(!0===e.needsMorphNormal&&(n+="#define MORPH_NORMAL\n\n"),n+=t.VertexMorph_VS):n+=t.Vertex_VS,n},worldPosition:{in:"varying vec3 varyWorldPosition;\n\n",out:"varying vec3 varyWorldPosition;\n\n",varying:"varying vec3 varyWorldPosition;\n\n"},viewPosition:{in:"varying vec3 varyViewPosition;\n\n",out:"varying vec3 varyViewPosition;\n\n",varying:"varying vec3 varyViewPosition;\n\n"},worldNormal:{in:"varying vec3 varyWorldNormal;\n\n",out:"varying vec3 varyWorldNormal;\n\n",varying:"varying vec3 varyWorldNormal;\n\n"},viewNormal:{in:"varying vec3 varyViewNormal;\n\n",out:"varying vec3 varyViewNormal;\n\n",varying:"varying vec3 varyViewNormal;\n\n"},worldTangent:{in:"varying vec3 varyWorldTangent;\n\n",out:"varying vec3 varyWorldTangent;\n\n",varying:"varying vec3 varyWorldTangent;\n\n"},worldBinormal:{in:"varying vec3 varyWorldBinormal;\n\n",out:"varying vec3 varyWorldBinormal;\n\n",varying:"varying vec3 varyWorldBinormal;\n\n"},uv:function(e){return{attr:"in vec2 "+e+";\n\n",in:"varying vec2 varyUV"+e+";\n\n",out:"varying vec2 varyUV"+e+";\n\n"}},MainStart:"void main () {\n\n",MainEnd:"}\n\n"};class u{constructor(){this.name="PhysicalShaderTemplate",this._forceVaryingUV=!1}setForceUV(e){this._forceVaryingUV=e}getForceUV(){return this._forceVaryingUV}customVertexHeadSlot(e,t){return""}customVertexMainBeginSlot(e,t){return""}customVertexMainEndSlot(e,t){return""}customFragmentHeadSlot(e,t){return""}customFragmentMainBeginSlot(e,t){return""}customFragmentMainEndSlot(e,t){return""}customAlbedoSlot(e,t){return""}customOpacitySlot(e,t){return""}generateShader(e,t=a){var n={};const r=function(e){return n[e]?"":(n[e]=!0,t[e])};var i=l.padding;e.pointLights.length=0,e.displacementMap=!1;var s=e.acceptLight&&(e.pointLights.length>0||e.directionalLights.length>0),u=e.quantizedPosition||e.quantizedNormal||e.quantizedUV1||e.quantizedUV2,c=e.enableClearCoat,f=e.receiveShadow,h=e.envMap,d="";d+=i(0,"attribute vec3 vPosition;"),d+="\n            uniform mat4 uProjection;\n            uniform mat4 uViewMat;\n            uniform mat4 uWorldMat;\n        ";var p="";p+=i(4,"mat4 worldMatrix = getWorldMatrix();"),e.quantizedPosition?p+=i(4,"vec3 positionAttr = quantizedDecode(vPosition,vec3(uQuantizedData[0], uQuantizedData[1], uQuantizedData[2]),vec3(uQuantizedData[3], uQuantizedData[4], uQuantizedData[5]));"):p+=i(4,"vec3 positionAttr = vPosition;"),p+=i(4,"vec4 worldPosition = worldMatrix * vec4(getVertexPosition(positionAttr), 1.0);");var b=0,m="",v="",g=s||h||e.dispacementMap||c;if(d+=l.vertexDeclare(e,t),d+=l.worldDeclare(e,t),u&&(d+=t.Quantization_VS),p+=i(4,"varyWorldPosition = worldPosition.xyz;"),p+=i(4,"varyViewPosition = (uViewMat * worldPosition).xyz;"),p+=i(4,"varyWorldPosition = worldPosition.xyz;"),m+=l.worldPosition.out,v+=l.worldPosition.in,m+=l.viewPosition.out,v+=l.viewPosition.in,m+=l.viewNormal.out,v+=l.viewNormal.in,g&&(e.quantizedNormal?(d+=i(0,"attribute vec2 "+o.Normal+";"),d+=t.LambertAzimuthalDecode_VS,p+=i(4,"vec3 normal = lambertAzimuthalDecode(vNormal);")):(d+=i(0,"attribute vec3 "+o.Normal+";"),p+=i(4,"vec3 normal = vNormal;")),p+=i(4,"varyWorldNormal = normalize(vec3(worldMatrix * vec4(getVertexNormal(normal), 0.0)));"),p+=i(4,"varyViewNormal = normalize(vec3(uViewMat * vec4(varyWorldNormal, 0.0)));"),m+=l.worldNormal.out,v+=l.worldNormal.in,e.normalMap||e.clearCoatNormalMap)){var y=o.Tangent+";";e.quantizedTangent?(y=i(0,"attribute vec3 "+y),p+=i(4,"varyWorldTangent = normalize(worldMatrix * vec4(lambertAzimuthalDecode(vTangent.xy), 0.0)).xyz;"),p+=i(4,"float handness = 2.0 * vTangent.z - 1.0;")):(y=i(0,"attribute vec4 "+y),p+=i(4,"varyWorldTangent = normalize((worldMatrix * vec4(vTangent.xyz, 0.0)).xyz);"),p+=i(4,"float handness = vTangent.w;")),d+=y,d+=t.Binormal_VS,m+=l.worldTangent.out,m+=l.worldBinormal.out,v+=l.worldTangent.in,v+=l.worldBinormal.in,p+=i(4,"varyWorldBinormal = getBinormal(varyWorldNormal, varyWorldTangent, handness);")}var x={1:!1,2:!1};for(var E in _.Map2DS){var T=E;if(e[T]){var S=T+"UV",R=e[S];R=Math.min(Number(R),2),e[S]=R,x[R]=!0}}var M={1:e.quantizedUV1,2:e.quantizedUV2},N={1:o.UV1,2:o.UV2};for(var A in this._forceVaryingUV&&(x[1]=!0,x[2]=!0),x)if(!1!==x[A]){var w=N[A],C="varyUV"+A;d+=i(0,"attribute vec2 "+w+";"),m+=i(0,"varying vec2 "+C+";"),v+=i(0,"varying vec2 "+C+";"),p+=i(4,M[A]?C+" = quantizedDecode("+w+", vec2(uQuantizedData[6], uQuantizedData[7]), vec2(uQuantizedData[8], uQuantizedData[9]));":C+" = "+w+";")}e.displacementMap&&(d+=t.Displacement_VS,p+=i(4,"worldPosition = displacement(worldPosition);")),p+=t.Mvp_VS;var F=d+this.customVertexHeadSlot(e,t)+m+t.MainStart_VS+this.customVertexMainBeginSlot(e,t)+p+this.customVertexMainEndSlot(e,t)+t.MainEnd_VS;if(d="",d+=v,p=t.MainStart_FS,d+=t.Head_FS,d+=t.GammaSimple_FS,d+=t.TonemapNone_FS,g){if(d+=t.FrontFaceFlip_FS,e.normalMap){if(e.useNormalMapAsBump)d+=t.BumpMap_FS.replace(/\$\(UV\)/g,"varyUV"+e.normalMapUV);else{var I=t.NormalMap_FS;d+=I=I.replace(/\$\(UV\)/g,"varyUV"+e.normalMapUV).replace(/\$\(FlipY\)/g,e.normalMapFlipY?"-1.0":"1.0")}d+=r("Tbn_FS"),d+=t.RoughnessNormalMap_FS}d+=t.ViewDir_FS,d+=t.ReflectDir_FS}if(e.aoMap&&(d+=t.AoMap_FS.replace(/\$\(UV\)/g,"varyUV"+e.aoMapUV).replace(/\$\(CHANNEL\)/g,e.aoMapChannel)),d+=l.addMapDeclare(_.Map2DS.diffuseMap,e,t,"AlbedoMap"),d+=l.addMapDeclare(_.Map2DS.opacityMap,e,t),d+=t.SpecularF90_FS,e.metalnessWorkFlow?(d+=t.MetalnessFunc_FS,d+=l.addMapDeclare(_.Map2DS.metalnessMap,e,t)):d+=l.addMapDeclare(_.Map2DS.specularMap,e,t),d+=l.addMapDeclare(_.Map2DS.shininessMap,e,t),d+=l.addMapDeclare(_.Map2DS.emissiveMap,e,t),d+=e.alphaTest?t.AlphaTest_FS:"",d+=e.dithered?t.Random_FS+t.Dithered_FS:"",(h||s)&&c){if(d+=r("SchlickF_FS"),d+=r("Clearcoat_FS"),e.clearCoatNormalMap)d+=r("Tbn_FS"),d+=t.ClearCoatNormalMap_FS.replace(/\$\(UV\)/g,"varyUV"+e.clearCoatNormalMapUV).replace(/\$\(FlipY\)/g,e.clearCoatNormalMapFlipY?"-1.0":"1.0");e.clearCoatRoughnessMap?d+=l.addMapDeclare(_.Map2DS.clearCoatRoughness,e,t):d+=t.ClearCoatRoughnessConstant_FS}if(h&&(d+=e.envIntensity?t.EnvIntensity_FS:t.EnvIntensityNone_FS,d+=e.envRotationFlag?t.EnvRotation_FS:t.EnvRotationNone_FS,e.rgbmEnvMap&&(d+=t.RgbmDecode_FS),d+=t.LuvToRGB_FS,d+=t.LinearRoughnessToMip_FS,e.prefilterPanorama?d+=t.PrefilterPanorama_FS.replace(/\$\(DECODE\)/g,"LUVToRGB"):d+=t.PrefilterCubemap_FS.replace(/\$\(DECODE\)/g,"LUVToRGB"),d+=t.CubemapReflectionLodUE4_FS.replace(/\$\(DECODE\)/g,"LUVToRGB"),d+=t.CubemapAmbientSPH_FS),s){d+=t.IrradianceLight_FS,d+=t.NDotL_FS,d+=r("SchlickF_FS"),d+=t.GgxNDF_FS,d+=t.SmithGGXCorrelatedV_FS,d+=t.CookTorranceSpecularBRDF_FS,d+=t.LambertDiffuseBRDF_FS;e.pointLights.length;var D=e.directionalLights.length,L=e.pointLightShadowNumber,P=e.directionalLightShadowNumber;if(f&&(L||P)&&(d+=r("UnpackRGBA2Float_FS"),d+=t.ShadowMapFunc_FS,L>0&&(d+=t.ShadowPointLight_FS.replace("$(NUM)",String(L))),P>0&&(d+=t.ShadowDirLight_FS.replace("$(NUM)",String(P)))),D>0){var B=t.DirLights_FS;d+=B=B.replace(/\$\(DIR_LIGHT_NUM\)/g,D)}c&&(d+=t.ClearCoatCookTorranceSpecularBRDF_FS)}if(e.aoMap&&e.specularOcclusion&&(d+=t.SpecularOcclusionSimple_FS),e.cavityMap&&(d+=l.addMapDeclare(_.Map2DS.cavity,e,t)),p+=i(4,"getAlbedo();"),p+=this.customAlbedoSlot(e,t),p+=i(4,"float materialOpacity = 1.0;"),e.alphaTest||e.needsBlend||e.dithered||e.refraction?(p+=i(4,"getOpacity();"),p+=this.customOpacitySlot(e,t),p+=i(4,"materialOpacity = gAlpha;"),!0===e.alphaTest&&(p+=i(4,"alphaTest(gAlpha);")),!0===e.dithered&&(p+=i(4,"ditheringMask(gl_FragCoord, gAlpha);")),p+=!1===e.needsBlend?i(4,"gAlpha = 1.0;"):""):p+=i(4,"float gAlpha = 1.0;"),g&&(p+=i(4,"vec3 worldFaceNormal = frontFaceFlip(varyWorldNormal);"),e.normalMap?e.useNormalMapAsBump?(p+=i(4,"vec2 bumpMapGradient = getMaterialBumpMap();"),p+=i(3,"gWorldNormal = convertNormalByTBN(varyWorldTangent, varyWorldBinormal, worldFaceNormal, bumpMapGradient);")):(p+=i(4,"vec3 normalMapData = extractNormalMap();"),p+=i(4,"gWorldNormal = convertNormalByTBN(varyWorldTangent, varyWorldBinormal, worldFaceNormal, normalMapData);")):p+=i(4,"gWorldNormal = normalize(worldFaceNormal);")),(s||h)&&(p+=i(4,"vec3 worldViewDir = normalize(uEyePosition - varyWorldPosition);"),p+=i(4,"float shininess = getShininess();"),!0===e.shininessInversion?p+=i(4,"gRoughness = shininess;"):p+=i(4,"gRoughness = 1.0 - shininess;"),e.normalMap&&!e.useNormalMapAsBump&&(p+=i(4,"gRoughness = correctRoughnessNormalMap(gRoughness, normalMapData);")),!0===e.metalnessWorkFlow?(p+=i(4,"float materialMetalness = getMetalness();"),!0===e.refraction&&(p+=i(4,"materialMetalness *= materialOpacity;")),p+=i(4,"gSpecularF0 = computeSpecularF0FromMetalness(materialMetalness, gAlbedo);"),p+=i(4,"gDiffuse = (1.0 - materialMetalness) * gAlbedo;")):(p+=i(4,"vec3 materialSpecular = getMaterialSpecular();"),!0===e.refraction&&(p+=i(4,"materialSpecular *= mix(0.08, 1.0, materialOpacity);")),p+=i(4,"gSpecularF0 = materialSpecular;"),p+=i(4,"gDiffuse = gAlbedo;")),p+=i(4,"gSpecularF90 = getSpecularF90();"),c&&(p+=i(4,"float clearCoatIntensity = getClearCoatIntensity();"),p+=i(4,"float clearcoatReflectivity = getClearCoatReflectivity();"),p+=i(4,"float uClearCoatF0 = (1.0 + clearcoatReflectivity) * 0.04;"),p+=i(4,"float uClearCoatIor = mix(1.4, 1.0, clearcoatReflectivity);"),p+=i(4,"float materialClearCoatRoughness = getMaterialClearCoatRoughness();"),e.clearCoatNormalMap?(p+=i(4,"vec3 clearCoatNormalMapData = extractClearCoatNormalMap();"),p+=i(4,"vec3 materialClearCoatNormal = convertNormalByTBN(varyWorldTangent, varyWorldBinormal, worldFaceNormal, clearCoatNormalMapData);")):p+=i(4,"vec3 materialClearCoatNormal = normalize(worldFaceNormal);"),p+=i(4,"float ccNoV = clamp(dot(materialClearCoatNormal, -refract(worldViewDir, materialClearCoatNormal, 1.0 / uClearCoatIor)), 0., 1.);"),p+=i(4,"float ccF0 = clearCoatIntensity * F_Schlick(uClearCoatF0, 1.0, ccNoV);"),p+=i(4,"vec3 ccAbsorbtion = getClearCoatAbsorbtion(ccNoV, ccNoV, clearCoatIntensity);")),h&&(p+=i(4,"vec3 ambientIBL, specularIBL;"),p+=i(4,"ambientIBL = calcCubemapBasedLightingAmbient();"),p+=i(4,"specularIBL = calcCubemapBasedLightingSpecular(gWorldNormal, worldViewDir, worldFaceNormal);"),c?(p+=i(4,"vec3 ccReflectDir = reflectView(materialClearCoatNormal, worldViewDir);"),p+=i(4,"vec3 ccPrefilteredEnvmapColor = getPrefilteredEnvMapColor(materialClearCoatNormal, materialClearCoatRoughness, environmentRotate(ccReflectDir), worldFaceNormal);"),p+=i(4,"gSpecularLight += mix(specularIBL * ccAbsorbtion, ccPrefilteredEnvmapColor, ccF0);"),p+=i(4,"gDiffuseLight += ambientIBL * ccAbsorbtion * (1.0 - ccF0);")):(p+=i(4,"gDiffuseLight += ambientIBL;"),p+=i(4,"gSpecularLight += specularIBL;"))),s&&(p+=i(4,"vec3 diffuseLight, specularLight;"),p+=i(4,"IrradianceLight irradianceLight;"),e.pointLights.length>0&&(p+=i(4,"addPointLights(gWorldNormal, worldViewDir, diffuseLight, specularLight);")),e.directionalLights.length>0)))for(p+=i(4,"vec3 irradiance = vec3(0.0);"),p+=i(4,"float NdotL = 0.0;"),b=0;b<e.directionalLights.length;b++)p+=i(4,"getDirLightIrradiance(dirLight["+b+"], irradianceLight);"),p+=i(4,"NdotL = nDotL(gWorldNormal, irradianceLight.direction);"),p+=i(4,"irradiance = NdotL * irradianceLight.color * 3.141593;"),e.directionalLights[b]._castShadow&&f&&(p+=i(4,"irradiance *=getDirShadow(uDirectionalShadowMaps["+b+"]);")),p+=i(4,"diffuseLight = gDiffuse * lambert_diffuse_brdf() * irradiance;"),p+=i(4,"specularLight = cookTorranceSpecularBRDF(gWorldNormal, worldViewDir, irradianceLight.direction) * irradiance;"),c?(0===b&&(p+=i(4,"vec3 clearCoatLightSpecular;"),p+=i(4,"vec3 clearCoatLightAttenuation;")),p+=i(4," clearCoatCookTorranceSpecularBRDF(materialClearCoatRoughness, ccNoV, materialClearCoatNormal, worldViewDir, irradiance, irradianceLight.direction, clearCoatIntensity, uClearCoatF0, uClearCoatIor, clearCoatLightSpecular, clearCoatLightAttenuation);"),p+=i(4,"gDiffuseLight += (diffuseLight * clearCoatLightAttenuation);"),p+=i(4,"gSpecularLight += (clearCoatLightSpecular + specularLight * clearCoatLightAttenuation);")):(p+=i(4,"gDiffuseLight += diffuseLight;"),p+=i(4,"gSpecularLight += specularLight;"));s&&e.aoMap&&(p+=i(4,"float ambientOcclusion = getMaterialAmbientOcclude();"),p+=i(4,"gDiffuseLight *= ambientOcclusion;"),e.specularOcclusion&&(p+=i(4,"float specularOcclusion = getSpecularOcclusion(ambientOcclusion, gWorldNormal, worldViewDir);"),p+=i(4,"gSpecularLight *= specularOcclusion;"))),e.refraction&&(d+=i(0,"uniform mat4 uProjection;"),d+=i(0,"uniform vec2 uNearFar;"),d+=i(0,"uniform mat4 uViewMat;"),d+=t.LinearDepthToPositiveZ_FS,d+=t.ViewPositionRebuild_FS),e.refraction&&(d+=i(0,"uniform vec3 uRefractionTint;"),d+=i(0,"uniform vec2 uRefractionSize;"),d+=i(0,"uniform float uRefractionRoughness;"),d+=i(0,"uniform float uIOR;"),d+=i(0,"uniform float uRefractProbeRadius;"),d+=r("UnpackRGBA2Float_FS"),d+=r("RgbmDecode_FS"),d+="            \n                uniform sampler2D uRefraction;\n                uniform sampler2D uDepth;\n                /*\n                vec3 batchRefract(const in vec3 I, const in vec3 N, const in float eta, const in float dotNI) {\n                    float k = 1.0 - eta * eta * (1.0 - dotNI * dotNI);\n                    return (k < 0.0) ? vec3(0.0) :  eta * I - (eta * dotNI + sqrt(k)) * N;\n                }*/\n                vec3 calculateRefraction(const vec3 viewPosition, const vec3 viewNormal, const float refractionRougness) {\n                    vec3 viewDir = normalize(-viewPosition);\n                    vec3 refractDir = refract(-viewDir, viewNormal, 1.0 / uIOR);//, -dot(viewDir, viewNormal));\n                    vec3 viewRefractPosition = uRefractProbeRadius * refractDir + viewPosition;\n                    vec4 refractProj = uProjection * vec4(viewRefractPosition, 1.0);\n                    vec2 refractNDC = (refractProj.xy / refractProj.w);\n                    vec2 refractUV = refractNDC * .5 + .5;\n                    float refractPosDepth = unpackRGBAToFloat(texture2D(uDepth, refractUV));\n                    refractPosDepth = refractPosDepth > 1.0 ? (-viewPosition.z - uNearFar.x) / (uNearFar.y - uNearFar.x) : refractPosDepth;\n                    float refractViewZ = -linearDepthToPositiveZ(refractPosDepth, uNearFar);\n                    viewRefractPosition = rebuildViewPosition(refractNDC, refractViewZ, vec2(uProjection[0][0], uProjection[1][1]));\n                    vec4 reProjection = (uProjection * vec4(viewRefractPosition, 1.0));\n                    vec2 uv = (reProjection.xy / reProjection.w) * 0.5 + 0.5;\n                    // refracted object beyond the refraction point.\n                    if (dot(viewRefractPosition - viewPosition, viewNormal) > 0.0001) {\n                        uv = gl_FragCoord.xy / uRefractionSize;\n                    }\n\n                    /*\n                    eye dependent\n                    float adjustRoughness = clamp(uProjectionMatrix[1][1] / 12.0 * uBoxRadius / -vViewVertex.z, 0.0, 1.0);\n                    float adjustFactor = 0.05;\n                    adjustRoughness = (1.0 + adjustFactor) * adjustRoughness / (adjustFactor + adjustRoughness);\n                    */\n    \n                    float lodLevel = 7.0 * min(0.99, refractionRougness);\n                    float lowerLevel = floor(lodLevel);\n                    float higherLevel = lowerLevel + 1.0;\n                    \n                    float powLevel = pow(2.0, higherLevel); \n\n                    // clamp to one pixel\n                    vec2 texelSize = 2.0 * powLevel / uRefractionSize * vec2(1., 2.0);\n                    uv = max(texelSize, min(1.0 - texelSize, uv));\n                    \n                    // vec2 uvLower;\n                    // uvLower.x = uv.x * 2.0 / powLevel;\n                    // uvLower.y = uv.y / powLevel + (1. - 2. / powLevel);\n                    vec2 uvLower = vec2(2.0 * uv.x, uv.y + powLevel - 2.0) / powLevel;\n                    \n                    powLevel *= 2.0;\n                    vec2 uvHigher = vec2(2.0 * uv.x, uv.y + powLevel - 2.0) / powLevel;\n                    float fresnelDarken = pow(clamp(1.0 - dot(viewDir, viewNormal), 0.0, 1.0), 6.);                \n                    vec3 lowerRefractionColor = decodeRGBM7(texture2D(uRefraction, uvLower));\n                    vec3 higherRefractionColor = decodeRGBM7(texture2D(uRefraction, uvHigher));\n                    vec3 refractedColor = mix(lowerRefractionColor, higherRefractionColor, lodLevel - lowerLevel);\n                    refractedColor.rgb -= refractedColor.rgb * fresnelDarken;\n                    return refractedColor.rgb;\n                }",e.shininessMap&&e.refractUseShininessMap?(p+=i(4,"float refractionRoughness = gShininessMapFetch;"),e.shininessInversion||(p+=i(4,"refractionRoughness = 1.0 - refractionRoughness;")),p+=i(4,"refractionRoughness = mix(refractionRoughness, 1.0, uRefractionRoughness);")):p+=i(4,"float refractionRoughness = uRefractionRoughness;"),p+=i(4,"vec3 refractionColor = uRefractionTint * calculateRefraction(varyViewPosition, frontFaceFlip(varyViewNormal), refractionRoughness);"),e.refractUseDiffuse&&(p+=i(4,"refractionColor *= gDiffuse;")),p+=i(4,"gDiffuseLight = mix(refractionColor, gDiffuseLight, materialOpacity);")),p+=i(4,"gFinalColor = gDiffuseLight + gSpecularLight;"),p+=i(4,"gFinalColor += getEmissive();"),e.cavityMap&&(p+=i(4,"gFinalColor *= getMaterialCavity();"));var U=d+this.customFragmentHeadSlot(e,t)+p;U+=i(4,"gFinalColor = gammaOutput(gFinalColor);"),U+=i(4,"gl_FragColor = vec4(gFinalColor, gAlpha);"),U+=this.customFragmentMainEndSlot(e,t),U+=t.MainEnd_FS;var O=function(e){return e.replace(/(\/\*([\s\S]*?)\*\/)|(\/\/(.*)$)/gm,"")},V=function(e){return"#version 100\n"+e},z=function(e){return"precision "+WebGLCompatibility.instance().getShaderMaxPrecisionFloat()+" float;\n"+e};return{vs:F=V(z(O(F))),fs:U=V(z(O(U)))}}}class c extends r{constructor(e){const{uniforms:t,effects:n}=e;super(e),this.reset(),this._shaderDirty=!0,this._shaderTemplate=new u,this.setUniforms(t),this.setEffects(n)}setUniforms(e={}){const t=Object.keys(e),n=Object.keys(_.Map2DS);t.forEach((t=>{-1!==n.indexOf(t)&&(this[b(t)]=!!e[t])})),Object.assign(this._uniforms,e)}setEffects(e={}){const t=[].concat(Object.keys(_.Flags),Object.keys(_.Map2DS).map((e=>b(e))));for(const n in e)-1!==t.indexOf(n)&&(this[n]=e[n]);return this}markDirty(){this._shaderDirty=!0}reset(){var e;for(e in _.Colors){var t=_.Colors[e];this[t.setter](t.default.slice(0))}for(e in _.Flags)this[e]=_.Flags[e];for(e in _.Values)this[e]=_.Values[e];for(e in _.Map2DS){var n=_.Map2DS[e],r=e,i=r+"Channel",o=r+"UV";this[r+"Gamma"]=n.gamma,this[i]=n.defaultChannel,this[o]=n.uv,this[r]=null,this[b(e)]=!1}for(e in _.SpecialMaps)this[e]=null}updateColor(){for(var e in _.Colors){var t=_.Colors[e],n=t.setter,r=t.getter;this[n](this[r]())}}_correctChannel(e,t){var n=t.channels;if(n>0){if(n<e.length)return e.substring(0,n);if(n>e.length){for(var r=e,i=r.charAt(r.length-1),o=n-r.length,a=0;a<o;a++)r+=i;return r}return e}}_getMap2DParameters(e){const t={},n=e.name;if(!this[b(n)])return t;if(n===_.Map2DS.opacityMap.name){t.alphaTest=this._alphaTestValue>0;var r=this._needsBlend||t.alphaTest||t.dithered||t.refraction;if(!1===r)return;t[n]=r}else t[n]=!0;return t[n+"UV"]=this[n+"UV"],t[n+"Channel"]=this._correctChannel(this[n+"Channel"],e),t}generateParameter({prefilterPanorama:e,morph:t,skin:n,quantized:r,scene:i}){var a={dithered:this._dithered,needsBlend:this._needsBlend,morph:t,needsMorphNormal:!!t&&t._needsMorphNormal,skin:!!n,skinTech:n?n.skinTech:void 0,skinParam:n?n.skinParam:0,quantizedPosition:r&&r.getQuantized(o.Position),quantizedUV1:r&&r.getQuantized(o.UV1),quantizedUV2:r&&r.getQuantized(o.UV2),quantizedNormal:r&&r.getQuantized(o.Normal),quantizedTangent:r&&r.getQuantized(o.Tangent),envMap:this._enableEnvMap,prefilterPanorama:e,rgbmEnvMap:!1,envIntensity:i&&1!==i._envIntensity,envRotationFlag:i&&i._envRotationFlag,metalnessWorkFlow:this._metalnessWorkFlow,specularOcclusion:this._specularOcclusion,enableSpecularAA:this._enableSpecularAA,aoFactor:this._aoFactor,diffuseTint:this._diffuseTint,emissiveTint:this._emissiveTint,specularTint:this._specularTint,opacityTint:this._needsBlend||this._dithered||this._refraction,gammaMode:this._gammaMode,ue4IBL:this._ue4IBL,chunksVersion:0,normalMapFlipY:this._normalMapFlipY,useNormalMapAsBump:this._useNormalMapAsBump,clearCoatNormalMapFlipY:this._clearCoatNormalMapFlipY,receiveShadow:this._receiveShadow,pointLightShadowNumber:i?i._pointLightShadowNumber:0,directionalLightShadowNumber:i?i._directionalLightShadowNumber:0,shininessInversion:this._shininessInversion,enableClearCoat:this._enableClearCoat,clearCoatNormalMap:this._enableClearCoat&&this._clearCoatNormalMap,refraction:this._refraction,refractUseDiffuse:this._refraction&&this._refractUseDiffuse,refractUseShininessMap:this._refraction&&this._refractUseShininessMap};return Object.assign(a,...Object.values(_.Map2DS).map((e=>this._getMap2DParameters(e)))),a}get vs(){return this._shaderDirty&&(this.generateEffect(),this._shaderDirty=!1),this._vs}get fs(){return this._shaderDirty&&(this.generateEffect(),this._shaderDirty=!1),this._fs}generateEffect(e){let t=this.generateParameter({}),n=function(e){var t=[];for(var n in e)e[n]&&t.push(n);t.sort();for(var r="",i=0;i<t.length;i++)r+=(n=t[i])+e[n];return r}(t);if(n+=this._acceptLight&&e&&e._directionalLights&&e._directionalLights.length>0?"dir"+e._directionalLights.length:"dir0",n=i.hash(n),n!==this._shaderHash){this._shaderHash=n,t.directionalLights=[],t.pointLights=[],t.acceptLight=this._acceptLight;const e=this._shaderTemplate.generateShader(t,this._chunks);this._vs=e.vs,this._fs=e.fs}}copy(e){for(var t in super.copy(e),_.Flags)this[t]=e[t];for(t in _.Colors){var n=_.Colors[t];this[n.setter](e[n.getter]()),n.hasIntensity&&(this[t+"Intensity"]=e[t+"Intensity"])}for(t in _.Values)this[t]=e[t];for(t in _.Map2DS){_.Map2DS[t];var r=t,i=r+"Channel",o=r+"UV";this[r]=e[r],this[i]=e[i],this[o]=e[o]}for(t in _.SpecialMaps)this[t]=e[t];return this.markDirty(),this}toJson(){var e=super.toJson();for(var t in e.type="Physical",_.Flags)e[t]=this[t];for(t in _.Colors){var n=_.Colors[t],r=this[n.getter]();e[t]=[r.r,r.g,r.b],n.hasIntensity&&(e[t+"Intensity"]=this[t+"Intensity"])}for(t in _.Values)e[t]=this[t];for(t in _.Map2DS){_.Map2DS[t];var i=t;this[i]&&(e[i]=this[i]._id);var o=i+"Channel",a=i+"UV";e[o]=this[o],e[a]=this[a]}for(t in _.SpecialMaps)e[t]=null;return e}fromJson(e,t){for(var n in t=t||{},super.fromJson(e),_.Flags)this[n]=e[n];for(n in _.Colors){var r=_.Colors[n];this[r.setter](e[n][0],e[n][1],e[n][2]),r.hasIntensity&&(this[n+"Intensity"]=e[n+"Intensity"])}for(n in _.Values)this[n]=e[n];for(n in _.Map2DS){_.Map2DS[n];var i=n,o=i+"Channel",a=i+"UV",s=t[e[i]];s&&!0===s.isTexture&&(this[i]=t[e[i]]),this[o]=e[o],this[a]=e[a]}this.markDirty()}}var f=function(e,t){var n="_"+t;Object.defineProperty(e,t,{get:function(){return this[n]},set:function(e){return e!==this[n]&&(this[n]=e,this.markDirty()),this}})},h=function(e,t){var n="_"+t;const r=t+"";Object.defineProperty(e,t,{get:function(){return this._uniforms[r]},set:function(e){var t=this[n];return(!t&&e||t&&!e)&&this.markDirty(),t&&e&&t.type!==e.type&&this.markDirty(),this._uniforms[r]=e,this}})},d=function(e,t,n){var r=n.uniform,i=(n.private,n.setter);e[n.getter]=function(){return this._uniforms[r]},e[i]=function(){let e;return e=1===arguments.length?arguments[0].slice(0):[arguments[0],arguments[1],arguments[2]],this._uniforms[r]=e,this}},p=function(e,t){var n="_"+t;Object.defineProperty(e,t,{get:function(){return this[n]},set:function(e){return this[n]=e,this._uniforms["u"+t[0].toUpperCase()+t.slice(1)]=e,this}})};let _={Values:{alpha:1,shininess:.5,normalMapRate:1,bumpMapFactor:10,metalness:0,dieletricReflectance:.5,aoFactor:1,displacementFactor:.1,emissiveIntensity:1,clearCoatIntensity:1,clearCoatReflectivity:0,clearCoatThickness:5,clearCoatNormalMapRate:1,clearCoatRoughness:.04,cavityIntensity:1,refractionTexSize:[1,1],refractionRoughness:0,ior:1.05,refractProbeRadius:10},Colors:{ambientColor:{name:"ambient",default:[0,0,0],srgb:!0},diffuseColor:{name:"diffuse",default:[1,1,1],srgb:!0},specularColor:{name:"specular",default:[0,0,0],srgb:!0},emissiveColor:{name:"emissive",default:[0,0,0],srgb:!0},clearCoatTint:{name:"clearCoatTint",default:[1,1,1],srgb:!1},refractionTint:{name:"refractionTint",default:[1,1,1],srgb:!1}},Flags:{receiveShadow:!0,acceptLight:!0,refraction:!1,alphaTestValue:0,metalnessWorkFlow:!1,specularOcclusion:!0,enableSpecularAA:!0,diffuseTint:!1,specularTint:!1,emissiveTint:!1,useNormalMapAsBump:!1,enableEnvMap:!0,normalMapFlipY:!1,shininessInversion:!1,dithered:!1,ue4IBL:!0,enableClearCoat:!1,clearCoatNormalMapFlipY:!1,refractUseShininessMap:!1,refractUseDiffuse:!1},Map2DS:{diffuseMap:{name:"diffuseMap",sRGB:!0,defaultChannel:"rgb",channels:3,uv:1},opacityMap:{name:"opacityMap",sRGB:!1,defaultChannel:"a",channels:1,uv:1},normalMap:{name:"normalMap",sRGB:!1,defaultChannel:"rgb",channels:-1,uv:1},shininessMap:{name:"shininessMap",sRGB:!1,defaultChannel:"g",channels:1,uv:1},specularMap:{name:"specularMap",sRGB:!0,defaultChannel:"rgb",channels:3,uv:1},metalnessMap:{name:"metalnessMap",sRGB:!1,defaultChannel:"g",channels:1,uv:1},lightMap:{name:"lightMap",sRGB:!0,defaultChannel:"g",channels:3,uv:2},emissiveMap:{name:"emissiveMap",sRGB:!0,defaultChannel:"rgb",channels:3,uv:1},aoMap:{name:"aoMap",sRGB:!1,defaultChannel:"g",channels:1,uv:2},displacementMap:{name:"displacementMap",sRGB:!1,defaultChannel:"g",channels:1,uv:1},clearCoatIntensityMap:{name:"clearCoatIntensityMap",sRGB:!1,defaultChannel:"g",channels:1,uv:1},clearCoatNormalMap:{name:"clearCoatNormalMap",sRGB:!1,defaultChannel:"rgb",channels:3,uv:1},clearCoatRoughnessMap:{name:"clearCoatRoughnessMap",sRGB:!1,defaultChannel:"g",channels:1,uv:1},cavityMap:{name:"cavityMap",sRGB:!1,defaultChannel:"g",channels:1,uv:1}}};const b=e=>{const t=_.Map2DS[e].name;return"enable"+t[0].toUpperCase()+t.slice(1)};_.SpecialMaps={envMap:null,refractionMap:null,depthTexture:null},function(){var e=c.prototype;for(var t in _.Values)p(e,t);for(t in _.Colors)d(e,0,_.Colors[t]);for(t in _.Flags)f(e,t);for(t in _.Map2DS){_.Map2DS[t];var n=t;h(e,n),f(e,n+"Channel"),f(e,n+"UV"),f(e,n+"Gamma"),f(e,b(t))}for(t in _.SpecialMaps)h(e,t),f(e,t.toUpperCase()+t.slice(1))}(),t.exports=c},{"./AttributeNames":1,"./Model":19,"./math/Math":48,"./pbr-chunks/chunks":77}],25:[function(e,t,n){const{Mesh:r,MeshLayout:i}=e("./Mesh"),o=e("./AttributeNames"),a=e("./WebGLConstants");t.exports=class extends r{constructor(e){super();var t=(e=e||{}).width||e.size||1,n=e.height||e.size||1,r=void 0===e.normal||e.normal,s=void 0===e.uv||e.uv,l=t/2,u=n/2,c=[-l,-u,0,l,-u,0,l,u,0,-l,u,0],f=[{name:o.Position,size:3,data:c}];r&&f.push({name:o.Normal,size:3,data:[0,0,1,0,0,1,0,0,1,0,0,1]}),s&&f.push({name:o.UV1,size:2,data:[0,0,1,0,1,1,0,1]});var h=new i;h.addAttributes(f,a.FLOAT,a.STATIC_DRAW);h.setIndex([0,1,2,0,2,3],o.Static,a.UNSIGNED_SHORT),super.buildByLayout(h)}}},{"./AttributeNames":1,"./Mesh":18,"./WebGLConstants":38}],26:[function(e,t,n){e("./AttributeNames"),e("./ProgramUniform"),e("./math/Mat4"),e("./WebGLConstants");const r=e("./GlobalID");t.exports=class{constructor({context:e,vs:t,fs:n}){this._id=r(),this._context=e,this._vs=t,this._fs=n,this._programUniforms=null,this._programAttributes=null,this._handler=null,this._samplersUnits={},this._initialize()}_initialize(){this._handler=this._context.createProgram(this._vs,this._fs),this._programUniforms=this._context.acquireProgramUniforms(this._handler),this._context.useProgram(this._handler);let e=0;for(const t in this._programUniforms){const n=this._programUniforms[t];if(!n.sampler)continue;let r=e;const i=n.size;n.array?(r=[...Array(i).keys()],n.setValue(r),e+=i):n.setValue(e++),this._samplersUnits[t]=r}this._programAttributes=this._context.acquireProgramAttributes(this._handler)}bindVertexAttributes(e={}){}_setUniform(e,t,n){}draw({uniforms:e,attributes:t,indices:n,drawMode:r,vertexCount:i,instanceCount:o}){this._context.useProgram(this._handler),this._context.setVertexArray(t,n,this);for(const t in e){const n=this._programUniforms[t];if(!n)continue;let r=e[t];n.size;if(n.sampler){const e=this._samplersUnits[t];let n=Array.isArray(e);if(n&&!Array.isArray(r)&&(r=[r]),n)for(let t=0;t<Math.min(e.length,r.length);t++)this._context.setTexture(r[t],e[t]);else this._context.setTexture(r,e)}else n.setValue(r)}const a=i,s=n;this._context._directDraw({instanceCount:o,drawMode:r,start:0,count:a,hasIndices:s})}}},{"./AttributeNames":1,"./GlobalID":14,"./ProgramUniform":27,"./WebGLConstants":38,"./math/Mat4":47}],27:[function(e,t,n){t.exports=class{constructor({location:e,cache:t,size:n,cacheSize:r,setter:i,type:o,sampler:a=!1,array:s=!1}){this._size=n,this._cacheSize=r,this._cacher=t?new Array(r):null,this._setter=i,this._location=e,this._type=o,this._sampler=a,this._array=s}get array(){return this._array}get size(){return this._size}get sampler(){return this._sampler}cache(e){if(!this._cacher)return!0;const t=this._cacher.length;var n=!1;if(1===t)this._cacher[0]!==e&&(this._cacher[0]=e,n=!0);else for(var r=0;r<t;r++)this._cacher[r]!==e[r]&&(this._cacher[r]=e[r],n=!0);return n}setValue(e){this.cache(e)&&this._setter(this._location,e)}}},{}],28:[function(e,t,n){const r=e("./WebGLConstants"),i=e("./GlobalId"),o=e("./Texture"),a=e("./CubeMap"),{Observable:s}=e("./Observable"),l=e("./DataTexture");class u{constructor(e){var t;if(this._id=i(),this._version=0,e=e||{},this.name=e.name||"untitled",e.texture?t=e.texture:(e.mipMaping=!!e.mipMaping,e.flipY=!1,(t=e.renderToCube?new a:new o(e)).width=e.width?e.width:512,t.height=e.height?e.height:512),this._renderToCube=t instanceof a,this._face=0,this._colorTexture=t,this.enableDepth=void 0!==e.enableDepth&&e.enableDepth,this.enableStencil=void 0!==e.enableStencil&&e.enableStencil,this.useDepthTexture=void 0!==e.useDepthTexture&&e.useDepthTexture,this._shareDepthFrom=e.shareDepthFrom,this.enableDepth&&this.useDepthTexture){if(!0===this._renderToCube)throw new Error("RenderTarget.renderToCube cant work with depthTexture");this.depthTexture=new o({dataType:this.enableStencil?r.UNSIGNED_INT_24_8:r.UNSIGNED_SHORT,mipMaping:!1}),this.depthTexture.width=t.width,this.depthTexture.height=t.height}this._viewport=e.viewport||[0,0,t.width,t.height],this.viewportChanged=!0,this.releaseObservable=new s}get colorTexture(){return this._colorTexture}get face(){return this._face}set face(e){this._face=e}get width(){return this._colorTexture.width}get height(){return this._colorTexture.height}resize(e,t){e===this.width&&t===this.height||(this.release(),this._colorTexture.width=e,this._colorTexture.height=t,this.setViewPort(0,0,e,t))}get renderToCube(){return this._renderToCube}release(){this.releaseObservable.notifyObservers(this)}setViewPort(e,t,n,r){var i=this._viewport;i[0]===e&&i[1]===t&&i[2]===n&&i[3]===r||(i[0]=e,i[1]=t,i[2]=n,i[3]=r,this.markDirty=!0)}copy(e){this._renderToCube=e._renderToCube,this._width=e._width,this._height=e._height,this._face=e._face,this._colorTexture=e._colorTexture.clone(),this.enableDepth=e.enableDepth,this.enableStencil=e.enableStencil,this._viewport=e._viewport.slice(0),this.viewportChanged=e.viewportChanged}get markDirty(){return!1}set markDirty(e){!0===e&&this._version++}}u.createFloat4=(e=512,t=512,n=null,r=!1)=>new u({width:e,height:t,texture:l.createFloat4(e,t,n,r)}),t.exports=u},{"./CubeMap":6,"./DataTexture":7,"./GlobalId":15,"./Observable":22,"./Texture":33,"./WebGLConstants":38}],29:[function(require,module,exports){const WebGLCompatibility=require("./WebGLCompatibility");var isStringInteger=function(e){return/^[\+|\-]?\d+$/.test(e)},getFinalDefinedValue=function(e,t){for(;e[t]&&t!==e[t];)t=e[t];return t},testIf=function(defines,line){if(line.startsWith("#ifdef"))return void 0!==defines[line.substr(7-line.length)];if(line.startsWith("#ifndef"))return void 0===defines[line.substr(8-line.length)];if(line.startsWith("#else"))return!0;for(var txt=line.match(/[#elif|#if]\s+(.*)/)[1],tokens=txt.split(/\b\d+\b|\W+|defined+/g),i=0;i<tokens.length;++i){var tok=tokens[i];if(tok){var value=getFinalDefinedValue(defines,defines[tok]);void 0===value||isStringInteger(value)||(value=!0),txt=txt.replace(tok,value)}}return eval("var defined = function(x) { return x !== undefined | 0; };\n"+txt)},processBranch=function(e,t,n,r){for(var i=[1],o=t;o<e.length;++o){var a=e[o].trim();if(a.startsWith("#endif"))i.length--;else if(a.startsWith("#el")){var s=i.length-1;0===i[s]?i[s]=testIf(n,a)?1:0:1===i[s]&&(i[s]=2)}else if(a.startsWith("#if"))i.push(testIf(n,a)?1:0);else{for(var l=!0,u=i.length;u--;)l=l&&1===i[u];if(l)if(a.startsWith("#"))if(a.startsWith("#extension"))r.push(a);else if(a.startsWith("#undef"))n[a.match(/#undef\s+(\w+)/)[1]]=void 0,r.push(a);else if(a.startsWith("#define")){var c=a.match(/#define\s+(\w+)\s*(.*)/);-1!==a.indexOf(c[1]+"(")?n[c[1]]={args:a.match(/\(.*?\)/)[0].match(/\w+/g),body:a.match(/\)(.*)/)[1]}:n[c[1]]=c[2]}else console.error("unknown preprocessor line: "+a);else r.push(a)}}},preprocessShaderSource=function(e){return e};module.exports={preprocessShaderSource:preprocessShaderSource}},{"./WebGLCompatibility":37}],30:[function(e,t,n){const r=e("./WebGLConstants"),i=e("./AttributeNames"),{Mesh:o,MeshLayout:a}=e("./Mesh"),s=e("./math/Vec3"),l=e("./math/Mat4"),{calculateTangents:u}=e("./Tangents");t.exports=class extends o{constructor(e){super();for(var t=(e=e||{}).segments||32,n=e.diameter||1,o=e.arc<=0||e.arc>1?1:e.arc||1,c=e.slice<=0?1:e.slice||1,f=new s(n/2,n/2,n/2),h=2+t,d=2*h,p=[],_=[],b=[],m=[],v=0;v<=h;v++){for(var g=v/h,y=g*Math.PI*c,x=0;x<=d;x++){var E=x/d,T=E*Math.PI*2*o,S=new l;S.rotateZ(-y);var R=new l;R.rotateY(T);var M=s.AxisY().transformByMat4(S).transformByMat4(R),N=M.clone().normalize(),A=M.mul(f);_.push(A.x,A.y,A.z),b.push(N.x,N.y,N.z),m.push(E,g)}if(v>0)for(var w=_.length/3,C=w-2*(d+1);C+d+2<w;C++)p.push(C+d+1),p.push(C+1),p.push(C),p.push(C+d+2),p.push(C+1),p.push(C+d+1)}var F=[{name:i.Position,size:3,data:_},{name:i.Normal,size:3,data:b},{name:i.UV1,size:2,data:m}];if(!0===e.tangents){var I={name:i.Tangent,size:4,data:u(_,b,m,p)};F.push(I)}var D=new a;D.addAttributes(F,r.FLOAT,r.STATIC_DRAW),D.setIndex(p,r.STATIC_DRAW,r.UNSIGNED_INT),super.buildByLayout(D)}}},{"./AttributeNames":1,"./Mesh":18,"./Tangents":32,"./WebGLConstants":38,"./math/Mat4":47,"./math/Vec3":53}],31:[function(e,t,n){t.exports=class{constructor(e){this.performance=!0,this.startTime=0,this.stopTime=0,this.running=!1,this.performance=!1!==window.performance&&!!window.performance,this.preTime=0,e&&this.start()}currentTime(){return this.performance?window.performance.now():(new Date).getTime()}restart(){this.preTime=this.currentTime()}getIntervalMiniSeconds(){if(this.running){var e=this.currentTime(),t=e-this.preTime;return this.preTime=e,t}return window.window.console.warn("Stop-watch hasn't start yet, will return zero!"),0}getIntervalSeconds(){return this.getIntervalMiniSeconds()/1e3}start(){this.startTime=this.currentTime(),this.preTime=this.startTime,this.running=!0}stop(){this.stopTime=this.currentTime(),this.running=!1}getElapsedMilliseconds(){return this.running&&(this.stopTime=this.currentTime()),this.stopTime-this.startTime}getElapsedSeconds(){return this.getElapsedMilliseconds()/1e3}printElapsed(e){var t=e||"Elapsed:";window.window.console.log(t,"["+this.getElapsedMilliseconds()+"ms]","["+this.getElapsedSeconds()+"s]")}}},{}],32:[function(e,t,n){const r=e("./VertexBuffer"),i=e("./VertexAttribute"),o=e("./math/Vec3"),a=e("./math/Vec2"),s=(e,t,n,r)=>{var i,s,l,u,c,f,h,d,p,_,b,m,v,g,y,x=r.count/3,E=e.count,T=new o,S=new o,R=new o,M=new o,N=new o,A=new a,w=new a,C=new a,F=new Float32Array(3*E),I=new Float32Array(3*E),D=new Float32Array(4*E),L=0;for(y=0;y<x;y++)i=r.get(3*y),s=r.get(3*y+1),l=r.get(3*y+2),e.get(i,R),e.get(s,M),e.get(l,N),n.get(i,A),n.get(s,w),n.get(l,C),u=M.x-R.x,c=N.x-R.x,f=M.y-R.y,h=N.y-R.y,d=M.z-R.z,p=N.z-R.z,_=w.x-A.x,b=C.x-A.x,m=w.y-A.y,0===(L=_*(v=C.y-A.y)-b*m)?(T.set(0,1,0),S.set(1,0,0)):(g=1/L,T.set((v*u-m*c)*g,(v*f-m*h)*g,(v*d-m*p)*g),S.set((_*c-b*u)*g,(_*h-b*f)*g,(_*p-b*d)*g)),F[3*i+0]+=T.x,F[3*i+1]+=T.y,F[3*i+2]+=T.z,F[3*s+0]+=T.x,F[3*s+1]+=T.y,F[3*s+2]+=T.z,F[3*l+0]+=T.x,F[3*l+1]+=T.y,F[3*l+2]+=T.z,I[3*i+0]+=S.x,I[3*i+1]+=S.y,I[3*i+2]+=S.z,I[3*s+0]+=S.x,I[3*s+1]+=S.y,I[3*s+2]+=S.z,I[3*l+0]+=S.x,I[3*l+1]+=S.y,I[3*l+2]+=S.z;m=new o,v=new o;var P=new o,B=new o;for(y=0;y<E;y++){t.get(y,P),m.set(F[3*y],F[3*y+1],F[3*y+2]),v.set(I[3*y],I[3*y+1],I[3*y+2]);var U=P.dot(m);B.copy(P).scale(U),m.subTo(B,B),0!==B.squaredLength()&&B.normalize(),D[4*y]=B.x,D[4*y+1]=B.y,D[4*y+2]=B.z,P.crossTo(m,B),D[4*y+3]=B.dot(v)<0?-1:1}return D};t.exports={calculateTangents:(e,t,n,o)=>s(new i(new r(new Float32Array(e),3)),new i(new r(new Float32Array(t),3)),new i(new r(new Float32Array(n),2)),new i(new r(new Int32Array(o),1))),calculatFromAttributes:s}},{"./VertexAttribute":34,"./VertexBuffer":35,"./math/Vec2":52,"./math/Vec3":53}],33:[function(e,t,n){const{Observable:r}=e("./Observable"),i=e("./WebGLConstants"),o=e("./GlobalID"),a=e("./math/Vec2"),s=e("./math/Math");t.exports=class{constructor(e={}){this._id=o(),this._version=0,this._dataType=e.dataType||i.UNSIGNED_BYTE,this._internalFormat=e.internalFormat||i.RGBA,this._format=e.format||i.RGBA,this._source=e.source||null,this._mipMaping=e.mipMaping||!1,this._flipY=e.flipY||!1,this._wrapS=e.wrapS||i.CLAMP_TO_EDGE,this._wrapT=e.wrapT||i.CLAMP_TO_EDGE,this._magFilter=e.magFilter||i.LINEAR,this._minFilter=e.minFilter||i.LINEAR,this._anisotropy=e.anisotropy||16,this.releaseObservable=new r,this.rgbm=void 0!==e.rgbm&&e.rgbm,this._width=0,this._height=0,this._size=new a(this.width,this.height)}isPowerOfTwo(){return s.isPowerOfTwo(this.width)&&s.isPowerOfTwo(this.height)}get isTexture(){return!0}get width(){return this._width}set width(e){return this._size.x=e,this._width=e,this}get size(){return this._size}get height(){return this._height}set height(e){return this._size.y=e,this._height=e,this}get dataType(){return this._dataType}set dataType(e){if(this._dataType!==e)return this._dataType=e,this.markDirty=!0,this}get format(){return this._format}set format(e){if(this._format!==e)return this._format=e,this.markDirty=!0,this}get internalFormat(){return this._internalFormat}set internalFormat(e){if(this._internalFormat!==e)return this._internalFormat=e,this.markDirty=!0,this}get mipMaping(){return this._mipMaping}set mipMaping(e){if(this._mipMaping!==e)return this._mipMaping=e,this.markDirty=!0,this}get wrapS(){return this._wrapS}set wrapS(e){if(e!==this._wrapS)return this._wrapS=e,this.markDirty=!0,this}get wrapT(){return this._wrapT}set wrapT(e){if(e!==this._wrapT)return this._wrapT=e,this.markDirty=!0,this}get magFilter(){return this._magFilter}set magFilter(e){if(this._magFilter!==e)return this._magFilter=e,this.markDirty=!0,this}get minFilter(){return this._minFilter}set minFilter(e){if(this._minFilter!==e)return this._minFilter=e,this.markDirty=!0,this}get markDirty(){return!1}set markDirty(e){return!0===e&&(this._version=this._version+1),this}set source(e){if(this._source!==e)return this._source=e,this.markDirty=!0,this}get source(){return this._source}set flipY(e){this._flipY!==e&&(this._flipY=e,this.markDirty=!0)}get flipY(){return this._flipY}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy!==e&&(this._anisotropy=e,this.markDirty=!0)}release(){this.releaseObservable.notifyObservers(this)}copy(e){this._dataType=e._dataType,this._internalFormat=e._internalFormat,this._source=e._source,this._mipMaping=e._mipMaping,this.width=e.width,this.height=e.height,this.rgbm=e.rgbm,this._flipY=e._flipY,this._wrapS=e._wrapS,this._wrapT=e._wrapT,this._magFilter=e._magFilter,this._minFilter=e._minFilter,this.markDirty=!0}clone(){}}},{"./GlobalID":14,"./Observable":22,"./WebGLConstants":38,"./math/Math":48,"./math/Vec2":52}],34:[function(e,t,n){e("./AttributeNames");const r=e("./math/Vec4"),i=e("./math/Vec3"),o=e("./math/Vec2"),a=e("./GlobalID");class s{constructor(e,t,n,r=0){this._id=a(),this._buffer=e,this._array=e._array;var i=e.bytesPerElement;this._stride=e._stride,this._strideBytes=this._stride*i,this._offset=n||0,this._offsetBytes=this._offset*i,this._count=e._count,this._itemSize=t||this._stride,this._divisor=r,this.normalized=!1,this.get=s.getter(this._itemSize)}set(){for(var e=0,t=this._stride*arguments[e]+this._offset;e<this._itemSize;e++)this._array[t+e]=arguments[e+1]}setFromArray(e){for(var t,n=0,r=e.length/this._itemSize;n<r;n++){var i=n*this._stride+this._offset;for(t=0;t<this._itemSize;t++)this._array[i+t]=e[n*this._itemSize+t]}}get itemSize(){return this._itemSize}get stride(){return this._stride}get offset(){return this._offset}get count(){return this._count}set markDirty(e){!1!==e&&(this._buffer.markDirty=!0)}}var l;s.getter=((l=new Array(4))[0]=function(e){return this._array[this._stride*e+this._offset]},l[1]=function(e,t){var n=t||new o,r=e*this._stride+this._offset;return n.x=this._array[r],n.y=this._array[r+1],n},l[2]=function(e,t){var n=t||new i,r=e*this._stride+this._offset;return n.x=this._array[r],n.y=this._array[r+1],n.z=this._array[r+2],n},l[3]=function(e,t){var n=t||new r,i=e*this._stride+this._offset;return n.x=this._array[i],n.y=this._array[i+1],n.z=this._array[i+2],n.w=this._array[i+3],n},function(e){return l[e-1]}),t.exports=s},{"./AttributeNames":1,"./GlobalID":14,"./math/Vec2":52,"./math/Vec3":53,"./math/Vec4":54}],35:[function(e,t,n){e("./AttributeNames");const r=e("./WebGLConstants"),{Observable:i}=e("./Observable"),o=e("./GlobalID");t.exports=class{constructor(e,t,n=!0){this._id=o(),this._array=e,this._stride=t,this._storeType=function(e){return e instanceof Int8Array?r.BYTE:e instanceof Uint8Array?r.UNSIGNED_BYTE:e instanceof Int16Array?r.SHORT:e instanceof Uint16Array?r.UNSIGNED_SHORT:e instanceof Int32Array?r.INT:e instanceof Uint32Array?r.UNSIGNED_INT:e instanceof Float32Array?r.FLOAT:e instanceof Float64Array?r.DOUBLE:void 0}(e),this._count=e.length/t,this._version=0,this.releaseObservable=new i,this._staticUsage=n}set markDirty(e){!0===e&&this._version++}get bytesPerElement(){return this._array.BYTES_PER_ELEMENT}get length(){return this._array.length}release(){this.releaseObservable.notifyObservers(this,void 0)}}},{"./AttributeNames":1,"./GlobalID":14,"./Observable":22,"./WebGLConstants":38}],36:[function(e,t,n){const r=e("eventemitter3"),i=e("./WebGLContext"),o=e("./Program");t.exports=class extends r{constructor(e,t){super(),this._canvas=e,this._currentWidth=0,this._currentHeight=0,this.setupDevicePixelRatio(),this._context=new i(this._canvas,t),this._context.initializeStates(),this._programCache={}}get context(){return this._context}runTransform({}){}draw(e,t={}){let n=this._programCache[e.shaderHash];t.renderTarget;const r=this._context;if(void 0===n){const t=e.vs,i=e.fs;n=new o({vs:t,fs:i,context:r}),this._programCache[e.shaderHash]=n}const i=t.uniforms?Object.assign(e.uniforms,t.uniforms):e.uniforms,a=e.attributes,s=e.indices,l=e.vertexCount,u=e.drawMode,c=e.instanceCount;n.draw({uniforms:i,attributes:a,indices:s,vertexCount:l,drawMode:u,instanceCount:c})}get width(){return this._currentWidth}get height(){return this._currentHeight}get canvas(){return this._canvas}setupDevicePixelRatio(){const e=window.devicePixelRatio||1;this._devicePixelRatio=e}computeCanvasSize(){var e,t,n=this._canvas;(e=n.clientWidth)<1&&(e=1),(t=n.clientHeight)<1&&(t=1);var r=this._devicePixelRatio,i=Math.floor(e*r),o=Math.floor(t*r),a=!1;return this._currentWidth!==i&&(n.width=i,this._currentWidth=i,a=!0),this._currentHeight!==o&&(n.height=o,this._currentHeight=o,a=!0),a}}},{"./Program":26,"./WebGLContext":39,eventemitter3:60}],37:[function(e,t,n){const r=e("./WebGLUtils"),i=e("./Texture");var o=function(){this._checkRTT={},this._webGLExtensions={},this._webGLParameters={},this._webGLShaderMaxInt="NONE",this._webGLShaderMaxFloat="NONE",this._bugsDB={},this._webGLPlatforms={},this._webGLParameters.MAX_COMBINED_TEXTURE_IMAGE_UNITS=8,this._webGLParameters.MAX_CUBE_MAP_TEXTURE_SIZE=16,this._webGLParameters.MAX_FRAGMENT_UNIFORM_VECTORS=16,this._webGLParameters.MAX_RENDERBUFFER_SIZE=1,this._webGLParameters.MAX_TEXTURE_IMAGE_UNITS=8,this._webGLParameters.MAX_TEXTURE_SIZE=64,this._webGLParameters.MAX_VARYING_VECTORS=8,this._webGLParameters.MAX_VERTEX_ATTRIBS=8,this._webGLParameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS=0,this._webGLParameters.MAX_VERTEX_UNIFORM_VECTORS=128,this._webGLParameters.MAX_VIEWPORT_DIMS=[1,1],this._webGLParameters.NUM_COMPRESSED_TEXTURE_FORMATS=0,this._webGLParameters.MAX_SHADER_PRECISION_FLOAT="none",this._webGLParameters.MAX_SHADER_PRECISION_INT="none",this._gl=void 0,this.hasFloatRTTSupport=!1,this.hasLinearHalfFloatRTTSupport=!1,this.hasHalfFloatRTTSupport=!1,this.hasLinearHalfFloatRTTSupport=!1};o.instance=function(e,t){if(!o._instance){var n,i=e;if(!i){"undefined"!=typeof window&&window.gli&&(n=window.gli.host.inspectContext,window.gli.host.inspectContext=!1);var a=document.createElement("canvas");a.width=32,a.height=32;var s={antialias:!1};s.extendWithOptionsURL(),i=r.setupWebGL(a,s,(function(){}))}o._instance=new o,i?o._instance.init(i):notify.warn("no support for webgl context detected."),n&&(window.gli.host.inspectContext=n)}return e&&(t||e!==o._instance.getContext())&&o._instance.initContextDependant(e),o._instance},o.prototype={getContext:function(){return this._gl},initContextDependant:function(e){this._gl=e,this._isGL2=void 0!==window.WebGL2RenderingContext&&e instanceof window.WebGL2RenderingContext,this.initWebGLExtensions(e),this.hasFloatRTTSupport=this.hasFloatRTT(e),this.hasLinearHalfFloatRTTSupport=this.hasLinearFloatRTT(e),this.hasHalfFloatRTTSupport=this.hasHalfFloatRTT(e),this.hasLinearHalfFloatRTTSupport=this.hasLinearHalfFloatRTT(e)},init:function(e){if(this.initWebGLParameters(e),this.initPlatformSupport(),this.initBugDB(),this.initContextDependant(e),this._isGL2)for(var t=["OES_element_index_uint","EXT_sRGB","EXT_blend_minmax","EXT_frag_depth","WEBGL_depth_texture","EXT_shader_texture_lod","OES_standard_derivatives","OES_texture_float","OES_texture_half_float","OES_texture_half_float_linear","OES_texture_float_linear","OES_vertex_array_object","WEBGL_draw_buffers","OES_fbo_render_mipmap","ANGLE_instanced_arrays"],n=o._instance.getWebGLExtensions(),r=function(){},i=0,a=t.length;i<a;i++)n[t[i]]=r},isWebGL2:function(){return this._isGL2},initBugDB:function(){var e=this._webGLPlatforms,t=this._webGLParameters;e.Apple&&(t.UNMASKED_VENDOR_WEBGL&&-1===t.UNMASKED_VENDOR_WEBGL.indexOf("Intel")||(this._bugsDB.OES_standard_derivatives=!0))},initPlatformSupport:function(){var e=this._webGLPlatforms;e.Apple=-1!==navigator.vendor.indexOf("Apple")||-1!==navigator.vendor.indexOf("OS X"),e.Mobile=/Mobi/.test(navigator.userAgent)||/ablet/.test(navigator.userAgent)},getWebGLPlatform:function(e){return this._webGLPlatforms[e]},getWebGLPlatforms:function(){return this._webGLPlatforms},getWebGLParameter:function(e){return this._webGLParameters[e]},getWebGLParameters:function(){return this._webGLParameters},getShaderMaxPrecisionFloat:function(){return this._webGLParameters.MAX_SHADER_PRECISION_FLOAT},getShaderMaxPrecisionInt:function(){return this._webGLParameters.MAX_SHADER_PRECISION_INT},checkSupportRTT:function(e,t,n){var r=t+","+n;if(this._isGL2)return!!this._webGLExtensions.EXT_color_buffer_float;if(void 0!==this._checkRTT[r])return this._checkRTT[r];if(!e)return!1;var i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,2,2,0,e.RGBA,t,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,n);var o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0);var a=this._checkRTT[r]=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.deleteTexture(i),e.deleteFramebuffer(o),e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),a},hasLinearHalfFloatRTT:function(e){return this._webGLExtensions.OES_texture_half_float_linear&&this.checkSupportRTT(e,e.HALF_FLOAT,e.LINEAR)},hasHalfFloatRTT:function(e){return this._webGLExtensions.OES_texture_half_float&&this.checkSupportRTT(e,e.HALF_FLOAT,e.NEAREST)},hasLinearFloatRTT:function(e){return this._webGLExtensions.OES_texture_float_linear&&this.checkSupportRTT(e,e.FLOAT,e.LINEAR)},hasFloatRTT:function(e){return this._webGLExtensions.OES_texture_float&&this.checkSupportRTT(e,e.FLOAT,e.NEAREST)},queryPrecision:function(e,t,n){var r=e.getShaderPrecisionFormat(t,n);return!!r&&0!==r.precision},hasVAO:function(){return!!this._webGLExtensions.OES_vertex_array_object},getDisjointTimerQuery:function(){return this._webGLExtensions.EXT_disjoint_timer_query_webgl2||this._webGLExtensions.EXT_disjoint_timer_query},initWebGLParameters:function(e){if(e){for(var t=["MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_VARYING_VECTORS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORT_DIMS","SHADING_LANGUAGE_VERSION","VERSION","VENDOR","RENDERER","ALIASED_LINE_WIDTH_RANGE","ALIASED_POINT_SIZE_RANGE","RED_BITS","GREEN_BITS","BLUE_BITS","ALPHA_BITS","DEPTH_BITS","STENCIL_BITS"],n=this._webGLParameters,r=0,i=t.length;r<i;++r){var o=t[r];n[o]=e.getParameter(e[o])}this.queryPrecision(e,e.FRAGMENT_SHADER,e.HIGH_FLOAT)?n.MAX_SHADER_PRECISION_FLOAT="highp":this.queryPrecision(e,e.FRAGMENT_SHADER,e.MEDIUM_FLOAT)?n.MAX_SHADER_PRECISION_FLOAT="mediump":this.queryPrecision(e,e.FRAGMENT_SHADER,e.LOW_FLOAT)&&(n.MAX_SHADER_PRECISION_FLOAT="lowp"),this.queryPrecision(e,e.FRAGMENT_SHADER,e.HIGH_INT)?n.MAX_SHADER_PRECISION_INT="highp":this.queryPrecision(e,e.FRAGMENT_SHADER,e.MEDIUM_INT)?n.MAX_SHADER_PRECISION_INT="mediump":this.queryPrecision(e,e.FRAGMENT_SHADER,e.LOW_INT)&&(n.MAX_SHADER_PRECISION_INT="lowp");var a=e.getExtension("WEBGL_debug_renderer_info");a&&(n.UNMASKED_RENDERER_WEBGL=e.getParameter(a.UNMASKED_RENDERER_WEBGL),n.UNMASKED_VENDOR_WEBGL=e.getParameter(a.UNMASKED_VENDOR_WEBGL))}},applyExtension:function(e,t){var n=e.getExtension(t),r=t.split("_")[0],i="_"+r,o=new RegExp(r+"$"),a=new RegExp(i);for(var s in n){if("function"==typeof n[s]){var l=s.replace(o,"");void 0===e[l]&&(e[l]=n[s].bind(n))}else{var u=s.replace(a,"");void 0===e[u]&&(e[u]=n[s])}}},getWebGLExtension:function(e){return this._webGLExtensions[e]},getWebGLExtensions:function(){return this._webGLExtensions},_checkShader:function(e,t,n){var r=t;"string"==typeof r&&(r=e[t]);var i=e.createShader(r);return e.shaderSource(i,n),e.compileShader(i),!(!e.getShaderParameter(i,e.COMPILE_STATUS)&&!e.isContextLost())},_doubleCheckExtension:function(e,t){var n=["#version 100","#extension GL_%ext% : enable","precision mediump float;","varying vec3 vColor;","void main() {","gl_FragColor = vec4(vColor, 1.0);","}"].join("\n");return this._checkShader(e,"FRAGMENT_SHADER",n.replace(/\%ext\%/g,t))},initWebGLExtensions:function(e,t){if(e){var n=t;void 0===n&&(n=!0);var r=e.getSupportedExtensions();if(r){for(var o=this._webGLExtensions,a=0,s=r.length;a<s;++a){var l=r[a];n&&this._bugsDB[l]||(o[l]=e.getExtension(l),this._isGL2||this.applyExtension(e,l))}if(!this._isGL2){var u="EXT_shader_texture_lod";o[u]&&!this._doubleCheckExtension(e,u)&&delete o[u]}var c=this.getWebGLExtension("EXT_texture_filter_anisotropic");c?(i.ANISOTROPIC_SUPPORT_EXT=!0,i.ANISOTROPIC_SUPPORT_MAX=e.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):(i.ANISOTROPIC_SUPPORT_EXT=!1,i.ANISOTROPIC_SUPPORT_MAX=1)}}}},t.exports=o},{"./Texture":33,"./WebGLUtils":41}],38:[function(e,t,n){t.exports={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,FUNC_ADD:32774,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,BLEND_COLOR:32773,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,VENDOR:7936,RENDERER:7937,VERSION:7938,IMPLEMENTATION_COLOR_READ_TYPE:35738,IMPLEMENTATION_COLOR_READ_FORMAT:35739,BROWSER_DEFAULT_WEBGL:37444,STATIC_DRAW:35044,STREAM_DRAW:35040,DYNAMIC_DRAW:35048,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,CULL_FACE:2884,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,BLEND:3042,DEPTH_TEST:2929,DITHER:3024,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,SCISSOR_TEST:3089,STENCIL_TEST:2960,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CONTEXT_LOST_WEBGL:37442,CW:2304,CCW:2305,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DOUBLE:5130,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,COMPILE_STATUS:35713,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_ATTRIBUTES:35721,ACTIVE_UNIFORMS:35718,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,ALWAYS:519,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,GEQUAL:518,NOTEQUAL:517,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,TEXTURE_WIDTH:4096,TEXTURE_HEIGHT:4097,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,READ_FRAMEBUFFER:36008,DRAW_FRAMEBUFFER:36009,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,READ_BUFFER:3074,UNPACK_ROW_LENGTH:3314,UNPACK_SKIP_ROWS:3315,UNPACK_SKIP_PIXELS:3316,PACK_ROW_LENGTH:3330,PACK_SKIP_ROWS:3331,PACK_SKIP_PIXELS:3332,TEXTURE_BINDING_3D:32874,UNPACK_SKIP_IMAGES:32877,UNPACK_IMAGE_HEIGHT:32878,MAX_3D_TEXTURE_SIZE:32883,MAX_ELEMENTS_VERTICES:33e3,MAX_ELEMENTS_INDICES:33001,MAX_TEXTURE_LOD_BIAS:34045,MAX_FRAGMENT_UNIFORM_COMPONENTS:35657,MAX_VERTEX_UNIFORM_COMPONENTS:35658,MAX_ARRAY_TEXTURE_LAYERS:35071,MIN_PROGRAM_TEXEL_OFFSET:35076,MAX_PROGRAM_TEXEL_OFFSET:35077,MAX_VARYING_COMPONENTS:35659,FRAGMENT_SHADER_DERIVATIVE_HINT:35723,RASTERIZER_DISCARD:35977,VERTEX_ARRAY_BINDING:34229,MAX_VERTEX_OUTPUT_COMPONENTS:37154,MAX_FRAGMENT_INPUT_COMPONENTS:37157,MAX_SERVER_WAIT_TIMEOUT:37137,MAX_ELEMENT_INDEX:36203,RED:6403,RGB8:32849,RGBA8:32856,RGB10_A2:32857,TEXTURE_3D:32879,TEXTURE_WRAP_R:32882,TEXTURE_MIN_LOD:33082,TEXTURE_MAX_LOD:33083,TEXTURE_BASE_LEVEL:33084,TEXTURE_MAX_LEVEL:33085,TEXTURE_COMPARE_MODE:34892,TEXTURE_COMPARE_FUNC:34893,SRGB:35904,SRGB8:35905,SRGB8_ALPHA8:35907,COMPARE_REF_TO_TEXTURE:34894,RGBA32F:34836,RGB32F:34837,RGBA16F:34842,RGB16F:34843,TEXTURE_2D_ARRAY:35866,TEXTURE_BINDING_2D_ARRAY:35869,R11F_G11F_B10F:35898,RGB9_E5:35901,RGBA32UI:36208,RGB32UI:36209,RGBA16UI:36214,RGB16UI:36215,RGBA8UI:36220,RGB8UI:36221,RGBA32I:36226,RGB32I:36227,RGBA16I:36232,RGB16I:36233,RGBA8I:36238,RGB8I:36239,RED_INTEGER:36244,RGB_INTEGER:36248,RGBA_INTEGER:36249,R8:33321,RG8:33323,R16F:33325,R32F:33326,RG16F:33327,RG32F:33328,R8I:33329,R8UI:33330,R16I:33331,R16UI:33332,R32I:33333,R32UI:33334,RG8I:33335,RG8UI:33336,RG16I:33337,RG16UI:33338,RG32I:33339,RG32UI:33340,R8_SNORM:36756,RG8_SNORM:36757,RGB8_SNORM:36758,RGBA8_SNORM:36759,RGB10_A2UI:36975,TEXTURE_IMMUTABLE_FORMAT:37167,TEXTURE_IMMUTABLE_LEVELS:33503,UNSIGNED_INT_2_10_10_10_REV:33640,UNSIGNED_INT_10F_11F_11F_REV:35899,UNSIGNED_INT_5_9_9_9_REV:35902,FLOAT_32_UNSIGNED_INT_24_8_REV:36269,UNSIGNED_INT_24_8:34042,HALF_FLOAT:5131,RG:33319,RG_INTEGER:33320,INT_2_10_10_10_REV:36255,CURRENT_QUERY:34917,QUERY_RESULT:34918,QUERY_RESULT_AVAILABLE:34919,ANY_SAMPLES_PASSED:35887,ANY_SAMPLES_PASSED_CONSERVATIVE:36202,MAX_DRAW_BUFFERS:34852,DRAW_BUFFER0:34853,DRAW_BUFFER1:34854,DRAW_BUFFER2:34855,DRAW_BUFFER3:34856,DRAW_BUFFER4:34857,DRAW_BUFFER5:34858,DRAW_BUFFER6:34859,DRAW_BUFFER7:34860,DRAW_BUFFER8:34861,DRAW_BUFFER9:34862,DRAW_BUFFER10:34863,DRAW_BUFFER11:34864,DRAW_BUFFER12:34865,DRAW_BUFFER13:34866,DRAW_BUFFER14:34867,DRAW_BUFFER15:34868,MAX_COLOR_ATTACHMENTS:36063,COLOR_ATTACHMENT1:36065,COLOR_ATTACHMENT2:36066,COLOR_ATTACHMENT3:36067,COLOR_ATTACHMENT4:36068,COLOR_ATTACHMENT5:36069,COLOR_ATTACHMENT6:36070,COLOR_ATTACHMENT7:36071,COLOR_ATTACHMENT8:36072,COLOR_ATTACHMENT9:36073,COLOR_ATTACHMENT10:36074,COLOR_ATTACHMENT11:36075,COLOR_ATTACHMENT12:36076,COLOR_ATTACHMENT13:36077,COLOR_ATTACHMENT14:36078,COLOR_ATTACHMENT15:36079,SAMPLER_3D:35679,SAMPLER_2D_SHADOW:35682,SAMPLER_2D_ARRAY:36289,SAMPLER_2D_ARRAY_SHADOW:36292,SAMPLER_CUBE_SHADOW:36293,INT_SAMPLER_2D:36298,INT_SAMPLER_3D:36299,INT_SAMPLER_CUBE:36300,INT_SAMPLER_2D_ARRAY:36303,UNSIGNED_INT_SAMPLER_2D:36306,UNSIGNED_INT_SAMPLER_3D:36307,UNSIGNED_INT_SAMPLER_CUBE:36308,UNSIGNED_INT_SAMPLER_2D_ARRAY:36311,MAX_SAMPLES:36183,SAMPLER_BINDING:35097,PIXEL_PACK_BUFFER:35051,PIXEL_UNPACK_BUFFER:35052,PIXEL_PACK_BUFFER_BINDING:35053,PIXEL_UNPACK_BUFFER_BINDING:35055,COPY_READ_BUFFER:36662,COPY_WRITE_BUFFER:36663,COPY_READ_BUFFER_BINDING:36662,COPY_WRITE_BUFFER_BINDING:36663,FLOAT_MAT2x3:35685,FLOAT_MAT2x4:35686,FLOAT_MAT3x2:35687,FLOAT_MAT3x4:35688,FLOAT_MAT4x2:35689,FLOAT_MAT4x3:35690,UNSIGNED_INT_VEC2:36294,UNSIGNED_INT_VEC3:36295,UNSIGNED_INT_VEC4:36296,UNSIGNED_NORMALIZED:35863,SIGNED_NORMALIZED:36764,VERTEX_ATTRIB_ARRAY_INTEGER:35069,VERTEX_ATTRIB_ARRAY_DIVISOR:35070,TRANSFORM_FEEDBACK_BUFFER_MODE:35967,MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:35968,TRANSFORM_FEEDBACK_VARYINGS:35971,TRANSFORM_FEEDBACK_BUFFER_START:35972,TRANSFORM_FEEDBACK_BUFFER_SIZE:35973,TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:35976,MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:35978,MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:35979,INTERLEAVED_ATTRIBS:35980,SEPARATE_ATTRIBS:35981,TRANSFORM_FEEDBACK_BUFFER:35982,TRANSFORM_FEEDBACK_BUFFER_BINDING:35983,TRANSFORM_FEEDBACK:36386,TRANSFORM_FEEDBACK_PAUSED:36387,TRANSFORM_FEEDBACK_ACTIVE:36388,TRANSFORM_FEEDBACK_BINDING:36389,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:33296,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:33297,FRAMEBUFFER_ATTACHMENT_RED_SIZE:33298,FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:33299,FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:33300,FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:33301,FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:33302,FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:33303,FRAMEBUFFER_DEFAULT:33304,DEPTH24_STENCIL8:35056,DRAW_FRAMEBUFFER_BINDING:36006,READ_FRAMEBUFFER_BINDING:36010,RENDERBUFFER_SAMPLES:36011,FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:36052,FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:36182,UNIFORM_BUFFER:35345,UNIFORM_BUFFER_BINDING:35368,UNIFORM_BUFFER_START:35369,UNIFORM_BUFFER_SIZE:35370,MAX_VERTEX_UNIFORM_BLOCKS:35371,MAX_FRAGMENT_UNIFORM_BLOCKS:35373,MAX_COMBINED_UNIFORM_BLOCKS:35374,MAX_UNIFORM_BUFFER_BINDINGS:35375,MAX_UNIFORM_BLOCK_SIZE:35376,MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:35377,MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:35379,UNIFORM_BUFFER_OFFSET_ALIGNMENT:35380,ACTIVE_UNIFORM_BLOCKS:35382,UNIFORM_TYPE:35383,UNIFORM_SIZE:35384,UNIFORM_BLOCK_INDEX:35386,UNIFORM_OFFSET:35387,UNIFORM_ARRAY_STRIDE:35388,UNIFORM_MATRIX_STRIDE:35389,UNIFORM_IS_ROW_MAJOR:35390,UNIFORM_BLOCK_BINDING:35391,UNIFORM_BLOCK_DATA_SIZE:35392,UNIFORM_BLOCK_ACTIVE_UNIFORMS:35394,UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:35395,UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:35396,UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:35398,OBJECT_TYPE:37138,SYNC_CONDITION:37139,SYNC_STATUS:37140,SYNC_FLAGS:37141,SYNC_FENCE:37142,SYNC_GPU_COMMANDS_COMPLETE:37143,UNSIGNALED:37144,SIGNALED:37145,ALREADY_SIGNALED:37146,TIMEOUT_EXPIRED:37147,CONDITION_SATISFIED:37148,WAIT_FAILED:37149,SYNC_FLUSH_COMMANDS_BIT:1,COLOR:6144,DEPTH:6145,STENCIL:6146,MIN:32775,MAX:32776,DEPTH_COMPONENT24:33190,STREAM_READ:35041,STREAM_COPY:35042,STATIC_READ:35045,STATIC_COPY:35046,DYNAMIC_READ:35049,DYNAMIC_COPY:35050,DEPTH_COMPONENT32F:36012,DEPTH32F_STENCIL8:36013,INVALID_INDEX:4294967295,TIMEOUT_IGNORED:-1,MAX_CLIENT_WAIT_TIMEOUT_WEBGL:37447,VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE:35070,UNMASKED_VENDOR_WEBGL:37445,UNMASKED_RENDERER_WEBGL:37446,MAX_TEXTURE_MAX_ANISOTROPY_EXT:34047,TEXTURE_MAX_ANISOTROPY_EXT:34046,COMPRESSED_RGB_S3TC_DXT1_EXT:33776,COMPRESSED_RGBA_S3TC_DXT1_EXT:33777,COMPRESSED_RGBA_S3TC_DXT3_EXT:33778,COMPRESSED_RGBA_S3TC_DXT5_EXT:33779,COMPRESSED_R11_EAC:37488,COMPRESSED_SIGNED_R11_EAC:37489,COMPRESSED_RG11_EAC:37490,COMPRESSED_SIGNED_RG11_EAC:37491,COMPRESSED_RGB8_ETC2:37492,COMPRESSED_RGBA8_ETC2_EAC:37493,COMPRESSED_SRGB8_ETC2:37494,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:37495,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:37496,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:37497,COMPRESSED_RGB_PVRTC_4BPPV1_IMG:35840,COMPRESSED_RGBA_PVRTC_4BPPV1_IMG:35842,COMPRESSED_RGB_PVRTC_2BPPV1_IMG:35841,COMPRESSED_RGBA_PVRTC_2BPPV1_IMG:35843,COMPRESSED_RGB_ETC1_WEBGL:36196,COMPRESSED_RGB_ATC_WEBGL:35986,COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL:35986,COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL:34798,UNSIGNED_INT_24_8_WEBGL:34042,HALF_FLOAT_OES:36193,RGBA32F_EXT:34836,RGB32F_EXT:34837,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT:33297,UNSIGNED_NORMALIZED_EXT:35863,MIN_EXT:32775,MAX_EXT:32776,SRGB_EXT:35904,SRGB_ALPHA_EXT:35906,SRGB8_ALPHA8_EXT:35907,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT:33296,FRAGMENT_SHADER_DERIVATIVE_HINT_OES:35723,COLOR_ATTACHMENT0_WEBGL:36064,COLOR_ATTACHMENT1_WEBGL:36065,COLOR_ATTACHMENT2_WEBGL:36066,COLOR_ATTACHMENT3_WEBGL:36067,COLOR_ATTACHMENT4_WEBGL:36068,COLOR_ATTACHMENT5_WEBGL:36069,COLOR_ATTACHMENT6_WEBGL:36070,COLOR_ATTACHMENT7_WEBGL:36071,COLOR_ATTACHMENT8_WEBGL:36072,COLOR_ATTACHMENT9_WEBGL:36073,COLOR_ATTACHMENT10_WEBGL:36074,COLOR_ATTACHMENT11_WEBGL:36075,COLOR_ATTACHMENT12_WEBGL:36076,COLOR_ATTACHMENT13_WEBGL:36077,COLOR_ATTACHMENT14_WEBGL:36078,COLOR_ATTACHMENT15_WEBGL:36079,DRAW_BUFFER0_WEBGL:34853,DRAW_BUFFER1_WEBGL:34854,DRAW_BUFFER2_WEBGL:34855,DRAW_BUFFER3_WEBGL:34856,DRAW_BUFFER4_WEBGL:34857,DRAW_BUFFER5_WEBGL:34858,DRAW_BUFFER6_WEBGL:34859,DRAW_BUFFER7_WEBGL:34860,DRAW_BUFFER8_WEBGL:34861,DRAW_BUFFER9_WEBGL:34862,DRAW_BUFFER10_WEBGL:34863,DRAW_BUFFER11_WEBGL:34864,DRAW_BUFFER12_WEBGL:34865,DRAW_BUFFER13_WEBGL:34866,DRAW_BUFFER14_WEBGL:34867,DRAW_BUFFER15_WEBGL:34868,MAX_COLOR_ATTACHMENTS_WEBGL:36063,MAX_DRAW_BUFFERS_WEBGL:34852,VERTEX_ARRAY_BINDING_OES:34229,QUERY_COUNTER_BITS_EXT:34916,CURRENT_QUERY_EXT:34917,QUERY_RESULT_EXT:34918,QUERY_RESULT_AVAILABLE_EXT:34919,TIME_ELAPSED_EXT:35007,TIMESTAMP_EXT:36392,GPU_DISJOINT_EXT:36795}},{}],39:[function(e,t,n){const r=e("./WebGLHandlerSet"),i=e("./AttributeNames"),o=e("./math/Vec4"),a=e("./math/Math"),s=e("./Program"),l=e("./DataTexture"),u=e("./WebGLUtils"),c=e("./WebGLCompatibility"),f=e("./Texture"),{preprocessShaderSource:h}=e("./ShaderProcess"),d=e("./ProgramUniform"),p=e("./WebGLConstants");t.exports=class{constructor(e,t={webgl2:!1}){this._gl=u.setupWebGL(e,{antialias:!0,webgl2:!!t.webgl2,reportWebGLError:!1}),c.instance(this._gl,!0),this.screenViewportDirty=!0,this._currentBlendState=!1,this._currentPixelFlipY=!1,this._currentActiveTextureUnit=null,this._currentClear=this._gl.COLOR_BUFFER_BIT|this._gl.DEPTH_BUFFER_BIT,this._auxCanvas2D=document.createElement("canvas"),this._auxContext2D=this._auxCanvas2D.getContext("2d"),this._currentCullState=null,this._cullStateList=[0,this._gl.BACK,this._gl.FRONT,this._gl.FRONT_AND_BACK],this._currentDepthMask=null,this._curDepthTest=null,this._currentLineWidth=null,this._currentBoundTextures=new Array(c.instance().getWebGLParameter("MAX_TEXTURE_IMAGE_UNITS")),this._currentBoundTextureTargets=new Array(c.instance().getWebGLParameter("MAX_TEXTURE_IMAGE_UNITS")),this._currentBoundProgramHandler=null,this._enableAttributes=new Uint8Array(c.instance().getWebGLParameter("MAX_VERTEX_ATTRIBS")),this._newEnableAttributes=new Uint8Array(c.instance().getWebGLParameter("MAX_VERTEX_ATTRIBS")),this._webGLBufferSet=new r,this._webGLTextureSet=new r,this._webGLRenderTargetSet=new r,this._currentViewportState=[0,0,800,600],this._currentDefaultViewport=[0,0,800,600],this._currentFramebufferObject=null,this._currentRenderTarget=null,this._currentBlendMode=null,this._currentBoundIndexBuffer=null,this._currentClearColor=new o(0,0,0,0),this._effectCaches={},this.gl=this._gl,this.isWebGL2=!!t.webgl2,this.compatiblity=c;const n=this;var i;this._renderTargetFactory={checkFramebufferStatus:function(){switch(n._gl.checkFramebufferStatus(n._gl.FRAMEBUFFER)){case n._gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:window.console.error("ERROR: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case n._gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:window.console.error("ERROR: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case n._gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:window.console.error("ERROR: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");break;case n._gl.FRAMEBUFFER_UNSUPPORTED:window.console.error("ERROR: FRAMEBUFFER_UNSUPPORTED");break;case n._gl.FRAMEBUFFER_COMPLETE:}},attachDepthRenderBuffer:function(e,t,r,i,o){n._gl.bindRenderbuffer(n._gl.RENDERBUFFER,t),o?(n._gl.renderbufferStorage(n._gl.RENDERBUFFER,n._gl.DEPTH_STENCIL,r,i),n._gl.framebufferRenderbuffer(n._gl.FRAMEBUFFER,n._gl.DEPTH_STENCIL_ATTACHMENT,n._gl.RENDERBUFFER,t)):(n._gl.renderbufferStorage(n._gl.RENDERBUFFER,n._gl.DEPTH_COMPONENT16,r,i),n._gl.framebufferRenderbuffer(n._gl.FRAMEBUFFER,n._gl.DEPTH_ATTACHMENT,n._gl.RENDERBUFFER,t)),n._gl.bindRenderbuffer(n._gl.RENDERBUFFER,null)},allocate:function(e){n._webGLRenderTargetSet.get(e)._fbo=n._gl.createFramebuffer()},releaseImp:function(e,t){var r=e._fbo,i=e._depthBuffer;if(t)for(var o=0;o<r.length;o++)n._gl.deleteFramebuffer(r[o]),i&&n._gl.deleteRenderbuffer(i[o]);else n._gl.deleteFramebuffer(r),i&&n._gl.deleteRenderbuffer(i)},release:function(e){var t=n._webGLRenderTargetSet.get(e);void 0!==t&&(e.colorTexture.release(),n._renderTargetFactory.releaseImp(t,e._renderToCube),n._webGLRenderTargetSet.remove(e),e.releaseObservable.removeCallback(n.release))},construct:function(e){var t=n._webGLRenderTargetSet.get(e);if(n._gl.bindFramebuffer(n._gl.FRAMEBUFFER,t._fbo),n.useTexture2D(e.colorTexture,0),n._gl.framebufferTexture2D(n._gl.FRAMEBUFFER,n._gl.COLOR_ATTACHMENT0,n._gl.TEXTURE_2D,n._webGLTextureSet.get(e.colorTexture)._texID,0),!0===e.enableDepth){if(e._shareDepthFrom)var r=e._shareDepthFrom;if(e.useDepthTexture){r&&console.error("RenderTarget could not shared depth-texture yet..."),_scope.useTexture2D(e.depthTexture,0);var i=n._webGLTextureSet.get(e.depthTexture),o=e.enableStencil?n._gl.DEPTH_STENCIL_ATTACHMENT:n._gl.DEPTH_ATTACHMENT;n._gl.framebufferTexture2D(n._gl.FRAMEBUFFER,o,n._gl.TEXTURE_2D,i._texID,0)}else{if(r){var a=n._webGLRenderTargetSet.get(r),s=a._depthBuffer;s||(a._depthBuffer=n._gl.createRenderbuffer()),t._depthBuffer=s}else t._depthBuffer||(t._depthBuffer=n._gl.createRenderbuffer());this.attachDepthRenderBuffer(t._fbo,t._depthBuffer,e.width,e.height,e.enableStencil)}this.checkFramebufferStatus()}n._gl.bindFramebuffer(n._gl.FRAMEBUFFER,null)},allocateCube:function(e){for(var t=new Array(6),r=0;r<t.length;r++)t[r]=n._gl.createFramebuffer();n._webGLRenderTargetSet.get(e)._fbo=t},constructCube:function(e){var t=n._webGLRenderTargetSet.get(e),r=t._fbo,i=e.colorTexture;n.useCubeMap(i,0);for(var o=0;o<r.length;o++)n._gl.bindFramebuffer(n._gl.FRAMEBUFFER,r[o]),n._gl.framebufferTexture2D(n._gl.FRAMEBUFFER,n._gl.COLOR_ATTACHMENT0,n._gl.TEXTURE_CUBE_MAP_POSITIVE_X+o,n._webGLTextureSet.get(i)._texID,0),!0===e.enableDepth&&(t._depthBuffer||(t._depthBuffer=new Array(r.length)),t._depthBuffer[o]=n._gl.createRenderbuffer(),this.attachDepthRenderBuffer(t._fbo[o],t._depthBuffer[o],e.width,e.height,e.enableStencil)),n._gl.bindFramebuffer(n._gl.FRAMEBUFFER,null)},generateMipMap:function(e){var t=e.colorTexture;if(!0===t._mipMaping&&t.isPowerOfTwo()){var r=n._webGLTextureSet.get(t),i=!0===t.isCubeMap?n._gl.TEXTURE_CUBE_MAP:n._gl.TEXTURE_2D;_scope.bindTexture(i,r._texID),n._gl.generateMipmap(i),_scope.bindTexture(i,null)}},read:(i=null,function(e,t,r,o,a){null===i&&(i=function(e,t,r,i,o,a,s){var l,u=t,f=r,h=4*a*s;return r===p.UNSIGNED_BYTE?l=new Uint8Array(h):r===p.FLOAT&&(l=new Float32Array(h)),t!==p.RGBA&&u!==n._gl.getParameter(n._gl.IMPLEMENTATION_COLOR_READ_FORMAT)&&window.console.error("renderTarget is not in RGBA or implementation defined format."),r===p.UNSIGNED_BYTE||f===n._gl.getParameter(n._gl.IMPLEMENTATION_COLOR_READ_TYPE)||r===p.FLOAT&&c.instance().FloatColorBuffer||window.console.error("renderTarget is not in UnsignedByteType or implementation defined type."),n._gl.readPixels(i,o,a,s,u,f,l),l});var s=[],l=!1;if(e){t=void 0===t?0:t,r=void 0===r?0:r,o=void 0===o?e.width:o,a=void 0===a?e.height:a;var u=n._webGLRenderTargetSet.get(e);l=e.renderToCube;for(var f=e.colorTexture,h=l?u._fbo:[u._fbo],d=0;d<h.length;d++)s.push(i(h[d],f.format,f.dataType,t,r,o,a))}else t=void 0===t?n._viewport[0]:t,r=void 0===r?n._viewport[1]:r,o=void 0===o?n._viewport[2]:o,a=void 0===a?n._viewport[3]:a,s.push(i(null,p.RGBA,p.UNSIGNED_BYTE,t,r,o,a));return 1===s.length?s[0]:s})},this.blendFuncSeparate({srcRGB:p.SRC_ALPHA,dstRGB:p.ONE_MINUS_SRC_ALPHA,srcAlpha:p.ONE,dstAlpha:p.ONE_MINUS_SRC_ALPHA})}initializeStates(){this.clearMode(!0,!0,!1),this.clearColor(0,0,0,1),this._gl.depthFunc(this._gl.LEQUAL),this.depthMask(!0),this.depthTest(!0),this._gl.depthRange(0,1),this._gl.enable(this._gl.CULL_FACE),this._gl.cullFace(this._gl.BACK),this._currentCull=i.CullBack,this._gl.hint(this._gl.GENERATE_MIPMAP_HINT,this._gl.NICEST),this._gl.pixelStorei(this._gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,this._gl.NONE)}cullstate(e){this._currentCullState!==e&&(e===p.FRONT_AND_BACK?this._gl.disable(this._gl.CULL_FACE):(null===this._currentCullState&&this._gl.enable(this._gl.CULL_FACE),this._gl.cullFace(e)),this._currentCullState=null)}clear(){(this._currentClearBitMask&this._gl.DEPTH_BUFFER_BIT)===this._gl.DEPTH_BUFFER_BIT&&this.depthMask(!0),this._gl.clear(this._currentClearBitMask)}clearColor(e,t,n,r){this._currentClearColor.x===e&&this._currentClearColor.y===t&&this._currentClearColor.z===n&&this._currentClearColor.w===r||(this._gl.clearColor(e,t,n,r),this._currentClearColor.set(e,t,n,r))}getClearColor(e){return e?e.copy(this._currentClearColor):e=this._currentClearColor.clone(),e}clearMode(e,t,n){if(1===arguments.length)this._currentClearBitMask=arguments[0];else{var r=0;e&&(r=this._gl.COLOR_BUFFER_BIT),t&&(r|=this._gl.DEPTH_BUFFER_BIT),n&&(r|=this._gl.STENCIL_BUFFER_BIT),this._currentClearBitMask=r}}getClearMode(){return this._currentClearBitMask}setScreenViewport(e){this._currentDefaultViewport[0]=e[0],this._currentDefaultViewport[1]=e[1],this._currentDefaultViewport[2]=e[2],this._currentDefaultViewport[3]=e[3],this.screenViewportDirty=!0}viewport(e){this._currentViewportState[2]===e[2]&&this._currentViewportState[3]===e[3]&&this._currentViewportState[0]===e[0]&&this._currentViewportState[1]===e[1]||(this._gl.viewport(e[0],e[1],e[2],e[3]),this._currentViewportState[0]=e[0],this._currentViewportState[1]=e[1],this._currentViewportState[2]=e[2],this._currentViewportState[3]=e[3])}pixelFlipY(e){this._currentPixelFlipY!==e&&(this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL,e),this._currentPixelFlipY=e)}depthMask(e){this._currentDepthMask!==e&&(this._gl.depthMask(e),this._currentDepthMask=e)}blend(e){this._currentBlendState!==e&&(!0===e?this._gl.enable(this._gl.BLEND):this._gl.disable(this._gl.BLEND),this._currentBlendState=e)}depthTest(e){this._curDepthTest!==e&&(!0===e?this._gl.enable(this._gl.DEPTH_TEST):this._gl.disable(this._gl.DEPTH_TEST),this._curDepthTest=e)}lineWidth(e){e!==this._currentLineWidth&&(this._gl.lineWidth(e),this._currentLineWidth=e)}activateTextureUnit(e){e!==this._currentActiveTextureUnit&&(this._gl.activeTexture(this._gl.TEXTURE0+e),this._currentActiveTextureUnit=e)}bindTex2Unit(e,t,n){e===this._currentBoundTextureTargets[n]&&t===this._currentBoundTextures[n]||(n!==this._currentActiveTextureUnit&&(this._gl.activeTexture(this._gl.TEXTURE0+n),this._currentActiveTextureUnit=n),this._currentBoundTextures[n]=t,this._currentBoundTextureTargets[n]=e,this._gl.bindTexture(e,t))}bindTexture(e,t){e===this._currentBoundTextureTargets[this._currentActiveTextureUnit]&&t===this._currentBoundTextures[this._currentActiveTextureUnit]||(this._currentBoundTextures[this._currentActiveTextureUnit]=t,this._currentBoundTextureTargets[this._currentActiveTextureUnit]=e,this._gl.bindTexture(e,t))}makeImagePowerOfTwo(e){return a.isPowerOfTwo(e.width)&&a.isPowerOfTwo(e.height)?e:(this._auxCanvas2D.width=a.nextPowerOfTwo(e.width),this._auxCanvas2D.height=a.nextPowerOfTwo(e.height),this._auxContext2D.drawImage(e,0,0,e.width,e.height,0,0,this._auxCanvas2D.width,this._auxCanvas2D.height),window.console.warn("WebGLEngine.makeImagePowerOfTwo: convert ("+e.width+" "+e.height,") to ("+this._auxCanvas2D.width+" "+this._auxCanvas2D.height+")"),this._auxCanvas2D)}textureImage2D(e,t){var n=e.dataType,r=e.format,i=e.internalFormat;t=t||e.source,e instanceof l||null===t?this._gl.texImage2D(this._gl.TEXTURE_2D,0,i,e.width,e.height,0,r,n,t):this._gl.texImage2D(this._gl.TEXTURE_2D,0,i,r,n,t)}finish(){this._gl.finish()}_releaseBuffer(e){var t=this._webGLBufferSet.find(e);void 0!==t&&(this._gl.deleteBuffer(t._vbo),this._webGLBufferSet.remove(e),e.releaseObservable.removeCallback(this._releaseBuffer))}_releaseTexture(e){var t=this._webGLTextureSet.find(e);void 0!==t&&(this._gl.deleteTexture(t._texID),this._webGLTextureSet.remove(e),e.releaseObservable.removeCallback(this._releaseTexture.bind(this)))}texImageCubeMap(e){var t,n,r,i=e.dataType,o=e.internalFormat,a=e.internalFormat,s=0;for(e.source instanceof Array&&0!==e.source.length&&e.source[0]instanceof Array||window.console.error("cubemap source invalid");e._source[s]||0===s;){if(t=e._source[s],1===s&&this._gl.generateMipmap(this._gl.TEXTURE_CUBE_MAP),t[0]instanceof HTMLCanvasElement||t[0]instanceof HTMLImageElement)for(r=0;r<6;r++){var l=t[r];this._gl.texImage2D(this._gl.TEXTURE_CUBE_MAP_POSITIVE_X+r,s,o,a,i,this.makeImagePowerOfTwo(l))}else{var u=e.width,c=e.height;for(n=1/Math.pow(2,s),r=0;r<6;r++){var f=t[r];this._gl.texImage2D(this._gl.TEXTURE_CUBE_MAP_POSITIVE_X+r,s,o,Math.max(u*n,1),Math.max(c*n,1),0,a,i,f)}}s++}1===s&&e.mipMaping&&this._gl.generateMipmap(this._gl.TEXTURE_CUBE_MAP)}textureParameter(e,t,n){var r=void 0===n?t.isPowerOfTwo():n,i=c.instance();if(t._anisotropy>1&&t._anisotropy<=f.ANISOTROPIC_SUPPORT_MAX&&i.getWebGLExtension("EXT_texture_filter_anisotropic")&&this._gl.texParameterf(e,i.getWebGLExtension("EXT_texture_filter_anisotropic").TEXTURE_MAX_ANISOTROPY_EXT,t._anisotropy),t.wrapS){var o=r?t.wrapS:p.CLAMP_TO_EDGE;this._gl.texParameterf(e,this._gl.TEXTURE_WRAP_S,o)}if(t.wrapT){var a=r?t.wrapT:p.CLAMP_TO_EDGE;this._gl.texParameterf(e,this._gl.TEXTURE_WRAP_T,a)}t.magFilter&&this._gl.texParameterf(e,this._gl.TEXTURE_MAG_FILTER,t.magFilter),t.minFilter&&(t.mipMaping&&r?this._gl.texParameterf(e,this._gl.TEXTURE_MIN_FILTER,this._gl.LINEAR_MIPMAP_LINEAR):this._gl.texParameterf(e,this._gl.TEXTURE_MIN_FILTER,t.minFilter))}setTexture(e,t){e.isCubeMap?this.useCubeMap(e,t):e.isTexture&&this.useTexture2D(e,t)}useCubeMap(e,t){var n=this._webGLTextureSet.get(e);n._version!==e._version?(void 0===n._texID&&(n._texID=this.createTexture(),e.releaseObservable.addUnique(this._releaseTexture.bind(this))),this.activateTextureUnit(t),this.bindTexture(this._gl.TEXTURE_CUBE_MAP,n._texID),this.pixelFlipY(e.flipY),this.texImageCubeMap(e),this.textureParameter(this._gl.TEXTURE_CUBE_MAP,e),n._version=e._version):this.bindTex2Unit(this._gl.TEXTURE_CUBE_MAP,n._texID,t)}createTexture(){return this._gl.createTexture()}useTexture2D(e,t){if(e){var n=this._webGLTextureSet.get(e);if(n._version!==e._version){void 0===n._texID&&(n._texID=this.createTexture(),e.releaseObservable.addUnique(this._releaseTexture.bind(this))),this.activateTextureUnit(t),this.bindTexture(this._gl.TEXTURE_2D,n._texID),this.pixelFlipY(e.flipY);var r=e.isPowerOfTwo(),i=e.source;if(!this.isWebGL2&&i&&!1===r)!0===(e._minFilter!==p.NEAREST&&e._minFilter!==p.LINEAR||!(e._wrapS===p.CLAMP_TO_EDGE&&e._wrapT===p.CLAMP_TO_EDGE))&&(i=this.makeImagePowerOfTwo(i),r=!0);this.textureImage2D(e,i),this.textureParameter(this._gl.TEXTURE_2D,e,this.isWebGL2||r),e.mipMaping&&(this.isWebGL2||r)&&this._gl.generateMipmap(this._gl.TEXTURE_2D),n._version=e._version}else this.bindTex2Unit(this._gl.TEXTURE_2D,n._texID,t)}}generateMipMap(e){var t=this._webGLTextureSet.get(e);this.activateTextureUnit(0),this.bindTexture(this._gl.TEXTURE_2D,t._texID),this._gl.generateMipmap(this._gl.TEXTURE_2D)}createBuffer(e){var t=this._gl.createBuffer();return t._typeSize=e.bytesPerElement,t._glType=e._storeType,t}bindIndexBuffer(e){e&&e!==this._currentBoundIndexBuffer&&(this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER,e),this._currentBoundIndexBuffer=e)}bindVertexBuffer(e){e!==this._currentBoundVertexBuffer&&(this._gl.bindBuffer(this._gl.ARRAY_BUFFER,e),this._currentBoundVertexBuffer=e)}dynamicVertexBufferData(e){this._gl.bufferData(this._gl.ARRAY_BUFFER,e._array,this._gl.DYNAMIC_DRAW)}staticVertexBufferData(e){this._gl.bufferData(this._gl.ARRAY_BUFFER,e._array,this._gl.STATIC_DRAW)}staticIndexBufferData(e){this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER,e._array,this._gl.STATIC_DRAW)}dynamicIndexBufferData(e){this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER,e._array,this._gl.DYNAMIC_DRAW)}updateVertexBuffer(e,t){this._gl.bufferSubData(this._gl.ARRAY_BUFFER,t,e._array)}updateIndexBuffer(e,t){this._gl.bufferSubData(this._gl.ELEMENT_ARRAY_BUFFER,t,e._array)}loadShaderByType(e,t){var n=this._gl.createShader(e);if(null===n)return window.console.error("unable to create"+e+"shader"),null;if(this._gl.shaderSource(n,t),this._gl.compileShader(n),!this._gl.getShaderParameter(n,this._gl.COMPILE_STATUS)){var r=this._gl.getShaderInfoLog(n);this._gl.deleteShader(n);const e=Number(r.match(/:[0-9]*:/g)[0].split(":")[1]);var i=t.split("\n");let o="Failed to compile "+r+"\n";for(let t=Math.max(0,e-3);t<=e;t++)o+=t+": "+i[t]+"\n";throw o}return n}createProgram(e,t){e=h(e),t=h(t);var n=this.loadShaderByType(this._gl.VERTEX_SHADER,e),r=this.loadShaderByType(this._gl.FRAGMENT_SHADER,t);if(!n||!r)return null;var i=this._gl.createProgram();if(this._gl.attachShader(i,n),this._gl.attachShader(i,r),this._gl.linkProgram(i),!this._gl.getProgramParameter(i,this._gl.LINK_STATUS)){var o=this._gl.getProgramInfoLog(i);return console.error("Failed to link program: "+o),this._gl.deleteProgram(i),null}return this._gl.deleteShader(r),this._gl.deleteShader(n),i}acquireProgramUniforms(e){for(var t=/^([\w\d_]+)\[0]$/,n={},r=this._gl.getProgramParameter(e,this._gl.ACTIVE_UNIFORMS),i=0;i<r;i++){const r=this._gl.getActiveUniform(e,i),o=r.type,a=r.size;let s=!0,l=!1,u=null;const c=t.exec(r.name),f=!!c,h=c?c[1]:r.name,p=this._gl.getUniformLocation(e,h);let _=a;switch(o){case this._gl.SAMPLER_2D:case this._gl.SAMPLER_CUBE:u=f?this._gl.uniform1iv.bind(this._gl):this._gl.uniform1i.bind(this._gl),l=!0;break;case this._gl.FLOAT:u=f?this._gl.uniform1fv.bind(this._gl):this._gl.uniform1f.bind(this._gl);break;case this._gl.INT:u=f?this._gl.uniform1iv.bind(this._gl):this._gl.uniform1i.bind(this._gl);break;case this._gl.FLOAT_VEC2:u=f?this._gl.uniform2fv.bind(this._gl):(e,t)=>{this._gl.uniform2f(e,t[0],t[1])},_=2*a;break;case this._gl.FLOAT_VEC3:u=f?this._gl.uniform3fv.bind(this._gl):(e,t)=>{this._gl.uniform3f(e,t[0],t[1],t[2])},_=3*a;break;case this._gl.FLOAT_VEC4:u=f?this._gl.uniform4fv.bind(this._gl):(e,t)=>{this._gl.uniform4f(e,t[0],t[1],t[2],t[3])},_=4*a;break;case this._gl.FLOAT_MAT2:u=(e,t)=>{this._gl.uniformMatrix2fv(e,!1,t)},_=4*a;break;case this._gl.FLOAT_MAT3:u=(e,t)=>{this._gl.uniformMatrix3fv(e,!1,t)},_=9*a,s=!1;break;case this._gl.FLOAT_MAT4:u=(e,t)=>{this._gl.uniformMatrix4fv(e,!1,t)},_=16*a,s=!1}n[h]=new d({location:p,cache:s,array:f,size:a,cacheSize:_,sampler:l,setter:u,type:o})}return n}acquireProgramAttributes(e){for(var t={},n=this._gl.getProgramParameter(e,this._gl.ACTIVE_ATTRIBUTES),r=0;r<n;r++){var i=this._gl.getActiveAttrib(e,r).name;t[i]=this._gl.getAttribLocation(e,i)}return t}useProgram(e){this._currentBoundProgramHandler!==e&&(this._gl.useProgram(e),this._currentBoundProgramHandler=e)}enableAttribute(e){0===this._enableAttributes[e]&&(this._enableAttributes[e]=1,this._gl.enableVertexAttribArray(e))}disableAttribute(e){1===this._enableAttributes[e]&&(this._gl.disableVertexAttribArray(e),this._enableAttributes[e]=0)}getCurrentRenderTarget(){return this._currentRenderTarget}bindRenderTarget(e){var t=null;this._currentRenderTarget=e;let n=!1;if(e){var r=this._webGLRenderTargetSet.get(e),i=e.renderToCube;r._version!==e._version&&(void 0===r._fbo&&(i?(this._renderTargetFactory.allocateCube(e),e.releaseObservable.addUnique(this._renderTargetFactory.release),this._renderTargetFactory.constructCube(e)):(this._renderTargetFactory.allocate(e),e.releaseObservable.addUnique(this._renderTargetFactory.release),this._renderTargetFactory.construct(e))),n=!0,r._version=e._version),t=!0===i?r._fbo[e._face]:r._fbo}else t=null;this._currentFramebufferObject!==t&&(this._currentFramebufferObject=t,this._gl.bindFramebuffer(this._gl.FRAMEBUFFER,this._currentFramebufferObject),n=!0),(!0===this.screenViewportDirty||n)&&(this.viewport(e?e._viewport:this._currentDefaultViewport),this.screenViewportDirty=!1)}renderTargetMipmap(e){e&&this._renderTargetFactory.generateMipMap(e)}readRenderTarget(e,t,n,r,i){return this.bindRenderTarget(e),this._renderTargetFactory.read(e,t,n,r,i)}getViewPort(e){return e||(e=new Array(4)),e[0]=this._viewport[0],e[1]=this._viewport[1],e[2]=this._viewport[2],e[3]=this._viewport[3],e}setVertexArray(e,t,n){var r,i,o=n._programAttributes,a=null;for(var s in o)r=o[s],(i=e[s])&&(a!==i._buffer&&(a=i._buffer,this.setupVertexBuffer(a)),this.enableAttribute(r),this._newEnableAttributes[r]=1,this._gl.vertexAttribPointer(r,i._itemSize,a._storeType,i.normalized,i._strideBytes,i._offsetBytes),i._divisor>0&&this._gl.vertexAttribDivisor(r,i._divisor));t&&this.setupIndexBuffer(t._buffer);for(var l=0;l<this._enableAttributes.length;l++)this._newEnableAttributes[l]!==this._enableAttributes[l]?(this._gl.disableVertexAttribArray(l),this._enableAttributes[l]=0):this._newEnableAttributes[l]=0}setupIndexBuffer(e){var t=this._webGLBufferSet.get(e);if(void 0===t._vbo){var n=this.createBuffer(e);e.releaseObservable.addUnique(this._releaseBuffer),t._vbo=n,this.bindIndexBuffer(n),e._staticUsage?this.staticIndexBufferData(e):this.dynamicIndexBufferData(e)}else t._version<e._version?(this.bindIndexBuffer(t._vbo),this.updateIndexBuffer(e)):this.bindIndexBuffer(t._vbo);t._version=e._version}setupVertexBuffer(e){const t=this._webGLBufferSet.get(e);if(void 0===t._vbo){var n=this.createBuffer(e);e.releaseObservable.addUnique(this._releaseBuffer),t._vbo=n,t._glType=n._glType,this.bindVertexBuffer(n),e._staticUsage?this.staticVertexBufferData(e):this.dynamicVertexBufferData(e)}else e._version>t._version?(this.bindVertexBuffer(t._vbo),this.updateVertexBuffer(e,0)):this.bindVertexBuffer(t._vbo);t._version=e._version}getEffectById(e){return this._effectCaches[e]}createEffect(e,t,n){return this._effectCaches[e]=new s(this,t,n,""),this._effectCaches[e]}releaseAllBuffers(){this._webGLBufferSet.iterate((function(e){e._vbo&&this._gl.deleteBuffer(e._vbo)})),this._webGLBufferSet.clear()}releaseAllTextures(){this._webGLTextureSet.iterate((function(e){e._texID&&this._gl.deleteTexture(e._texID)})),this._webGLTextureSet.clear()}releaseAllRenderTargets(){var e=this._renderTargetFactory;this._webGLRenderTargetSet.iterate((function(t){e.releaseImp(t)})),this._webGLRenderTargetSet.clear()}_directDraw({drawMode:e,start:t,count:n,hasIndices:r,instanceCount:i}){i>1?r?this._gl.drawElementsInstanced(e,n,this._currentBoundIndexBuffer._glType,t*this._currentBoundIndexBuffer._typeSize,i):this._gl.drawArraysInstanced(e,t,n,i):r?this._gl.drawElements(e,n,this._currentBoundIndexBuffer._glType,t*this._currentBoundIndexBuffer._typeSize):this._gl.drawArrays(e,t,n)}blendFuncSeparate({srcRGB:e,dstRGB:t,srcAlpha:n,dstAlpha:r}){this._gl.blendFuncSeparate(e,t,n,r)}setStates(e){Object.keys(e).filter((e=>!!this[e])).forEach((t=>{this[t].bind(this)(e[t])}))}}},{"./AttributeNames":1,"./DataTexture":7,"./Program":26,"./ProgramUniform":27,"./ShaderProcess":29,"./Texture":33,"./WebGLCompatibility":37,"./WebGLConstants":38,"./WebGLHandlerSet":40,"./WebGLUtils":41,"./math/Math":48,"./math/Vec4":54}],40:[function(e,t,n){t.exports=class{constructor(e=null){this._handlerSet={},this._initialize=e}reset(e){var t={};return this._initialize&&this._initialize(t),this._handlerSet[e._id]=t,t}get(e){var t=this._handlerSet[e._id];return t||this.reset(e)}getById(e){var t=this._handlerSet[e];return t||this.reset(t)}find(e){return this._handlerSet[e._id]}remove(e){delete this._handlerSet[e._id]}clear(){this._handlerSet={}}iterate(e){for(var t in _handlerSet)e(_handlerSet[t])}}},{}],41:[function(e,t,n){var r,i,o,a=(r=!0,i=function(e,t,n){for(var r=null,i=0;i<n.length;++i){try{r=e.getContext(n[i],t)}catch(e){window.console.log(e)}if(r)break}return r},{create3DContext:o=function(e,t){var n;if(t&&t.webgl2){if(r=!1,n=i(e,t,["webgl2","experimental-webgl2"]))return n;r=!0}return i(e,t,["webgl","experimental-webgl","webkit-3d","moz-webgl"])},setupWebGL:function(e,t,n){n=n||function(e){if(r){var t=document.getElementsByTagName("body")[0];if(t){var n=window.WebGLRenderingContext?'It doesn\'t appear your computer can support WebGL.<br/><a href="http://get.webgl.org">Click here for more information.</a>':'This page requires a browser that supports WebGL.<br/><a href="http://get.webgl.org">Click here to upgrade your browser.</a>';e&&(n+="<br/><br/>Status: "+e),t.innerHTML=function(e){return'<div style="margin: auto width:500pxz-index:10000margin-top:20emtext-align:center">'+e+"</div>"}(n)}}},e.addEventListener&&e.addEventListener("webglcontextcreationerror",(function(e){n(e.statusMessage)}),!1);var i=o(e,t);return i||n(""),i}});t.exports=a},{}],42:[function(e,t,n){t.exports={_id:{$oid:"5e007e8dedc2f74f4f9a3dcd"},uid:"80130640-2560-11ea-bf96-13a0ffbb004f",name:"易拉罐_001_444cc6d0-207b-11ea-a355-bfb00209600d",owner:"null",editorUrl:"http:/loaclhost:3006/projects/50b16250-207b-11ea-9d0c-9f2ecc0763d0/edit",viewerUrl:"http:/loaclhost:3006/projects/50b16250-207b-11ea-9d0c-9f2ecc0763d0",embedUrl:"http:/loaclhost:3006/projects/50b16250-207b-11ea-9d0c-9f2ecc0763d0/embed",scene:{uid:"80130640-2560-11ea-bf96-13a0ffbb004f",environment:{uid:"4db8c150-512e-11e9-989b-c1bfcccff96f",enable:!0,shadowEnable:!0,shadowBias:.001,lightIntensity:3.644,blurLevel:.1,brightness:.534,backgroundBrightness:2,rotation:28.096},background:{uid:"4cb4d1c0-930c-11e9-a08f-4b1a2300aa06",enable:"environment",color:[191,184,184]},camera:{fov:35,near:.5,far:1e3,position:[29.47501182556152,8.735888481140137,5.638679504394531],target:[0,0,0]},models:[{modelUrl:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/model.bin.gz",modelSize:752560,wireframeUrl:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/wireframe.bin.gz",wireframeSize:0}],version:"0.0.1",updatedAt:{$date:"2020-04-18T23:19:16.209+0800"},createdAt:{$date:"2019-12-17T11:14:19.515+0800"},orientation:[0,0,0,1],shading:{type:"lit",renderer:"pbr"},wireframe:{enable:!1,color:[0,0,0],factor:1},postProcess:{enable:!0,chromaticAberration:{enable:!1,factor:.05},colorBalance:{enable:!1,low:{r:0,g:0,b:0},mid:{r:0,g:0,b:0},high:{r:0,g:0,b:0}},bloom:{enable:!1,factor:.5,threshold:0,radius:.7},toneMapping:{enable:!1,saturation:1,method:0,contrast:0,exposure:1,brightness:0},sharpen:{enable:!1,factor:.2},grain:{enable:!1,animated:!1,factor:.15},vignette:{enable:!0,hardness:0,amount:4},ssao:{enable:!1,radius:6,intensity:.5,bias:1.2,crispness:.778,quality:1}},animation:{initWithStaticPose:!0,speed:1,cycleMode:"all",order:[]},hotspotsVisible:!1,hotspots:[],ground:{samplingRange:.5,enable:!0,opacity:1,fade:.5,shadowMode:"ShadowCatcher",position:[0,-6.196212291717529,0],scale:23.37787402087759},sounds:[],lighting:!0,lights:{enable:!1,one:{enable:!0,type:"DIRECTION",castShadows:!1,shadowBias:.005,fallOff:.0113725709,angle:45,attachedToCamera:!1,intensity:.96,color:[.7806122449,.7985214494,1],matrix:[-.98158045,.1909922167,-.0046683273,0,.135483471,.7131126062,.6878332937,0,.1346998486,.6745312328,-.7258536814,0,1.9971166368,10.8817052829,-1.7257931888,1]},two:{enable:!0,type:"DIRECTION",castShadows:!1,shadowBias:.005,fallOff:.0113725709,angle:45,attachedToCamera:!1,intensity:1,color:[1,.878331945,.7091836735],matrix:[.7755211495,-.066660286,.6277924442,0,.2690483737,.9344846523,-.2331338825,0,-.5711216326,.3497067927,.7426474533,0,-8.4677945959,6.0656731519,20.0470409191,1]},three:{enable:!0,type:"DIRECTION",castShadows:!1,shadowBias:.005,fallOff:.0113725709,angle:45,attachedToCamera:!1,intensity:.12,color:[.4234693878,.7352665556,1],matrix:[.6903299131,-.7076363669,-.1506498699,0,-.0110896982,.197851373,-.980169298,0,.7234097246,.6783108479,.1287352474,0,10.7256645187,10.9377440093,10.9448289419,1]}},materials:{"5213b170-207b-11ea-98c7-c1109900f2ca":{name:"M_yilaguan_guanti_001",uid:"5213b170-207b-11ea-98c7-c1109900f2ca",MetalnessWorkFlow:!0,channels:{Albedo:{color:[1,.9882352941176471,.9882352941176471],tint:!1,texture:{uid:"e91384c0-8187-11ea-bec9-699c83ab8606",minFilter:"LINEAR_MIPMAP_LINEAR",magFilter:"LINEAR",wrapS:"REPEAT",wrapT:"REPEAT",textureTarget:"TEXTURE_2D",uv:0,internalFormat:"RGBA",mipmap:!0}},SpecularPBR:{color:[.6588235294117647,.6588235294117647,.6588235294117647],tint:!1},Roughness:{factor:.799999948405196,invert:!0},Emissive:{color:[0,0,0],factor:1,enable:!1,tint:!1},NormalMap:{enable:!0,factor:.621,flipY:!0,texture:{uid:"80130643-2560-11ea-bf96-13a0ffbb004f",minFilter:"LINEAR_MIPMAP_LINEAR",magFilter:"LINEAR",wrapS:"REPEAT",wrapT:"REPEAT",textureTarget:"TEXTURE_2D",uv:0,internalFormat:"RGB",mipmap:!0}},BumpMap:{enable:!1,factor:1},Opacity:{enable:!1,type:"ALPHA_BLEND",factor:1,invert:!1,sampleChannel:"a",refractionTint:[1,1,1],refractUseDiffuse:!1,refractUseShininessMap:!1,IOR:1,roughnessFactor:0},AO:{enable:!1,occludeSpecular:!1,factor:0},MetalnessPBR:{factor:.549},SpecularF0:.5,ClearCoat:{enable:!0,thickness:5,intensity:1,color:[.9647058823529412,.9803921568627451,1],reflectivity:.1,roughness:{factor:.1,texture:{uid:"80130642-2560-11ea-bf96-13a0ffbb004f",minFilter:"LINEAR_MIPMAP_LINEAR",magFilter:"LINEAR",wrapS:"REPEAT",wrapT:"REPEAT",textureTarget:"TEXTURE_2D",uv:0,internalFormat:"RGB",mipmap:!0}},normalmap:{factor:.5,flipY:!0,texture:{uid:"80130641-2560-11ea-bf96-13a0ffbb004f",minFilter:"LINEAR_MIPMAP_LINEAR",magFilter:"LINEAR",wrapS:"REPEAT",wrapT:"REPEAT",textureTarget:"TEXTURE_2D",uv:0,internalFormat:"RGB",mipmap:!0}}},Matcap:{enable:!1,color:[1,1,1],tint:!1},Displacement:{enable:!1,factor:0},CavityMap:{enable:!1,factor:0}},isArtWork:!1,presetColors:{},linearGradient:{srcColor:[.2862745098039216,.3098039215686275,1],dstColor:[.8901960784313725,.9098039215686274,1],leftRatio:0,midRatio:.5,rightRatio:.99986},supportLinearGradient:!0,colorMode:"pure",diffuseColorAlpha:1,cullFace:"Double",version:"0.0.1",order:0},"5213b171-207b-11ea-98c7-c1109900f2ca":{name:"M_yilaguan_guanti_002",uid:"5213b171-207b-11ea-98c7-c1109900f2ca",MetalnessWorkFlow:!0,channels:{Albedo:{color:[.9882352941176471,.996078431372549,1],tint:!1},SpecularPBR:{color:[.6588235294117647,.6588235294117647,.6588235294117647],tint:!1},Roughness:{factor:.7,invert:!0},Emissive:{color:[0,0,0],factor:1,enable:!1,tint:!1},NormalMap:{enable:!0,factor:.43,flipY:!0,texture:{uid:"80130643-2560-11ea-bf96-13a0ffbb004f",minFilter:"LINEAR_MIPMAP_LINEAR",magFilter:"LINEAR",wrapS:"REPEAT",wrapT:"REPEAT",textureTarget:"TEXTURE_2D",uv:0,internalFormat:"RGB",mipmap:!0}},BumpMap:{enable:!1,factor:1},Opacity:{enable:!1,type:"ALPHA_BLEND",factor:1,invert:!1,sampleChannel:"a",refractionTint:[1,1,1],refractUseDiffuse:!1,refractUseShininessMap:!1,IOR:1,roughnessFactor:0},AO:{enable:!1,occludeSpecular:!1,factor:0},MetalnessPBR:{factor:1},SpecularF0:.5,ClearCoat:{enable:!0,thickness:5,intensity:1,color:[.9882352941176471,.996078431372549,1],reflectivity:.1,roughness:{factor:.1,texture:{uid:"80130642-2560-11ea-bf96-13a0ffbb004f",minFilter:"LINEAR_MIPMAP_LINEAR",magFilter:"LINEAR",wrapS:"REPEAT",wrapT:"REPEAT",textureTarget:"TEXTURE_2D",uv:0,internalFormat:"RGB",mipmap:!0}},normalmap:{factor:.3,flipY:!0,texture:{uid:"80130641-2560-11ea-bf96-13a0ffbb004f",minFilter:"LINEAR_MIPMAP_LINEAR",magFilter:"LINEAR",wrapS:"REPEAT",wrapT:"REPEAT",textureTarget:"TEXTURE_2D",uv:0,internalFormat:"RGB",mipmap:!0}}},Matcap:{enable:!1,color:[1,1,1],tint:!1},Displacement:{enable:!1,factor:0},CavityMap:{enable:!1,factor:0}},isArtWork:!1,presetColors:{"392a8f00-2560-11ea-bb9f-0d30eb343757":{uid:"392a8f00-2560-11ea-bb9f-0d30eb343757",color:[.9882352941176471,.996078431372549,1]},"3b5ead10-2560-11ea-bb9f-0d30eb343757":{uid:"3b5ead10-2560-11ea-bb9f-0d30eb343757",color:[0,0,0]},"40ee0410-2560-11ea-bb9f-0d30eb343757":{uid:"40ee0410-2560-11ea-bb9f-0d30eb343757",color:[.6352941176470588,.7098039215686275,.392156862745098]},"4b75c940-2560-11ea-bb9f-0d30eb343757":{uid:"4b75c940-2560-11ea-bb9f-0d30eb343757",color:[.3058823529411765,.4588235294117647,.7686274509803922]}},linearGradient:{srcColor:[1,1,1],dstColor:[1,1,1],leftRatio:0,midRatio:.5,rightRatio:1},supportLinearGradient:!1,colorMode:"preset",diffuseColorAlpha:1,cullFace:"Double",version:"0.0.1",order:0}},images:{"80130641-2560-11ea-bf96-13a0ffbb004f":{uid:"80130641-2560-11ea-bf96-13a0ffbb004f",name:"can_drink_body_normal.png",ext:".png",originalFile:"originalImage/7d9edb50-22d6-11ea-9666-2d934d71b872/can_drink_body_normal.png",levels:[{uid:"95cd31e0-22d6-11ea-af66-d1b034b4708c",width:32,height:32,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130641-2560-11ea-bf96-13a0ffbb004f/95cd31e0-22d6-11ea-af66-d1b034b4708c.png",size:153},{uid:"95aa67a0-22d6-11ea-af66-d1b034b4708c",width:64,height:64,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130641-2560-11ea-bf96-13a0ffbb004f/95aa67a0-22d6-11ea-af66-d1b034b4708c.png",size:205},{uid:"95863dd0-22d6-11ea-af66-d1b034b4708c",width:128,height:128,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130641-2560-11ea-bf96-13a0ffbb004f/95863dd0-22d6-11ea-af66-d1b034b4708c.png",size:1577},{uid:"9553e330-22d6-11ea-af66-d1b034b4708c",width:256,height:256,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130641-2560-11ea-bf96-13a0ffbb004f/9553e330-22d6-11ea-af66-d1b034b4708c.png",size:12427},{uid:"947edff0-22d6-11ea-af66-d1b034b4708c",width:512,height:512,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130641-2560-11ea-bf96-13a0ffbb004f/947edff0-22d6-11ea-af66-d1b034b4708c.png",size:61959},{uid:"91bed590-22d6-11ea-af66-d1b034b4708c",width:1024,height:1024,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130641-2560-11ea-bf96-13a0ffbb004f/91bed590-22d6-11ea-af66-d1b034b4708c.png",size:443379},{uid:"8a0ec170-22d6-11ea-af66-d1b034b4708c",width:2048,height:2048,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130641-2560-11ea-bf96-13a0ffbb004f/8a0ec170-22d6-11ea-af66-d1b034b4708c.png",size:2145690}],colorSpace:"auto",updatedAt:{$date:"2019-12-20T11:12:03.449+0800"},createdAt:{$date:"2019-12-20T11:12:03.449+0800"}},"80130642-2560-11ea-bf96-13a0ffbb004f":{uid:"80130642-2560-11ea-bf96-13a0ffbb004f",name:"can_drink_ringPull_roughness.png",ext:".png",originalFile:"originalImage/87ea5ad0-22d6-11ea-9666-2d934d71b872/can_drink_ringPull_roughness.png",levels:[{uid:"8d47a550-22d6-11ea-89db-17e2f61a9b9c",width:32,height:32,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130642-2560-11ea-bf96-13a0ffbb004f/8d47a550-22d6-11ea-89db-17e2f61a9b9c.png",size:117},{uid:"8d407960-22d6-11ea-89db-17e2f61a9b9c",width:64,height:64,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130642-2560-11ea-bf96-13a0ffbb004f/8d407960-22d6-11ea-89db-17e2f61a9b9c.png",size:537},{uid:"8d34e0a0-22d6-11ea-89db-17e2f61a9b9c",width:128,height:128,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130642-2560-11ea-bf96-13a0ffbb004f/8d34e0a0-22d6-11ea-89db-17e2f61a9b9c.png",size:3209},{uid:"8d0f5740-22d6-11ea-89db-17e2f61a9b9c",width:256,height:256,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130642-2560-11ea-bf96-13a0ffbb004f/8d0f5740-22d6-11ea-89db-17e2f61a9b9c.png",size:12464},{uid:"8cc8ff70-22d6-11ea-89db-17e2f61a9b9c",width:512,height:512,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130642-2560-11ea-bf96-13a0ffbb004f/8cc8ff70-22d6-11ea-89db-17e2f61a9b9c.png",size:32242},{uid:"8c385830-22d6-11ea-89db-17e2f61a9b9c",width:1024,height:1024,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130642-2560-11ea-bf96-13a0ffbb004f/8c385830-22d6-11ea-89db-17e2f61a9b9c.png",size:81175}],colorSpace:"auto",updatedAt:{$date:"2019-12-20T11:12:19.902+0800"},createdAt:{$date:"2019-12-20T11:12:19.902+0800"}},"80130643-2560-11ea-bf96-13a0ffbb004f":{uid:"80130643-2560-11ea-bf96-13a0ffbb004f",name:"lasi_n.jpg",ext:".jpg",originalFile:"originalImage/d346ce00-22d6-11ea-9666-2d934d71b872/lasi_n.JPG.jpg",levels:[{uid:"d559f690-22d6-11ea-86be-4147b976396a",width:32,height:32,extra:{quality:80,format:"rgb"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130643-2560-11ea-bf96-13a0ffbb004f/d559f690-22d6-11ea-86be-4147b976396a.jpg",size:279},{uid:"d554c670-22d6-11ea-86be-4147b976396a",width:64,height:64,extra:{quality:80,format:"rgb"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130643-2560-11ea-bf96-13a0ffbb004f/d554c670-22d6-11ea-86be-4147b976396a.jpg",size:295},{uid:"d54f4830-22d6-11ea-86be-4147b976396a",width:128,height:128,extra:{quality:80,format:"rgb"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130643-2560-11ea-bf96-13a0ffbb004f/d54f4830-22d6-11ea-86be-4147b976396a.jpg",size:400},{uid:"d54954c0-22d6-11ea-86be-4147b976396a",width:256,height:256,extra:{quality:80,format:"rgb"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130643-2560-11ea-bf96-13a0ffbb004f/d54954c0-22d6-11ea-86be-4147b976396a.jpg",size:1035},{uid:"d5418c90-22d6-11ea-86be-4147b976396a",width:512,height:512,extra:{quality:80,format:"rgb"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130643-2560-11ea-bf96-13a0ffbb004f/d5418c90-22d6-11ea-86be-4147b976396a.jpg",size:6516},{uid:"d53111d0-22d6-11ea-86be-4147b976396a",width:1024,height:1024,extra:{quality:80,format:"rgb"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130643-2560-11ea-bf96-13a0ffbb004f/d53111d0-22d6-11ea-86be-4147b976396a.jpg",size:59661},{uid:"d51dd7f0-22d6-11ea-86be-4147b976396a",width:2048,height:2048,extra:{quality:80,format:"rgb"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130643-2560-11ea-bf96-13a0ffbb004f/d51dd7f0-22d6-11ea-86be-4147b976396a.jpg",size:283394}],colorSpace:"auto",updatedAt:{$date:"2019-12-20T11:14:26.599+0800"},createdAt:{$date:"2019-12-20T11:14:26.599+0800"}},"e91384c0-8187-11ea-bec9-699c83ab8606":{uid:"e91384c0-8187-11ea-bec9-699c83ab8606",name:"c9c2c190-2565-11ea-8954-cf428812723e.png",ext:".png",originalFile:"originalImage/e781e840-8187-11ea-b13e-b57801b25c8b/c9c2c190-2565-11ea-8954-cf428812723e.png",levels:[{uid:"f570cd40-8187-11ea-8e71-b52d817d846b",width:32,height:32,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/e91384c0-8187-11ea-bec9-699c83ab8606/f570cd40-8187-11ea-8e71-b52d817d846b.png",size:2272},{uid:"f551ac80-8187-11ea-8e71-b52d817d846b",width:64,height:64,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/e91384c0-8187-11ea-bec9-699c83ab8606/f551ac80-8187-11ea-8e71-b52d817d846b.png",size:6244},{uid:"f531a160-8187-11ea-8e71-b52d817d846b",width:128,height:128,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/e91384c0-8187-11ea-bec9-699c83ab8606/f531a160-8187-11ea-8e71-b52d817d846b.png",size:16059},{uid:"f5105dc0-8187-11ea-8e71-b52d817d846b",width:256,height:256,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/e91384c0-8187-11ea-bec9-699c83ab8606/f5105dc0-8187-11ea-8e71-b52d817d846b.png",size:42380},{uid:"f4e3f690-8187-11ea-8e71-b52d817d846b",width:512,height:512,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/e91384c0-8187-11ea-bec9-699c83ab8606/f4e3f690-8187-11ea-8e71-b52d817d846b.png",size:119783},{uid:"f48bc470-8187-11ea-8e71-b52d817d846b",width:1024,height:1024,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/e91384c0-8187-11ea-bec9-699c83ab8606/f48bc470-8187-11ea-8e71-b52d817d846b.png",size:355222},{uid:"f40444f0-8187-11ea-8e71-b52d817d846b",width:2048,height:2048,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/e91384c0-8187-11ea-bec9-699c83ab8606/f40444f0-8187-11ea-8e71-b52d817d846b.png",size:1016367}],colorSpace:"auto",updatedAt:{$date:"2020-04-18T23:18:51.947+0800"},createdAt:{$date:"2020-04-18T23:18:51.947+0800"}}},stickers:{"ec6ccf60-2565-11ea-bb9f-0d30eb343757":{uid:"ec6ccf60-2565-11ea-bb9f-0d30eb343757",name:"sticker0",material:"5213b170-207b-11ea-98c7-c1109900f2ca",scale:[.29,.29],location:[.6119479169561819,.4529831100249117],mirror:[1,1],rotation:0,index:0,texture:{uid:"f3314b00-2565-11ea-bf96-13a0ffbb004f"}},"6b4e9f40-26cc-11ea-9448-0f4ce29c6dc4":{uid:"6b4e9f40-26cc-11ea-9448-0f4ce29c6dc4",name:"sticker1",material:"5213b170-207b-11ea-98c7-c1109900f2ca",scale:[.05,.05],location:[.4741104817526587,.3966850130361705],mirror:[1,1],rotation:0,index:1}},stickerImages:{"f3314b00-2565-11ea-bf96-13a0ffbb004f":{uid:"f3314b00-2565-11ea-bf96-13a0ffbb004f",name:"logo-Only.png",ext:".png",originalFile:"originalImage/f2e6ad70-2565-11ea-858d-d9ba64600bf8/logo-Only.png",levels:[{uid:"f3781800-2565-11ea-8954-cf428812723e",width:37,height:83,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/f3314b00-2565-11ea-bf96-13a0ffbb004f/f3781800-2565-11ea-8954-cf428812723e.png",size:510},{uid:"f3711320-2565-11ea-8954-cf428812723e",width:75,height:167,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/f3314b00-2565-11ea-bf96-13a0ffbb004f/f3711320-2565-11ea-8954-cf428812723e.png",size:839},{uid:"f36923e0-2565-11ea-8954-cf428812723e",width:149,height:333,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/f3314b00-2565-11ea-bf96-13a0ffbb004f/f36923e0-2565-11ea-8954-cf428812723e.png",size:1125}],colorSpace:"auto",updatedAt:{$date:"2019-12-23T17:23:59.024+0800"},createdAt:{$date:"2019-12-23T17:23:59.024+0800"}}},artworks:{"dde71050-255f-11ea-bb9f-0d30eb343757":{uid:"dde71050-255f-11ea-bb9f-0d30eb343757",name:"易拉罐-空白.pdf",type:"template",image:"80130644-2560-11ea-bf96-13a0ffbb004f"},"b1d5e0d0-2565-11ea-bb9f-0d30eb343757":{uid:"b1d5e0d0-2565-11ea-bb9f-0d30eb343757",name:"易拉罐01.pdf",type:"design",image:"b1b4eb50-2565-11ea-bf96-13a0ffbb004f"},"be32b420-2565-11ea-bb9f-0d30eb343757":{uid:"be32b420-2565-11ea-bb9f-0d30eb343757",name:"易拉罐02.pdf",type:"design",image:"be17b210-2565-11ea-bf96-13a0ffbb004f"},"c7cee0d0-2565-11ea-bb9f-0d30eb343757":{uid:"c7cee0d0-2565-11ea-bb9f-0d30eb343757",name:"易拉罐03.pdf",type:"design",image:"c7b628b0-2565-11ea-bf96-13a0ffbb004f"}},artworkImages:{"80130644-2560-11ea-bf96-13a0ffbb004f":{uid:"80130644-2560-11ea-bf96-13a0ffbb004f",name:"易拉罐-空白.pdf",ext:".pdf",originalFile:"originalPDFDesign/dc09ebe0-255f-11ea-928e-e3b284eac352/易拉罐-空白.pdf",levels:[{uid:"e3216980-255f-11ea-bf84-a307b20ae71b",width:32,height:32,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130644-2560-11ea-bf96-13a0ffbb004f/e3216980-255f-11ea-bf84-a307b20ae71b.png",size:582},{uid:"e2b4c500-255f-11ea-bf84-a307b20ae71b",width:64,height:64,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130644-2560-11ea-bf96-13a0ffbb004f/e2b4c500-255f-11ea-bf84-a307b20ae71b.png",size:1282},{uid:"e2464bc0-255f-11ea-bf84-a307b20ae71b",width:128,height:128,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130644-2560-11ea-bf96-13a0ffbb004f/e2464bc0-255f-11ea-bf84-a307b20ae71b.png",size:2909},{uid:"e1ef0400-255f-11ea-bf84-a307b20ae71b",width:256,height:256,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130644-2560-11ea-bf96-13a0ffbb004f/e1ef0400-255f-11ea-bf84-a307b20ae71b.png",size:8143},{uid:"e1823870-255f-11ea-bf84-a307b20ae71b",width:512,height:512,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130644-2560-11ea-bf96-13a0ffbb004f/e1823870-255f-11ea-bf84-a307b20ae71b.png",size:24491},{uid:"e0d5a4c0-255f-11ea-bf84-a307b20ae71b",width:1024,height:1024,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130644-2560-11ea-bf96-13a0ffbb004f/e0d5a4c0-255f-11ea-bf84-a307b20ae71b.png",size:71519},{uid:"dfbe6860-255f-11ea-bf84-a307b20ae71b",width:2048,height:2048,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/80130644-2560-11ea-bf96-13a0ffbb004f/dfbe6860-255f-11ea-bf84-a307b20ae71b.png",size:206352}],colorSpace:"auto",updatedAt:{$date:"2019-12-23T16:40:26.104+0800"},createdAt:{$date:"2019-12-23T16:40:26.104+0800"}},"b1b4eb50-2565-11ea-bf96-13a0ffbb004f":{uid:"b1b4eb50-2565-11ea-bf96-13a0ffbb004f",name:"易拉罐01.pdf",ext:".pdf",originalFile:"originalPDFDesign/ae6683a0-2565-11ea-858d-d9ba64600bf8/易拉罐01.pdf",levels:[{uid:"b7681e00-2565-11ea-8954-cf428812723e",width:32,height:32,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/b1b4eb50-2565-11ea-bf96-13a0ffbb004f/b7681e00-2565-11ea-8954-cf428812723e.png",size:2096},{uid:"b6fb0450-2565-11ea-8954-cf428812723e",width:64,height:64,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/b1b4eb50-2565-11ea-bf96-13a0ffbb004f/b6fb0450-2565-11ea-8954-cf428812723e.png",size:5806},{uid:"b68cb220-2565-11ea-8954-cf428812723e",width:128,height:128,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/b1b4eb50-2565-11ea-bf96-13a0ffbb004f/b68cb220-2565-11ea-8954-cf428812723e.png",size:16187},{uid:"b630fd90-2565-11ea-8954-cf428812723e",width:256,height:256,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/b1b4eb50-2565-11ea-bf96-13a0ffbb004f/b630fd90-2565-11ea-8954-cf428812723e.png",size:43747},{uid:"b5be1780-2565-11ea-8954-cf428812723e",width:512,height:512,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/b1b4eb50-2565-11ea-bf96-13a0ffbb004f/b5be1780-2565-11ea-8954-cf428812723e.png",size:116830},{uid:"b5068750-2565-11ea-8954-cf428812723e",width:1024,height:1024,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/b1b4eb50-2565-11ea-bf96-13a0ffbb004f/b5068750-2565-11ea-8954-cf428812723e.png",size:323921},{uid:"b3c5f100-2565-11ea-8954-cf428812723e",width:2048,height:2048,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/b1b4eb50-2565-11ea-bf96-13a0ffbb004f/b3c5f100-2565-11ea-8954-cf428812723e.png",size:953947}],colorSpace:"auto",updatedAt:{$date:"2019-12-23T17:22:09.157+0800"},createdAt:{$date:"2019-12-23T17:22:09.157+0800"}},"be17b210-2565-11ea-bf96-13a0ffbb004f":{uid:"be17b210-2565-11ea-bf96-13a0ffbb004f",name:"易拉罐02.pdf",ext:".pdf",originalFile:"originalPDFDesign/bd940320-2565-11ea-858d-d9ba64600bf8/易拉罐02.pdf",levels:[{uid:"c3da9c30-2565-11ea-8954-cf428812723e",width:32,height:32,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/be17b210-2565-11ea-bf96-13a0ffbb004f/c3da9c30-2565-11ea-8954-cf428812723e.png",size:2336},{uid:"c368a080-2565-11ea-8954-cf428812723e",width:64,height:64,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/be17b210-2565-11ea-bf96-13a0ffbb004f/c368a080-2565-11ea-8954-cf428812723e.png",size:5906},{uid:"c2f32260-2565-11ea-8954-cf428812723e",width:128,height:128,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/be17b210-2565-11ea-bf96-13a0ffbb004f/c2f32260-2565-11ea-8954-cf428812723e.png",size:14333},{uid:"c2946090-2565-11ea-8954-cf428812723e",width:256,height:256,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/be17b210-2565-11ea-bf96-13a0ffbb004f/c2946090-2565-11ea-8954-cf428812723e.png",size:36683},{uid:"c220b730-2565-11ea-8954-cf428812723e",width:512,height:512,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/be17b210-2565-11ea-bf96-13a0ffbb004f/c220b730-2565-11ea-8954-cf428812723e.png",size:93238},{uid:"c16fb6b0-2565-11ea-8954-cf428812723e",width:1024,height:1024,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/be17b210-2565-11ea-bf96-13a0ffbb004f/c16fb6b0-2565-11ea-8954-cf428812723e.png",size:284544},{uid:"c058c870-2565-11ea-8954-cf428812723e",width:2048,height:2048,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/be17b210-2565-11ea-bf96-13a0ffbb004f/c058c870-2565-11ea-8954-cf428812723e.png",size:776018}],colorSpace:"auto",updatedAt:{$date:"2019-12-23T17:22:29.937+0800"},createdAt:{$date:"2019-12-23T17:22:29.937+0800"}},"c7b628b0-2565-11ea-bf96-13a0ffbb004f":{uid:"c7b628b0-2565-11ea-bf96-13a0ffbb004f",name:"易拉罐03.pdf",ext:".pdf",originalFile:"originalPDFDesign/c73e60a0-2565-11ea-858d-d9ba64600bf8/易拉罐03.pdf",levels:[{uid:"cd5955d0-2565-11ea-8954-cf428812723e",width:32,height:32,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/c7b628b0-2565-11ea-bf96-13a0ffbb004f/cd5955d0-2565-11ea-8954-cf428812723e.png",size:2283},{uid:"cce92ee0-2565-11ea-8954-cf428812723e",width:64,height:64,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/c7b628b0-2565-11ea-bf96-13a0ffbb004f/cce92ee0-2565-11ea-8954-cf428812723e.png",size:6240},{uid:"cc7696f0-2565-11ea-8954-cf428812723e",width:128,height:128,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/c7b628b0-2565-11ea-bf96-13a0ffbb004f/cc7696f0-2565-11ea-8954-cf428812723e.png",size:15821},{uid:"cc19a9e0-2565-11ea-8954-cf428812723e",width:256,height:256,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/c7b628b0-2565-11ea-bf96-13a0ffbb004f/cc19a9e0-2565-11ea-8954-cf428812723e.png",size:40729},{uid:"cba9aa00-2565-11ea-8954-cf428812723e",width:512,height:512,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/c7b628b0-2565-11ea-bf96-13a0ffbb004f/cba9aa00-2565-11ea-8954-cf428812723e.png",size:114909},{uid:"caff1220-2565-11ea-8954-cf428812723e",width:1024,height:1024,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/c7b628b0-2565-11ea-bf96-13a0ffbb004f/caff1220-2565-11ea-8954-cf428812723e.png",size:316503},{uid:"c9c2c190-2565-11ea-8954-cf428812723e",width:2048,height:2048,extra:{quality:80,format:"rgba"},url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/c7b628b0-2565-11ea-bf96-13a0ffbb004f/c9c2c190-2565-11ea-8954-cf428812723e.png",size:1016367}],colorSpace:"auto",updatedAt:{$date:"2019-12-23T17:22:46.075+0800"},createdAt:{$date:"2019-12-23T17:22:46.075+0800"}}},animations:[],materialsMapping:[{node:"yilaguan_001_@#$duplicate$#@",material:"5213b171-207b-11ea-98c7-c1109900f2ca"},{node:"yilaguan_001_@#$duplicate$#@_@#$duplicate$#@",material:"5213b170-207b-11ea-98c7-c1109900f2ca"}],metadata:{isRigged:!1,hasNormal:!1,materialCount:0,totalTriangle:203998,vertexCount:111700,triangle:0,quad:0,line:0,point:0,hasVertexColor:!1,textureCount:0,animationCount:0,morphCount:0,polygon:0,scale:!1,uvMapped:!0,hasTangent:!1},currentArtwork:""},originalFileName:"originalModel/易拉罐_001_444cc6d0-207b-11ea-a355-bfb00209600d.fbx",originalFileNameExt:".fbx",thumbnails:{uid:"50b16251-207b-11ea-9d0c-9f2ecc0763d0",square:{images:[{uid:"c920b2c0-25f5-11ea-93bf-e516777b546a",width:32,height:32,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c920b2c0-25f5-11ea-93bf-e516777b546a.jpeg",size:497},{uid:"c91bd0c0-25f5-11ea-93bf-e516777b546a",width:64,height:64,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c91bd0c0-25f5-11ea-93bf-e516777b546a.jpeg",size:829},{uid:"c9158f30-25f5-11ea-93bf-e516777b546a",width:128,height:128,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c9158f30-25f5-11ea-93bf-e516777b546a.jpeg",size:1762},{uid:"c9108620-25f5-11ea-93bf-e516777b546a",width:256,height:256,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c9108620-25f5-11ea-93bf-e516777b546a.jpeg",size:4194},{uid:"c908bdf0-25f5-11ea-93bf-e516777b546a",width:512,height:512,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c908bdf0-25f5-11ea-93bf-e516777b546a.jpeg",size:10594},{uid:"c8f44b90-25f5-11ea-93bf-e516777b546a",width:1024,height:1024,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c8f44b90-25f5-11ea-93bf-e516777b546a.jpeg",size:27261}]},landscape:{images:[{uid:"c9388080-25f5-11ea-8a0f-e308a1cea7fb",width:60,height:34,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c9388080-25f5-11ea-8a0f-e308a1cea7fb.jpeg",size:577},{uid:"c9309140-25f5-11ea-8a0f-e308a1cea7fb",width:120,height:68,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c9309140-25f5-11ea-8a0f-e308a1cea7fb.jpeg",size:1011},{uid:"c92ac4e0-25f5-11ea-8a0f-e308a1cea7fb",width:240,height:135,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c92ac4e0-25f5-11ea-8a0f-e308a1cea7fb.jpeg",size:2223},{uid:"c923e710-25f5-11ea-8a0f-e308a1cea7fb",width:480,height:270,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c923e710-25f5-11ea-8a0f-e308a1cea7fb.jpeg",size:5357},{uid:"c918c380-25f5-11ea-8a0f-e308a1cea7fb",width:960,height:540,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c918c380-25f5-11ea-8a0f-e308a1cea7fb.jpeg",size:13585},{uid:"c908bdf0-25f5-11ea-8a0f-e308a1cea7fb",width:1920,height:1080,url:"/model/80130640-2560-11ea-bf96-13a0ffbb004f/50b16251-207b-11ea-9d0c-9f2ecc0763d0/c908bdf0-25f5-11ea-8a0f-e308a1cea7fb.jpeg",size:36745}]}},status:{code:300,warning:{},error:{},processing:"SUCCEEDED"},price:0,isDownloadable:!1,htmlDescription:"",createdAt:{$date:"2019-12-17T11:14:19.514+0800"},isProtected:!0,description:"",categories:[],isPublished:!1,isDisabled:!1,isDeleted:!1,viewCount:0,isPrivate:!0,publishedAt:null,license:0,isInspectable:!0,tags:[],vertexCount:111700,faceCount:203998,animationCount:0,isRestricted:!1,downloadCount:0,inStore:!1,processedAt:{$date:"2019-12-17T11:14:19.514+0800"},likeCount:0,commentCount:0,archiveSize:0,hotspots:[],sounds:[]}},{}],43:[function(e,t,n){t.exports={uid:"4db8c150-512e-11e9-989b-c1bfcccff96f",processing:"Succeeded",name:"教堂",isDefault:!1,brightness:1.05,textures:[{images:[{width:256,file:"thumbnail_256.jpg",height:128,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/thumbnail_256.jpg"}],encoding:"srgb",type:"thumbnail",format:"panorama"},{images:[{file:"background_cubemap_512_0.0_luv.bin.gz",sizeUncompressed:6291456,sizeCompressed:2650319,height:512,width:512,samples:65535,blur:0,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_512_0.0_luv.bin.gz"},{file:"background_cubemap_512_0.02_luv.bin.gz",sizeUncompressed:6291456,sizeCompressed:1910112,height:512,width:512,samples:65535,blur:.02,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_512_0.02_luv.bin.gz"},{file:"background_cubemap_256_0.055_luv.bin.gz",sizeUncompressed:1572864,sizeCompressed:496855,height:256,width:256,samples:65535,blur:.055,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_256_0.055_luv.bin.gz"},{file:"background_cubemap_128_0.1_luv.bin.gz",sizeUncompressed:393216,sizeCompressed:138454,height:128,width:128,samples:65535,blur:.1,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_128_0.1_luv.bin.gz"},{file:"background_cubemap_64_0.15_luv.bin.gz",sizeUncompressed:98304,sizeCompressed:39184,height:64,width:64,samples:65535,blur:.15,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_64_0.15_luv.bin.gz"}],encoding:"luv",type:"background",format:"cubemap"},{images:[{file:"background_cubemap_512_0.0_rgbm.bin.gz",sizeUncompressed:6291456,sizeCompressed:3964377,height:512,width:512,samples:65535,blur:0,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_512_0.0_rgbm.bin.gz"},{file:"background_cubemap_512_0.02_rgbm.bin.gz",sizeUncompressed:6291456,sizeCompressed:2923407,height:512,width:512,samples:65535,blur:.02,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_512_0.02_rgbm.bin.gz"},{file:"background_cubemap_256_0.055_rgbm.bin.gz",sizeUncompressed:1572864,sizeCompressed:773427,height:256,width:256,samples:65535,blur:.055,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_256_0.055_rgbm.bin.gz"},{file:"background_cubemap_128_0.1_rgbm.bin.gz",sizeUncompressed:393216,sizeCompressed:224947,height:128,width:128,samples:65535,blur:.1,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_128_0.1_rgbm.bin.gz"},{file:"background_cubemap_64_0.15_rgbm.bin.gz",sizeUncompressed:98304,sizeCompressed:64860,height:64,width:64,samples:65535,blur:.15,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_64_0.15_rgbm.bin.gz"}],encoding:"rgbm",type:"background",format:"cubemap"},{images:[{file:"background_cubemap_512_0.0_rgbe.bin.gz",sizeUncompressed:6291456,sizeCompressed:3863719,height:512,width:512,samples:65535,blur:0,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_512_0.0_rgbe.bin.gz"},{file:"background_cubemap_512_0.02_rgbe.bin.gz",sizeUncompressed:6291456,sizeCompressed:2800470,height:512,width:512,samples:65535,blur:.02,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_512_0.02_rgbe.bin.gz"},{file:"background_cubemap_256_0.055_rgbe.bin.gz",sizeUncompressed:1572864,sizeCompressed:743594,height:256,width:256,samples:65535,blur:.055,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_256_0.055_rgbe.bin.gz"},{file:"background_cubemap_128_0.1_rgbe.bin.gz",sizeUncompressed:393216,sizeCompressed:221807,height:128,width:128,samples:65535,blur:.1,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_128_0.1_rgbe.bin.gz"},{file:"background_cubemap_64_0.15_rgbe.bin.gz",sizeUncompressed:98304,sizeCompressed:64634,height:64,width:64,samples:65535,blur:.15,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_64_0.15_rgbe.bin.gz"}],encoding:"rgbe",type:"background",format:"cubemap"},{images:[{file:"background_cubemap_512_0.0_float.bin.gz",sizeUncompressed:18874368,sizeCompressed:16699466,height:512,width:512,samples:65535,blur:0,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_512_0.0_float.bin.gz"},{file:"background_cubemap_512_0.02_float.bin.gz",sizeUncompressed:18874368,sizeCompressed:16662025,height:512,width:512,samples:65535,blur:.02,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_512_0.02_float.bin.gz"},{file:"background_cubemap_256_0.055_float.bin.gz",sizeUncompressed:4718592,sizeCompressed:4170497,height:256,width:256,samples:65535,blur:.055,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_256_0.055_float.bin.gz"},{file:"background_cubemap_128_0.1_float.bin.gz",sizeUncompressed:1179648,sizeCompressed:1045617,height:128,width:128,samples:65535,blur:.1,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_128_0.1_float.bin.gz"},{file:"background_cubemap_64_0.15_float.bin.gz",sizeUncompressed:294912,sizeCompressed:263460,height:64,width:64,samples:65535,blur:.15,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/background_cubemap_64_0.15_float.bin.gz"}],encoding:"float",type:"background",format:"cubemap"},{images:[{file:"specular_panorama_ue4_1024_luv.bin.gz",sizeUncompressed:4194304,samples:65535,height:1024,width:1024,sizeCompressed:1019565,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/specular_panorama_ue4_1024_luv.bin.gz"}],limitSize:32,encoding:"luv",type:"specular_ue4",format:"panorama"},{images:[{file:"specular_panorama_ue4_1024_rgbm.bin.gz",sizeUncompressed:4194304,samples:65535,height:1024,width:1024,sizeCompressed:1557493,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/specular_panorama_ue4_1024_rgbm.bin.gz"}],limitSize:32,encoding:"rgbm",type:"specular_ue4",format:"panorama"},{images:[{file:"specular_panorama_ue4_1024_rgbe.bin.gz",sizeUncompressed:4194304,samples:65535,height:1024,width:1024,sizeCompressed:1511890,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/specular_panorama_ue4_1024_rgbe.bin.gz"}],limitSize:32,encoding:"rgbe",type:"specular_ue4",format:"panorama"},{images:[{file:"specular_panorama_ue4_1024_float.bin.gz",sizeUncompressed:12582912,samples:65535,height:1024,width:1024,sizeCompressed:7348013,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/specular_panorama_ue4_1024_float.bin.gz"}],limitSize:32,encoding:"float",type:"specular_ue4",format:"panorama"},{images:[{file:"specular_cubemap_ue4_256_luv.bin.gz",sizeUncompressed:2097144,samples:65535,height:256,width:256,sizeCompressed:934953,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/specular_cubemap_ue4_256_luv.bin.gz"}],limitSize:8,encoding:"luv",type:"specular_ue4",format:"cubemap"},{images:[{file:"specular_cubemap_ue4_256_rgbm.bin.gz",sizeUncompressed:2097144,samples:65535,height:256,width:256,sizeCompressed:1398165,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/specular_cubemap_ue4_256_rgbm.bin.gz"}],limitSize:8,encoding:"rgbm",type:"specular_ue4",format:"cubemap"},{images:[{file:"specular_cubemap_ue4_256_rgbe.bin.gz",sizeUncompressed:2097144,samples:65535,height:256,width:256,sizeCompressed:1378414,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/specular_cubemap_ue4_256_rgbe.bin.gz"}],limitSize:8,encoding:"rgbe",type:"specular_ue4",format:"cubemap"},{images:[{file:"specular_cubemap_ue4_256_float.bin.gz",sizeUncompressed:6291432,samples:65535,height:256,width:256,sizeCompressed:5587519,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/specular_cubemap_ue4_256_float.bin.gz"}],limitSize:8,encoding:"float",type:"specular_ue4",format:"cubemap"},{images:[{file:"brdf_ue4.bin.gz",sizeUncompressed:65536,samples:65535,height:128,width:128,sizeCompressed:59665,url:"/environments/4db8c150-512e-11e9-989b-c1bfcccff96f/brdf_ue4.bin.gz"}],encoding:"rg16",type:"brdf_ue4",format:"lut"}],writeByChannel:!0,lights:[{direction:[-.853356,-.498228,.153471],lum_ratio:.0643748,color:[13.6045,15.523,18.454],luminosity:261.724,sum:.575078,area:{y:.333984,x:.72168,w:.046875,h:.046875},error:0,variance:286903e-9}],diffuseSPH:[2.58931,2.48956,2.64778,-1.17579,-1.26888,-1.4308,-.259247,-.209793,-.195712,-.451108,-.495299,-.573757,.183403,.199736,.230714,.0615094,.0584886,.0615878,-.173219,-.213259,-.261861,.0976099,.108054,.126635,.217396,.215403,.249315,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.0206025,-.0226363,-.0258502,-.0153433,-.0172384,-.0200829,.00697426,.00849729,.00925827,.00494318,.00794323,.0108846,.00901932,.0101507,.0115551,.0154614,.0174262,.020823,-.00385343,-.00173766,-.00115903,.00135225,.00178092,.00248236,.0634683,.0738146,.0884793],originalFile:"originalEnvironments/4db8c150-512e-11e9-989b-c1bfcccff96f/TrinitatisChurchWhiteBalanced.exr"}},{}],44:[function(e,t,n){const r=e("./WebGLCanvas.js"),i=e("./Model"),o=e("./Cube"),a=e("./DataTexture"),s=e("./EventManager"),l=e("./MouseSource"),u=e("./InputSourceTouch"),c=e("./Orbiter"),f=e("./math/Mat4"),h=e("./math/Vec3"),d=e("./math/Spherical"),p=e("./StopWatch"),_=e("./RenderTarget"),b=e("./WebGLConstants"),m=e("./VertexAttribute"),v=e("./VertexBuffer"),g=e("./math/Math"),y=e("load-asset"),x=e("./ModelDecoder"),E=e("./assets/can/scene").scene,T=e("./assets/environments/TrinitatisChurchWhiteBalanced"),S=e("./PBRModel"),R=e("./CubeMap"),M=e("./Texture"),N=e("./Sphere"),A=e("./Plane");t.exports={WebGLCanvas:r,Model:i,Cube:o,DataTexture:a,EventManager:s,MouseEventSource:l,InputTouchSource:u,Orbiter:c,Mat4:f,Vec3:h,Spherical:d,StopWatch:p,RenderTarget:_,GL:b,VertexAttribute:m,VertexBuffer:v,math:g,load:y,ModelDecoder:x,sceneJson:E,churchEnvJson:T,PBRModel:S,CubeMap:R,Texture:M,Sphere:N,Plane:A}},{"./Cube":5,"./CubeMap":6,"./DataTexture":7,"./EventManager":10,"./InputSourceTouch":17,"./Model":19,"./ModelDecoder":20,"./MouseSource":21,"./Orbiter":23,"./PBRModel":24,"./Plane":25,"./RenderTarget":28,"./Sphere":30,"./StopWatch":31,"./Texture":33,"./VertexAttribute":34,"./VertexBuffer":35,"./WebGLCanvas.js":36,"./WebGLConstants":38,"./assets/can/scene":42,"./assets/environments/TrinitatisChurchWhiteBalanced":43,"./math/Mat4":47,"./math/Math":48,"./math/Spherical":51,"./math/Vec3":53,"load-asset":67}],45:[function(e,t,n){const r=e("load-asset"),i=e("../Texture");t.exports=async e=>{const t=await r.all(e);for(key in t)t[key]=new i({source:t[key],mipMaping:!1,flipY:!1});return t}},{"../Texture":33,"load-asset":67}],46:[function(e,t,n){const r=e("./Vec3"),i=e("./Sphere");var o,a=new r;t.exports=class{constructor(e,t){this.min=void 0!==e?e:new r(1/0,1/0,1/0),this.max=void 0!==t?t:new r(-1/0,-1/0,-1/0)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}reset(e,t){return void 0===e?this.min.x=this.min.y=this.min.z=1/0:this.min.copy(e),void 0===t?this.max.x=this.max.y=this.max.z=-1/0:this.max.copy(t),this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return e=e||new r,this.min.addTo(this.max,e).scale(.5)}size(e){return e=e||new r,this.max.subTo(this.min,e)}addPoint(e){return this.min.x=Math.min(this.min.x,e.x),this.min.y=Math.min(this.min.y,e.y),this.min.z=Math.min(this.min.z,e.z),this.max.x=Math.max(this.max.x,e.x),this.max.y=Math.max(this.max.y,e.y),this.max.z=Math.max(this.max.z,e.z),this}merge(e){var t=this.min,n=e.min;return t.x=Math.min(t.x,n.x),t.y=Math.min(t.y,n.y),t.z=Math.min(t.z,n.z),t=this.max,n=e.max,t.x=Math.max(t.x,n.x),t.y=Math.max(t.y,n.y),t.z=Math.max(t.z,n.z),this}transformByMat4(e){void 0===o&&(o=[new r,new r,new r,new r,new r,new r,new r,new r]),o[0].set(this.min.x,this.min.y,this.min.z).transformByMat4(e),o[1].set(this.min.x,this.min.y,this.max.z).transformByMat4(e),o[2].set(this.min.x,this.max.y,this.min.z).transformByMat4(e),o[3].set(this.min.x,this.max.y,this.max.z).transformByMat4(e),o[4].set(this.max.x,this.min.y,this.min.z).transformByMat4(e),o[5].set(this.max.x,this.min.y,this.max.z).transformByMat4(e),o[6].set(this.max.x,this.max.y,this.min.z).transformByMat4(e),o[7].set(this.max.x,this.max.y,this.max.z).transformByMat4(e),this.reset();for(var t=0,n=o.length;t<n;t++)this.addPoint(o[t]);return this}getBoundingSphere(e){var t=e||new i;return this.getCenter(t.center),t.radius=.5*this.size(a).length(),t}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}},{"./Sphere":50,"./Vec3":53}],47:[function(e,t,n){const r=e("./Math"),i=e("./Vec3");t.exports=class e{constructor(){this.data=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this._x,this._y,this._z,this._mat4,this._vec3}set(e,t,n,r,i,o,a,s,l,u,c,f,h,d,p,_){var b=this.data;return b[0]=e,b[4]=t,b[8]=n,b[12]=r,b[1]=i,b[5]=o,b[9]=a,b[13]=s,b[2]=l,b[6]=u,b[10]=c,b[14]=f,b[3]=h,b[7]=d,b[11]=p,b[15]=_,this}setFromArray(e){return this.data.set(e),this}makeIdentity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new e).copy(this)}copy(e){return this.data.set(e.data),this}rotateByEuler(e,t,n,r){r=r||"XYZ";var i,o,a,s,l,u,c,f,h,d,p,_,b=Math.cos(e),m=Math.sin(e),v=Math.cos(t),g=Math.sin(t),y=Math.cos(n),x=Math.sin(n),E=this.data;return"XYZ"===r?(l=b*y,u=b*x,c=m*y,f=m*x,E[0]=v*y,E[4]=-v*x,E[8]=g,E[1]=u+c*g,E[5]=l-f*g,E[9]=-m*v,E[2]=f-l*g,E[6]=c+u*g,E[10]=b*v):"YXZ"===r?(i=v*y,o=v*x,a=g*y,s=g*x,E[0]=i+s*m,E[4]=a*m-o,E[8]=b*g,E[1]=b*x,E[5]=b*y,E[9]=-m,E[2]=o*m-a,E[6]=s+i*m,E[10]=b*v):"ZXY"===r?(i=v*y,o=v*x,a=g*y,s=g*x,E[0]=i-s*m,E[4]=-b*x,E[8]=a+o*m,E[1]=o+a*m,E[5]=b*y,E[9]=s-i*m,E[2]=-b*g,E[6]=m,E[10]=b*v):"ZYX"===r?(l=b*y,u=b*x,c=m*y,f=m*x,E[0]=v*y,E[4]=c*g-u,E[8]=l*g+f,E[1]=v*x,E[5]=f*g+l,E[9]=u*g-c,E[2]=-g,E[6]=m*v,E[10]=b*v):"YZX"===r?(h=b*v,d=b*g,p=m*v,_=m*g,E[0]=v*y,E[4]=_-h*x,E[8]=p*x+d,E[1]=x,E[5]=b*y,E[9]=-m*y,E[2]=-g*y,E[6]=d*x+p,E[10]=h-_*x):"XZY"===r&&(h=b*v,d=b*g,p=m*v,_=m*g,E[0]=v*y,E[4]=-x,E[8]=g*y,E[1]=h*x+_,E[5]=b*y,E[9]=d*x-p,E[2]=p*x-d,E[6]=m*y,E[10]=_*x+h),E[3]=0,E[7]=0,E[11]=0,E[12]=0,E[13]=0,E[14]=0,E[15]=1,this}rotateByQuat(e){var t=this.data,n=e.x,r=e.y,i=e.z,o=e.w,a=n+n,s=r+r,l=i+i,u=n*a,c=n*s,f=n*l,h=r*s,d=r*l,p=i*l,_=o*a,b=o*s,m=o*l;return t[0]=1-(h+p),t[4]=c-m,t[8]=f+b,t[1]=c+m,t[5]=1-(u+p),t[9]=d-_,t[2]=f-b,t[6]=d+_,t[10]=1-(u+h),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}setFromMat3(e){var t=e.data;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}calcNormalMat3(e){return e.setFromMat4(this),e.calcInverse(e),e.transpose(),e}lookAt(e,t,n){void 0===this._x&&(this._x=new i),void 0===this._y&&(this._y=new i),void 0===this._z&&(this._z=new i);var r=this._x,o=this._y,a=this._z,s=this.data;return e.subTo(t,a).normalize(),0===a.squaredLength()&&(a.z=1),n.crossTo(a,r),0===r.squaredLength()&&(1===Math.abs(n.z)?a.x+=1e-4:a.z+=1e-4,a.normalize(),n.crossTo(a,r)),r.normalize(),a.crossTo(r,o),s[0]=r.x,s[4]=o.x,s[8]=a.x,s[1]=r.y,s[5]=o.y,s[9]=a.y,s[2]=r.z,s[6]=o.z,s[10]=a.z,this}getRawFrustum(){var e=this.data;if(0!==e[3]||0!==e[7]||-1!==e[11]||0!==e[15])throw Error("matrix cant getRawFrustum");var t=e[14]/(e[10]-1),n=e[14]/(1+e[10]);return{left:t*(e[8]-1)/e[0],right:t*(1+e[8])/e[0],top:t*(1+e[9])/e[5],bottom:t*(e[9]-1)/e[5],near:t,far:n}}buildByFrustum(e,t,n,r,i,o){var a=this.data,s=2*i/(t-e),l=2*i/(r-n),u=(t+e)/(t-e),c=(r+n)/(r-n),f=-(o+i)/(o-i),h=-2*o*i/(o-i);return a[0]=s,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=h,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}mul(e){return this.mulTo(e,this)}mulTo(e,t){var n=this.data,r=e.data,i=t.data,o=n[0],a=n[4],s=n[8],l=n[12],u=n[1],c=n[5],f=n[9],h=n[13],d=n[2],p=n[6],_=n[10],b=n[14],m=n[3],v=n[7],g=n[11],y=n[15],x=r[0],E=r[4],T=r[8],S=r[12],R=r[1],M=r[5],N=r[9],A=r[13],w=r[2],C=r[6],F=r[10],I=r[14],D=r[3],L=r[7],P=r[11],B=r[15];return i[0]=o*x+a*R+s*w+l*D,i[4]=o*E+a*M+s*C+l*L,i[8]=o*T+a*N+s*F+l*P,i[12]=o*S+a*A+s*I+l*B,i[1]=u*x+c*R+f*w+h*D,i[5]=u*E+c*M+f*C+h*L,i[9]=u*T+c*N+f*F+h*P,i[13]=u*S+c*A+f*I+h*B,i[2]=d*x+p*R+_*w+b*D,i[6]=d*E+p*M+_*C+b*L,i[10]=d*T+p*N+_*F+b*P,i[14]=d*S+p*A+_*I+b*B,i[3]=m*x+v*R+g*w+y*D,i[7]=m*E+v*M+g*C+y*L,i[11]=m*T+v*N+g*F+y*P,i[15]=m*S+v*A+g*I+y*B,t}scale(e){var t=this.data;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}mulScale(e){var t=this.data,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this}det(){var e=this.data,t=e[0],n=e[4],r=e[8],i=e[12],o=e[1],a=e[5],s=e[9],l=e[13],u=e[2],c=e[6],f=e[10],h=e[14];return e[3]*(+i*s*c-r*l*c-i*a*f+n*l*f+r*a*h-n*s*h)+e[7]*(+t*s*h-t*l*f+i*o*f-r*o*h+r*l*u-i*s*u)+e[11]*(+t*l*c-t*a*h-i*o*c+n*o*h+i*a*u-n*l*u)+e[15]*(-r*a*u-t*s*c+t*a*f+r*o*c-n*o*f+n*s*u)}transpose(){var e,t=this.data;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setTranslation(e){var t=this.data;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this}getTranslation(e){return e.x=this.data[12],e.y=this.data[13],e.z=this.data[14],e}getEulerRotation(e,t){e||(e=new i);var n,o,a,s=r.clamp,l=this.data,u=l[0],c=l[4],f=l[8],h=l[1],d=l[5],p=l[9],_=l[2],b=l[6],m=l[10];return"XYZ"===t?(o=Math.asin(s(f,-1,1)),Math.abs(f)<.99999?(n=Math.atan2(-p,m),a=Math.atan2(-c,u)):(n=Math.atan2(b,d),a=0)):"YXZ"===t?(n=Math.asin(-s(p,-1,1)),Math.abs(p)<.99999?(o=Math.atan2(f,m),a=Math.atan2(h,d)):(o=Math.atan2(-_,u),a=0)):"ZXY"===t?(n=Math.asin(s(b,-1,1)),Math.abs(b)<.99999?(o=Math.atan2(-_,m),a=Math.atan2(-c,d)):(o=0,a=Math.atan2(h,u))):"ZYX"===t?(o=Math.asin(-s(_,-1,1)),Math.abs(_)<.99999?(n=Math.atan2(b,m),a=Math.atan2(h,u)):(n=0,a=Math.atan2(-c,d))):"YZX"===t?(a=Math.asin(s(h,-1,1)),Math.abs(h)<.99999?(n=Math.atan2(-p,d),o=Math.atan2(-_,u)):(n=0,o=Math.atan2(f,m))):"XZY"===t&&(a=Math.asin(-s(c,-1,1)),Math.abs(c)<.99999?(n=Math.atan2(b,d),o=Math.atan2(f,u)):(n=Math.atan2(-p,m),o=0)),e.set(n,o,a),e}calcInverse(e){var t=e.data,n=this.data,r=n[0],i=n[1],o=n[2],a=n[3],s=n[4],l=n[5],u=n[6],c=n[7],f=n[8],h=n[9],d=n[10],p=n[11],_=n[12],b=n[13],m=n[14],v=n[15],g=h*m*c-b*d*c+b*u*p-l*m*p-h*u*v+l*d*v,y=_*d*c-f*m*c-_*u*p+s*m*p+f*u*v-s*d*v,x=f*b*c-_*h*c+_*l*p-s*b*p-f*l*v+s*h*v,E=_*h*u-f*b*u-_*l*d+s*b*d+f*l*m-s*h*m,T=r*g+i*y+o*x+a*E;if(0===T){return window.window.console.warn("Mat4.calcInverse: det is 0"),this.makeIdentity()}return t[0]=g,t[1]=b*d*a-h*m*a-b*o*p+i*m*p+h*o*v-i*d*v,t[2]=l*m*a-b*u*a+b*o*c-i*m*c-l*o*v+i*u*v,t[3]=h*u*a-l*d*a-h*o*c+i*d*c+l*o*p-i*u*p,t[4]=y,t[5]=f*m*a-_*d*a+_*o*p-r*m*p-f*o*v+r*d*v,t[6]=_*u*a-s*m*a-_*o*c+r*m*c+s*o*v-r*u*v,t[7]=s*d*a-f*u*a+f*o*c-r*d*c-s*o*p+r*u*p,t[8]=x,t[9]=_*h*a-f*b*a-_*i*p+r*b*p+f*i*v-r*h*v,t[10]=s*b*a-_*l*a+_*i*c-r*b*c-s*i*v+r*l*v,t[11]=f*l*a-s*h*a-f*i*c+r*h*c+s*i*p-r*l*p,t[12]=E,t[13]=f*b*o-_*h*o+_*i*d-r*b*d-f*i*m+r*h*m,t[14]=_*l*o-s*b*o-_*i*u+r*b*u+s*i*m-r*l*m,t[15]=s*h*o-f*l*o+f*i*u-r*h*u-s*i*d+r*l*d,e.scale(1/T)}rotateX(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}rotateY(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}rotateZ(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}rotateByAxisRadian(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,o=e.x,a=e.y,s=e.z,l=i*o,u=i*a;return this.set(l*o+n,l*a-r*s,l*s+r*a,0,l*a+r*s,u*a+n,u*s-r*o,0,l*s-r*a,u*s+r*o,i*s*s+n,0,0,0,0,1),this}compose(e,t,n){return this.rotateByQuat(t),this.mulScale(n),this.setTranslation(e),this}decompose(t,n,r){void 0===this._vec3&&(this._vec3=new i),void 0===this._mat4&&(this._mat4=new e);var o=this._vec3,a=this._mat4,s=this.data,l=o.set(s[0],s[1],s[2]).length(),u=o.set(s[4],s[5],s[6]).length(),c=o.set(s[8],s[9],s[10]).length();this.det()<0&&(l=-l),t.x=s[12],t.y=s[13],t.z=s[14],a.data.set(this.data);var f=1/l,h=1/u,d=1/c;return a.data[0]*=f,a.data[1]*=f,a.data[2]*=f,a.data[4]*=h,a.data[5]*=h,a.data[6]*=h,a.data[8]*=d,a.data[9]*=d,a.data[10]*=d,n.buildByMat(a),r.x=l,r.y=u,r.z=c,this}buildPerspective(e,t,n,i){var o=n*Math.tan(r.deg2Rad(.5*e)),a=-o,s=a*t,l=o*t;return this.buildByFrustum(s,l,a,o,n,i)}buildOrtho(e,t,n,r,i,o){var a=this.data,s=1/(t-e),l=1/(n-r),u=1/(o-i),c=(t+e)*s,f=(n+r)*l,h=(o+i)*u;return a[0]=2*s,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-h,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){for(var t=this.data,n=e.data,r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}}},{"./Math":48,"./Vec3":53}],48:[function(e,t,n){const r=e("./Vec3");var i={guid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))},log2:function(e){return Math.log(e)/Math.log(2)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},rand:function(e,t){return e+Math.random()*(t-e)},randVec3:function(e,t){return new r(this.rand(e,t),this.rand(e,t),this.rand(e,t))},flip:function(){return Math.random()>=.5},randFloat:function(e,t){return e+Math.random()*(t-e)},deg2Rad:function(e){return e*Math.PI/180},rad2Deg:function(e){return 180*e/Math.PI},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},mix:function(e,t,n){return e*(1-n)+t*n},hash:function(e){var t=0;if(0===e.length)return t;for(var n=0;n<e.length;n++){t=(t<<5)-t+e.charCodeAt(n),t&=t}return t},smoothStep:function(e,t,n){if(n<=e)return 0;if(n>=t)return 1;var r=(n-e)/(t-e);return r*r*(3-2*r)}};t.exports=i},{"./Vec3":53}],49:[function(e,t,n){const r=e("./Vec3");var i=new r;t.exports=class e{constructor(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setFromArray(e){return this.x=e[0],this.y=e[1],this.z=e[2],this.w=e[3],this}clone(){return new e(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}conjugate(){return this.x*=-1,this.y*=-1,this.z*=-1,this}invert(){return this.conjugate().normalize()}buildByFromToVectors(e,t){void 0===i&&(i=new r);var n=e.dot(t)+1;return n<1e-6?(n=0,Math.abs(e.x)>Math.abs(e.z)?i.set(-e.y,e.x,0):i.set(0,-e.z,e.y)):e.crossTo(t,i),this._x=i.x,this._y=i.y,this._z=i.z,this._w=n,this.normalize()}buildByEuler(e,t,n,r){var i=Math.cos(e/2),o=Math.cos(t/2),a=Math.cos(n/2),s=Math.sin(e/2),l=Math.sin(t/2),u=Math.sin(n/2);return"XYZ"===(r=r||"XZY")?(this.x=s*o*a+i*l*u,this.y=i*l*a-s*o*u,this.z=i*o*u+s*l*a,this.w=i*o*a-s*l*u):"YXZ"===r?(this.x=s*o*a+i*l*u,this.y=i*l*a-s*o*u,this.z=i*o*u-s*l*a,this.w=i*o*a+s*l*u):"ZXY"===r?(this.x=s*o*a-i*l*u,this.y=i*l*a+s*o*u,this.z=i*o*u+s*l*a,this.w=i*o*a-s*l*u):"ZYX"===r?(this.x=s*o*a-i*l*u,this.y=i*l*a+s*o*u,this.z=i*o*u-s*l*a,this.w=i*o*a+s*l*u):"YZX"===r?(this.x=s*o*a+i*l*u,this.y=i*l*a+s*o*u,this.z=i*o*u-s*l*a,this.w=i*o*a-s*l*u):"XZY"===r&&(this.x=s*o*a-i*l*u,this.y=i*l*a-s*o*u,this.z=i*o*u+s*l*a,this.w=i*o*a+s*l*u),this}buildByAxisRadian(e,t){var n=t/2,r=Math.sin(n);return this.x=e.x*r,this.y=e.y*r,this.z=e.z*r,this.w=Math.cos(n),this}buildByMat(e){var t,n=e.data,r=n[0],i=n[4],o=n[8],a=n[1],s=n[5],l=n[9],u=n[2],c=n[6],f=n[10],h=r+s+f;return h>0?(t=.5/Math.sqrt(h+1),this.w=.25/t,this.x=(c-l)*t,this.y=(o-u)*t,this.z=(a-i)*t):r>s&&r>f?(t=2*Math.sqrt(1+r-s-f),this.w=(c-l)/t,this.x=.25*t,this.y=(i+a)/t,this.z=(o+u)/t):s>f?(t=2*Math.sqrt(1+s-r-f),this.w=(o-u)/t,this.x=(i+a)/t,this.y=.25*t,this.z=(l+c)/t):(t=2*Math.sqrt(1+f-r-s),this.w=(a-i)/t,this.x=(o+u)/t,this.y=(l+c)/t,this.z=.25*t),this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}squaredLength(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}normalize(){var e=this.length();return 0===e?(this.x=this.y=this.z=0,this.w=1):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}mul(e){return this.mulTo(e,this)}mulTo(e,t){var n=this.x,r=this.y,i=this.z,o=this.w,a=e.x,s=e.y,l=e.z,u=e.w;return t.x=n*u+o*a+r*l-i*s,t.y=r*u+o*s+i*a-n*l,t.z=i*u+o*l+n*s-r*a,t.w=o*u-n*a-r*s-i*l,t}transformVector(e,t){void 0===t&&(t=new r);var n=e.x,i=e.y,o=e.z,a=this.x,s=this.y,l=this.z,u=this.w,c=u*n+s*o-l*i,f=u*i+l*n-a*o,h=u*o+a*i-s*n,d=-a*n-s*i-l*o;return t.x=c*u+d*-a+f*-l-h*-s,t.y=f*u+d*-s+h*-a-c*-l,t.z=h*u+d*-l+c*-s-f*-a,t}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this.x,r=this.y,i=this.z,o=this.w,a=o*e.w+n*e.x+r*e.y+i*e.z;if(a<0?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,a=-a):this.copy(e),a>=1)return this.w=o,this.x=n,this.y=r,this.z=i,this;var s=Math.sqrt(1-a*a);if(Math.abs(s)<.001)return this.w=.5*(o+this.w),this.x=.5*(n+this.x),this.y=.5*(r+this.y),this.z=.5*(i+this.z),this;var l=Math.atan2(s,a),u=Math.sin((1-t)*l)/s,c=Math.sin(t*l)/s;return this.w=o*u+this.w*c,this.x=n*u+this.x*c,this.y=r*u+this.y*c,this.z=i*u+this.z*c,this}slerp2(e,t,n){var r,i,o,a,s,l,u,c;r=e.x,i=e.y,o=e.z,a=e.w,s=t.x,l=t.y,u=t.z;var f=a*(c=t.w)+r*s+i*l+o*u;if(f<0&&(c=-c,s=-s,l=-l,u=-u,f=-f),Math.abs(f)>=1)return this.w=a,this.x=r,this.y=i,this.z=o,this;var h=Math.acos(f),d=Math.sqrt(1-f*f);if(Math.abs(d)<.001)return this.w=.5*a+.5*c,this.x=.5*r+.5*s,this.y=.5*i+.5*l,this.z=.5*o+.5*u,this;var p=Math.sin((1-n)*h)/d,_=Math.sin(n*h)/d;return this.w=a*p+c*_,this.x=r*p+s*_,this.y=i*p+l*_,this.z=o*p+u*_,this}nlerp(e,t,n){var r,i,o,a,s,l,u,c;r=e.x,i=e.y,o=e.z,a=e.w,s=t.x,l=t.y,u=t.z;var f=1-n;return a*(c=t.w)+r*s+i*l+o*u<0?(this.x=r*f-s*n,this.y=i*f-l*n,this.z=o*f-u*n,this.w=a*f-c*n):(this.x=r*f+s*n,this.y=i*f+l*n,this.z=o*f+u*n,this.w=a*f+c*n),this.normalize(),this}equals(e){return e.x===this.x&&e.x===this.y&&e.z===this.z&&e.w===this.w}toArray(){return[this.x,this.y,this.z,this.w]}toString(){return[this.x,this.y,this.z,this.w].join(",")}}},{"./Vec3":53}],50:[function(e,t,n){const r=e("./Vec3");t.exports=class{constructor(e,t){this.center=void 0!==e?e:new r,this.radius=void 0!==t?t:0}reset(){this.radius=0}set(e,t){return this.center.copy(e),this.radius=t,this}clone(){return(new this.constructor).copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}empty(){return this.radius<=0}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}},{"./Vec3":53}],51:[function(e,t,n){const r=e("./Math");t.exports=class{constructor(e,t,n){this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==n?n:0}set(e,t,n){this.radius=e,this.phi=t,this.theta=n}clone(){return(new this).copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){var e=1e-6;this.phi=Math.max(e,Math.min(Math.PI-e,this.phi))}setFromVec3(e){return this.radius=e.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(r.clamp(e.y/this.radius,-1,1))),this}}},{"./Math":48}],52:[function(e,t,n){t.exports=class e{constructor(e,t){this.x=e||0,this.y=t||0}set(e,t){return this.x=e,this.y=t,this}setFromArray(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this}clone(){return(new e).copy(this)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subTo(e,t){return t.x=this.x-e.x,t.y=this.y-e.y,t}multiply(e){return this.x*=e.x,this.y*=e.y,this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}squaredLength(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}scale(e){return this.x*=e,this.y*=e,this}squaredDistance(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n}normalize(){return this.scale(1/this.length())}equals(e){return e.x===this.x&&e.y===this.y}transformByMat3(e){var t=this.x,n=this.y,r=e.data;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}}},{}],53:[function(e,t,n){var r;class i{constructor(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}set(e,t,n){return this.x=e,this.y=t,this.z=n,this}clone(){return(new i).copy(this)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addTo(e,t){return t.x=this.x+e.x,t.y=this.y+e.y,t.z=this.z+e.z,t}buildFromSpherical(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this}projectToPlane(e){return void 0===r&&(r=new i),r.copy(e.normal),this.sub(r.scale(this.dot(r))),this}applyProjection(e){var t=this.x,n=this.y,r=this.z,i=e.data,o=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*o,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*o,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*o,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subTo(e,t){return t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z,t}scale(e){return this.x*=e,this.y*=e,this.z*=e,this}transformByMat3(e){var t=this.x,n=this.y,r=this.z,i=e.data;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this}transformByMat4(e){var t=this.x,n=this.y,r=this.z,i=e.data;return this.x=i[0]*t+i[4]*n+i[8]*r+i[12],this.y=i[1]*t+i[5]*n+i[9]*r+i[13],this.z=i[2]*t+i[6]*n+i[10]*r+i[14],this}transformByMat4To(e,t){var n=this.x,r=this.y,i=this.z,o=e.data;t.x=o[0]*n+o[4]*r+o[8]*i+o[12],t.y=o[1]*n+o[5]*r+o[9]*i+o[13],t.z=o[2]*n+o[6]*r+o[10]*i+o[14]}transformByQuat(e){var t=this.x,n=this.y,r=this.z,i=e.x,o=e.y,a=e.z,s=e.w,l=s*t+o*r-a*n,u=s*n+a*t-i*r,c=s*r+i*n-o*t,f=-i*t-o*n-a*r;return this.x=l*s+f*-i+u*-a-c*-o,this.y=u*s+f*-o+c*-i-l*-a,this.z=c*s+f*-a+l*-o-u*-i,this}setFromArray(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}setFromMat4Column(e,t){return this.setFromArray(e.data,4*t)}inverse(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}mul(e){return this.x=this.x*e.x,this.y=this.y*e.y,this.z=this.z*e.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}squaredLength(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}normalize(){return this.scale(1/this.length())}setLength(e){return this.scale(e/this.length())}mixBy(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}mix2(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){var t=this.x,n=this.y,r=this.z;return this.x=n*e.z-r*e.y,this.y=r*e.x-t*e.z,this.z=t*e.y-n*e.x,this}crossTo(e,t){var n=this.x,r=this.y,i=this.z,o=e.x,a=e.y,s=e.z;return t.x=r*s-i*a,t.y=i*o-n*s,t.z=n*a-r*o,t}distance(e){return Math.sqrt(this.squaredDistance(e))}distanceToPlane(e){return this.dot(e.normal)+e.distanceToOrigin}squaredDistance(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}}i.One=function(){return new i(1,1,1)},i.Zero=function(){return new i(0,0,0)},i.AxisZ=function(){return new i(0,0,1)},i.AxisX=function(){return new i(1,0,0)},i.AxisY=function(){return new i(0,1,0)},t.exports=i},{}],54:[function(e,t,n){t.exports=class e{constructor(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0===r?1:r}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}clone(){return(new e).copy(this)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}scale(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}}},{}],55:[function(e,t,n){
/*! Hammer.JS - v2.0.17-rc - 2019-12-16
 * http://naver.github.io/egjs
 *
 * Forked By Naver egjs
 * Copyright (c) hammerjs
 * Licensed under the MIT license */
!function(e,r){"object"==typeof n&&void 0!==t?t.exports=r():"function"==typeof define&&define.amd?define(r):e.Hammer=r()}(this,(function(){"use strict";function e(){return(e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function t(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function n(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var r,i="function"!=typeof Object.assign?function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),n=1;n<arguments.length;n++){var r=arguments[n];if(null!=r)for(var i in r)r.hasOwnProperty(i)&&(t[i]=r[i])}return t}:Object.assign,o=["","webkit","Moz","MS","ms","o"],a="undefined"==typeof document?{style:{}}:document.createElement("div"),s=Math.round,l=Math.abs,u=Date.now;function c(e,t){for(var n,r,i=t[0].toUpperCase()+t.slice(1),a=0;a<o.length;){if((r=(n=o[a])?n+i:t)in e)return r;a++}}r="undefined"==typeof window?{}:window;var f=c(a.style,"touchAction"),h=void 0!==f;var d="compute",p="auto",_="manipulation",b="none",m="pan-x",v="pan-y",g=function(){if(!h)return!1;var e={},t=r.CSS&&r.CSS.supports;return["auto","manipulation","pan-y","pan-x","pan-x pan-y","none"].forEach((function(n){return e[n]=!t||r.CSS.supports("touch-action",n)})),e}(),y="ontouchstart"in r,x=void 0!==c(r,"PointerEvent"),E=y&&/mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),T="touch",S="mouse",R=16,M=24,N=["x","y"],A=["clientX","clientY"];function w(e,t,n){var r;if(e)if(e.forEach)e.forEach(t,n);else if(void 0!==e.length)for(r=0;r<e.length;)t.call(n,e[r],r,e),r++;else for(r in e)e.hasOwnProperty(r)&&t.call(n,e[r],r,e)}function C(e,t){return"function"==typeof e?e.apply(t&&t[0]||void 0,t):e}function F(e,t){return e.indexOf(t)>-1}var I=function(){function e(e,t){this.manager=e,this.set(t)}var t=e.prototype;return t.set=function(e){e===d&&(e=this.compute()),h&&this.manager.element.style&&g[e]&&(this.manager.element.style[f]=e),this.actions=e.toLowerCase().trim()},t.update=function(){this.set(this.manager.options.touchAction)},t.compute=function(){var e=[];return w(this.manager.recognizers,(function(t){C(t.options.enable,[t])&&(e=e.concat(t.getTouchAction()))})),function(e){if(F(e,b))return b;var t=F(e,m),n=F(e,v);return t&&n?b:t||n?t?m:v:F(e,_)?_:p}(e.join(" "))},t.preventDefaults=function(e){var t=e.srcEvent,n=e.offsetDirection;if(this.manager.session.prevented)t.preventDefault();else{var r=this.actions,i=F(r,b)&&!g.none,o=F(r,v)&&!g["pan-y"],a=F(r,m)&&!g["pan-x"];if(i){var s=1===e.pointers.length,l=e.distance<2,u=e.deltaTime<250;if(s&&l&&u)return}if(!a||!o)return i||o&&6&n||a&&n&M?this.preventSrc(t):void 0}},t.preventSrc=function(e){this.manager.session.prevented=!0,e.preventDefault()},e}();function D(e,t){for(;e;){if(e===t)return!0;e=e.parentNode}return!1}function L(e){var t=e.length;if(1===t)return{x:s(e[0].clientX),y:s(e[0].clientY)};for(var n=0,r=0,i=0;i<t;)n+=e[i].clientX,r+=e[i].clientY,i++;return{x:s(n/t),y:s(r/t)}}function P(e){for(var t=[],n=0;n<e.pointers.length;)t[n]={clientX:s(e.pointers[n].clientX),clientY:s(e.pointers[n].clientY)},n++;return{timeStamp:u(),pointers:t,center:L(t),deltaX:e.deltaX,deltaY:e.deltaY}}function B(e,t,n){n||(n=N);var r=t[n[0]]-e[n[0]],i=t[n[1]]-e[n[1]];return Math.sqrt(r*r+i*i)}function U(e,t,n){n||(n=N);var r=t[n[0]]-e[n[0]],i=t[n[1]]-e[n[1]];return 180*Math.atan2(i,r)/Math.PI}function O(e,t){return e===t?1:l(e)>=l(t)?e<0?2:4:t<0?8:R}function V(e,t,n){return{x:t/e||0,y:n/e||0}}function z(e,t){var n=e.session,r=t.pointers,i=r.length;n.firstInput||(n.firstInput=P(t)),i>1&&!n.firstMultiple?n.firstMultiple=P(t):1===i&&(n.firstMultiple=!1);var o=n.firstInput,a=n.firstMultiple,s=a?a.center:o.center,c=t.center=L(r);t.timeStamp=u(),t.deltaTime=t.timeStamp-o.timeStamp,t.angle=U(s,c),t.distance=B(s,c),function(e,t){var n=t.center,r=e.offsetDelta||{},i=e.prevDelta||{},o=e.prevInput||{};1!==t.eventType&&4!==o.eventType||(i=e.prevDelta={x:o.deltaX||0,y:o.deltaY||0},r=e.offsetDelta={x:n.x,y:n.y}),t.deltaX=i.x+(n.x-r.x),t.deltaY=i.y+(n.y-r.y)}(n,t),t.offsetDirection=O(t.deltaX,t.deltaY);var f,h,d=V(t.deltaTime,t.deltaX,t.deltaY);t.overallVelocityX=d.x,t.overallVelocityY=d.y,t.overallVelocity=l(d.x)>l(d.y)?d.x:d.y,t.scale=a?(f=a.pointers,B((h=r)[0],h[1],A)/B(f[0],f[1],A)):1,t.rotation=a?function(e,t){return U(t[1],t[0],A)+U(e[1],e[0],A)}(a.pointers,r):0,t.maxPointers=n.prevInput?t.pointers.length>n.prevInput.maxPointers?t.pointers.length:n.prevInput.maxPointers:t.pointers.length,function(e,t){var n,r,i,o,a=e.lastInterval||t,s=t.timeStamp-a.timeStamp;if(8!==t.eventType&&(s>25||void 0===a.velocity)){var u=t.deltaX-a.deltaX,c=t.deltaY-a.deltaY,f=V(s,u,c);r=f.x,i=f.y,n=l(f.x)>l(f.y)?f.x:f.y,o=O(u,c),e.lastInterval=t}else n=a.velocity,r=a.velocityX,i=a.velocityY,o=a.direction;t.velocity=n,t.velocityX=r,t.velocityY=i,t.direction=o}(n,t);var p,_=e.element,b=t.srcEvent;D(p=b.composedPath?b.composedPath()[0]:b.path?b.path[0]:b.target,_)&&(_=p),t.target=_}function G(e,t,n){var r=n.pointers.length,i=n.changedPointers.length,o=1&t&&r-i==0,a=12&t&&r-i==0;n.isFirst=!!o,n.isFinal=!!a,o&&(e.session={}),n.eventType=t,z(e,n),e.emit("hammer.input",n),e.recognize(n),e.session.prevInput=n}function W(e){return e.trim().split(/\s+/g)}function k(e,t,n){w(W(t),(function(t){e.addEventListener(t,n,!1)}))}function X(e,t,n){w(W(t),(function(t){e.removeEventListener(t,n,!1)}))}function H(e){var t=e.ownerDocument||e;return t.defaultView||t.parentWindow||window}var j=function(){function e(e,t){var n=this;this.manager=e,this.callback=t,this.element=e.element,this.target=e.options.inputTarget,this.domHandler=function(t){C(e.options.enable,[e])&&n.handler(t)},this.init()}var t=e.prototype;return t.handler=function(){},t.init=function(){this.evEl&&k(this.element,this.evEl,this.domHandler),this.evTarget&&k(this.target,this.evTarget,this.domHandler),this.evWin&&k(H(this.element),this.evWin,this.domHandler)},t.destroy=function(){this.evEl&&X(this.element,this.evEl,this.domHandler),this.evTarget&&X(this.target,this.evTarget,this.domHandler),this.evWin&&X(H(this.element),this.evWin,this.domHandler)},e}();function Y(e,t,n){if(e.indexOf&&!n)return e.indexOf(t);for(var r=0;r<e.length;){if(n&&e[r][n]==t||!n&&e[r]===t)return r;r++}return-1}var q={pointerdown:1,pointermove:2,pointerup:4,pointercancel:8,pointerout:8},Z={2:T,3:"pen",4:S,5:"kinect"},$="pointerdown",K="pointermove pointerup pointercancel";r.MSPointerEvent&&!r.PointerEvent&&($="MSPointerDown",K="MSPointerMove MSPointerUp MSPointerCancel");var Q=function(e){function n(){var t,r=n.prototype;return r.evEl=$,r.evWin=K,(t=e.apply(this,arguments)||this).store=t.manager.session.pointerEvents=[],t}return t(n,e),n.prototype.handler=function(e){var t=this.store,n=!1,r=e.type.toLowerCase().replace("ms",""),i=q[r],o=Z[e.pointerType]||e.pointerType,a=o===T,s=Y(t,e.pointerId,"pointerId");1&i&&(0===e.button||a)?s<0&&(t.push(e),s=t.length-1):12&i&&(n=!0),s<0||(t[s]=e,this.callback(this.manager,i,{pointers:t,changedPointers:[e],pointerType:o,srcEvent:e}),n&&t.splice(s,1))},n}(j);function J(e){return Array.prototype.slice.call(e,0)}function ee(e,t,n){for(var r=[],i=[],o=0;o<e.length;){var a=t?e[o][t]:e[o];Y(i,a)<0&&r.push(e[o]),i[o]=a,o++}return n&&(r=t?r.sort((function(e,n){return e[t]>n[t]})):r.sort()),r}var te={touchstart:1,touchmove:2,touchend:4,touchcancel:8},ne="touchstart touchmove touchend touchcancel",re=function(e){function n(){var t;return n.prototype.evTarget=ne,(t=e.apply(this,arguments)||this).targetIds={},t}return t(n,e),n.prototype.handler=function(e){var t=te[e.type],n=ie.call(this,e,t);n&&this.callback(this.manager,t,{pointers:n[0],changedPointers:n[1],pointerType:T,srcEvent:e})},n}(j);function ie(e,t){var n,r,i=J(e.touches),o=this.targetIds;if(3&t&&1===i.length)return o[i[0].identifier]=!0,[i,i];var a=J(e.changedTouches),s=[],l=this.target;if(r=i.filter((function(e){return D(e.target,l)})),1===t)for(n=0;n<r.length;)o[r[n].identifier]=!0,n++;for(n=0;n<a.length;)o[a[n].identifier]&&s.push(a[n]),12&t&&delete o[a[n].identifier],n++;return s.length?[ee(r.concat(s),"identifier",!0),s]:void 0}var oe={mousedown:1,mousemove:2,mouseup:4},ae="mousedown",se="mousemove mouseup",le=function(e){function n(){var t,r=n.prototype;return r.evEl=ae,r.evWin=se,(t=e.apply(this,arguments)||this).pressed=!1,t}return t(n,e),n.prototype.handler=function(e){var t=oe[e.type];1&t&&0===e.button&&(this.pressed=!0),2&t&&1!==e.which&&(t=4),this.pressed&&(4&t&&(this.pressed=!1),this.callback(this.manager,t,{pointers:[e],changedPointers:[e],pointerType:S,srcEvent:e}))},n}(j);function ue(e){var t=e.changedPointers[0];if(t.identifier===this.primaryTouch){var n={x:t.clientX,y:t.clientY},r=this.lastTouches;this.lastTouches.push(n);setTimeout((function(){var e=r.indexOf(n);e>-1&&r.splice(e,1)}),2500)}}function ce(e,t){1&e?(this.primaryTouch=t.changedPointers[0].identifier,ue.call(this,t)):12&e&&ue.call(this,t)}function fe(e){for(var t=e.srcEvent.clientX,n=e.srcEvent.clientY,r=0;r<this.lastTouches.length;r++){var i=this.lastTouches[r],o=Math.abs(t-i.x),a=Math.abs(n-i.y);if(o<=25&&a<=25)return!0}return!1}var he=function(){return function(e){function r(t,r){var i;return(i=e.call(this,t,r)||this).handler=function(e,t,r){var o=r.pointerType===T,a=r.pointerType===S;if(!(a&&r.sourceCapabilities&&r.sourceCapabilities.firesTouchEvents)){if(o)ce.call(n(n(i)),t,r);else if(a&&fe.call(n(n(i)),r))return;i.callback(e,t,r)}},i.touch=new re(i.manager,i.handler),i.mouse=new le(i.manager,i.handler),i.primaryTouch=null,i.lastTouches=[],i}return t(r,e),r.prototype.destroy=function(){this.touch.destroy(),this.mouse.destroy()},r}(j)}();function de(e,t,n){return!!Array.isArray(e)&&(w(e,n[t],n),!0)}var pe=32,_e=1;function be(e,t){var n=t.manager;return n?n.get(e):e}function me(e){return 16&e?"cancel":8&e?"end":4&e?"move":2&e?"start":""}var ve=function(){function t(t){void 0===t&&(t={}),this.options=e({enable:!0},t),this.id=_e++,this.manager=null,this.state=1,this.simultaneous={},this.requireFail=[]}var n=t.prototype;return n.set=function(e){return i(this.options,e),this.manager&&this.manager.touchAction.update(),this},n.recognizeWith=function(e){if(de(e,"recognizeWith",this))return this;var t=this.simultaneous;return t[(e=be(e,this)).id]||(t[e.id]=e,e.recognizeWith(this)),this},n.dropRecognizeWith=function(e){return de(e,"dropRecognizeWith",this)||(e=be(e,this),delete this.simultaneous[e.id]),this},n.requireFailure=function(e){if(de(e,"requireFailure",this))return this;var t=this.requireFail;return-1===Y(t,e=be(e,this))&&(t.push(e),e.requireFailure(this)),this},n.dropRequireFailure=function(e){if(de(e,"dropRequireFailure",this))return this;e=be(e,this);var t=Y(this.requireFail,e);return t>-1&&this.requireFail.splice(t,1),this},n.hasRequireFailures=function(){return this.requireFail.length>0},n.canRecognizeWith=function(e){return!!this.simultaneous[e.id]},n.emit=function(e){var t=this,n=this.state;function r(n){t.manager.emit(n,e)}n<8&&r(t.options.event+me(n)),r(t.options.event),e.additionalEvent&&r(e.additionalEvent),n>=8&&r(t.options.event+me(n))},n.tryEmit=function(e){if(this.canEmit())return this.emit(e);this.state=pe},n.canEmit=function(){for(var e=0;e<this.requireFail.length;){if(!(33&this.requireFail[e].state))return!1;e++}return!0},n.recognize=function(e){var t=i({},e);if(!C(this.options.enable,[this,t]))return this.reset(),void(this.state=pe);56&this.state&&(this.state=1),this.state=this.process(t),30&this.state&&this.tryEmit(t)},n.process=function(e){},n.getTouchAction=function(){},n.reset=function(){},t}(),ge=function(n){function r(t){var r;return void 0===t&&(t={}),(r=n.call(this,e({event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},t))||this).pTime=!1,r.pCenter=!1,r._timer=null,r._input=null,r.count=0,r}t(r,n);var i=r.prototype;return i.getTouchAction=function(){return[_]},i.process=function(e){var t=this,n=this.options,r=e.pointers.length===n.pointers,i=e.distance<n.threshold,o=e.deltaTime<n.time;if(this.reset(),1&e.eventType&&0===this.count)return this.failTimeout();if(i&&o&&r){if(4!==e.eventType)return this.failTimeout();var a=!this.pTime||e.timeStamp-this.pTime<n.interval,s=!this.pCenter||B(this.pCenter,e.center)<n.posThreshold;if(this.pTime=e.timeStamp,this.pCenter=e.center,s&&a?this.count+=1:this.count=1,this._input=e,0===this.count%n.taps)return this.hasRequireFailures()?(this._timer=setTimeout((function(){t.state=8,t.tryEmit()}),n.interval),2):8}return pe},i.failTimeout=function(){var e=this;return this._timer=setTimeout((function(){e.state=pe}),this.options.interval),pe},i.reset=function(){clearTimeout(this._timer)},i.emit=function(){8===this.state&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))},r}(ve),ye=function(n){function r(t){return void 0===t&&(t={}),n.call(this,e({pointers:1},t))||this}t(r,n);var i=r.prototype;return i.attrTest=function(e){var t=this.options.pointers;return 0===t||e.pointers.length===t},i.process=function(e){var t=this.state,n=e.eventType,r=6&t,i=this.attrTest(e);return r&&(8&n||!i)?16|t:r||i?4&n?8|t:2&t?4|t:2:pe},r}(ve);function xe(e){return e===R?"down":8===e?"up":2===e?"left":4===e?"right":""}var Ee=function(n){function r(t){var r;return void 0===t&&(t={}),(r=n.call(this,e({event:"pan",threshold:10,pointers:1,direction:30},t))||this).pX=null,r.pY=null,r}t(r,n);var i=r.prototype;return i.getTouchAction=function(){var e=this.options.direction,t=[];return 6&e&&t.push(v),e&M&&t.push(m),t},i.directionTest=function(e){var t=this.options,n=!0,r=e.distance,i=e.direction,o=e.deltaX,a=e.deltaY;return i&t.direction||(6&t.direction?(i=0===o?1:o<0?2:4,n=o!==this.pX,r=Math.abs(e.deltaX)):(i=0===a?1:a<0?8:R,n=a!==this.pY,r=Math.abs(e.deltaY))),e.direction=i,n&&r>t.threshold&&i&t.direction},i.attrTest=function(e){return ye.prototype.attrTest.call(this,e)&&(2&this.state||!(2&this.state)&&this.directionTest(e))},i.emit=function(e){this.pX=e.deltaX,this.pY=e.deltaY;var t=xe(e.direction);t&&(e.additionalEvent=this.options.event+t),n.prototype.emit.call(this,e)},r}(ye),Te=function(n){function r(t){return void 0===t&&(t={}),n.call(this,e({event:"swipe",threshold:10,velocity:.3,direction:30,pointers:1},t))||this}t(r,n);var i=r.prototype;return i.getTouchAction=function(){return Ee.prototype.getTouchAction.call(this)},i.attrTest=function(e){var t,r=this.options.direction;return 30&r?t=e.overallVelocity:6&r?t=e.overallVelocityX:r&M&&(t=e.overallVelocityY),n.prototype.attrTest.call(this,e)&&r&e.offsetDirection&&e.distance>this.options.threshold&&e.maxPointers===this.options.pointers&&l(t)>this.options.velocity&&4&e.eventType},i.emit=function(e){var t=xe(e.offsetDirection);t&&this.manager.emit(this.options.event+t,e),this.manager.emit(this.options.event,e)},r}(ye),Se=function(n){function r(t){return void 0===t&&(t={}),n.call(this,e({event:"pinch",threshold:0,pointers:2},t))||this}t(r,n);var i=r.prototype;return i.getTouchAction=function(){return[b]},i.attrTest=function(e){return n.prototype.attrTest.call(this,e)&&(Math.abs(e.scale-1)>this.options.threshold||2&this.state)},i.emit=function(e){if(1!==e.scale){var t=e.scale<1?"in":"out";e.additionalEvent=this.options.event+t}n.prototype.emit.call(this,e)},r}(ye),Re=function(n){function r(t){return void 0===t&&(t={}),n.call(this,e({event:"rotate",threshold:0,pointers:2},t))||this}t(r,n);var i=r.prototype;return i.getTouchAction=function(){return[b]},i.attrTest=function(e){return n.prototype.attrTest.call(this,e)&&(Math.abs(e.rotation)>this.options.threshold||2&this.state)},r}(ye),Me=function(n){function r(t){var r;return void 0===t&&(t={}),(r=n.call(this,e({event:"press",pointers:1,time:251,threshold:9},t))||this)._timer=null,r._input=null,r}t(r,n);var i=r.prototype;return i.getTouchAction=function(){return[p]},i.process=function(e){var t=this,n=this.options,r=e.pointers.length===n.pointers,i=e.distance<n.threshold,o=e.deltaTime>n.time;if(this._input=e,!i||!r||12&e.eventType&&!o)this.reset();else if(1&e.eventType)this.reset(),this._timer=setTimeout((function(){t.state=8,t.tryEmit()}),n.time);else if(4&e.eventType)return 8;return pe},i.reset=function(){clearTimeout(this._timer)},i.emit=function(e){8===this.state&&(e&&4&e.eventType?this.manager.emit(this.options.event+"up",e):(this._input.timeStamp=u(),this.manager.emit(this.options.event,this._input)))},r}(ve),Ne={domEvents:!1,touchAction:d,enable:!0,inputTarget:null,inputClass:null,cssProps:{userSelect:"none",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}},Ae=[[Re,{enable:!1}],[Se,{enable:!1},["rotate"]],[Te,{direction:6}],[Ee,{direction:6},["swipe"]],[ge],[ge,{event:"doubletap",taps:2},["tap"]],[Me]];function we(e,t){var n,r=e.element;r.style&&(w(e.options.cssProps,(function(i,o){n=c(r.style,o),t?(e.oldCssProps[n]=r.style[n],r.style[n]=i):r.style[n]=e.oldCssProps[n]||""})),t||(e.oldCssProps={}))}var Ce=function(){function e(e,t){var n,r=this;this.options=i({},Ne,t||{}),this.options.inputTarget=this.options.inputTarget||e,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=e,this.input=new((n=this).options.inputClass||(x?Q:E?re:y?he:le))(n,G),this.touchAction=new I(this,this.options.touchAction),we(this,!0),w(this.options.recognizers,(function(e){var t=r.add(new e[0](e[1]));e[2]&&t.recognizeWith(e[2]),e[3]&&t.requireFailure(e[3])}),this)}var t=e.prototype;return t.set=function(e){return i(this.options,e),e.touchAction&&this.touchAction.update(),e.inputTarget&&(this.input.destroy(),this.input.target=e.inputTarget,this.input.init()),this},t.stop=function(e){this.session.stopped=e?2:1},t.recognize=function(e){var t=this.session;if(!t.stopped){var n;this.touchAction.preventDefaults(e);var r=this.recognizers,i=t.curRecognizer;(!i||i&&8&i.state)&&(t.curRecognizer=null,i=null);for(var o=0;o<r.length;)n=r[o],2===t.stopped||i&&n!==i&&!n.canRecognizeWith(i)?n.reset():n.recognize(e),!i&&14&n.state&&(t.curRecognizer=n,i=n),o++}},t.get=function(e){if(e instanceof ve)return e;for(var t=this.recognizers,n=0;n<t.length;n++)if(t[n].options.event===e)return t[n];return null},t.add=function(e){if(de(e,"add",this))return this;var t=this.get(e.options.event);return t&&this.remove(t),this.recognizers.push(e),e.manager=this,this.touchAction.update(),e},t.remove=function(e){if(de(e,"remove",this))return this;var t=this.get(e);if(e){var n=this.recognizers,r=Y(n,t);-1!==r&&(n.splice(r,1),this.touchAction.update())}return this},t.on=function(e,t){if(void 0===e||void 0===t)return this;var n=this.handlers;return w(W(e),(function(e){n[e]=n[e]||[],n[e].push(t)})),this},t.off=function(e,t){if(void 0===e)return this;var n=this.handlers;return w(W(e),(function(e){t?n[e]&&n[e].splice(Y(n[e],t),1):delete n[e]})),this},t.emit=function(e,t){this.options.domEvents&&function(e,t){var n=document.createEvent("Event");n.initEvent(e,!0,!0),n.gesture=t,t.target.dispatchEvent(n)}(e,t);var n=this.handlers[e]&&this.handlers[e].slice();if(n&&n.length){t.type=e,t.preventDefault=function(){t.srcEvent.preventDefault()};for(var r=0;r<n.length;)n[r](t),r++}},t.destroy=function(){this.element&&we(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null},e}(),Fe={touchstart:1,touchmove:2,touchend:4,touchcancel:8},Ie="touchstart",De="touchstart touchmove touchend touchcancel",Le=function(e){function n(){var t,r=n.prototype;return r.evTarget=Ie,r.evWin=De,(t=e.apply(this,arguments)||this).started=!1,t}return t(n,e),n.prototype.handler=function(e){var t=Fe[e.type];if(1===t&&(this.started=!0),this.started){var n=Pe.call(this,e,t);12&t&&n[0].length-n[1].length==0&&(this.started=!1),this.callback(this.manager,t,{pointers:n[0],changedPointers:n[1],pointerType:T,srcEvent:e})}},n}(j);function Pe(e,t){var n=J(e.touches),r=J(e.changedTouches);return 12&t&&(n=ee(n.concat(r),"identifier",!0)),[n,r]}function Be(e,t,n){var r="DEPRECATED METHOD: "+t+"\n"+n+" AT \n";return function(){var t=new Error("get-stack-trace"),n=t&&t.stack?t.stack.replace(/^[^\(]+?[\n$]/gm,"").replace(/^\s+at\s+/gm,"").replace(/^Object.<anonymous>\s*\(/gm,"{anonymous}()@"):"Unknown Stack Trace",i=window.console&&(window.console.warn||window.console.log);return i&&i.call(window.console,r,n),e.apply(this,arguments)}}var Ue=Be((function(e,t,n){for(var r=Object.keys(t),i=0;i<r.length;)(!n||n&&void 0===e[r[i]])&&(e[r[i]]=t[r[i]]),i++;return e}),"extend","Use `assign`."),Oe=Be((function(e,t){return Ue(e,t,!0)}),"merge","Use `assign`.");function Ve(e,t,n){var r,o=t.prototype;(r=e.prototype=Object.create(o)).constructor=e,r._super=o,n&&i(r,n)}function ze(e,t){return function(){return e.apply(t,arguments)}}return function(){var t=function(t,n){return void 0===n&&(n={}),new Ce(t,e({recognizers:Ae.concat()},n))};return t.VERSION="2.0.17-rc",t.DIRECTION_ALL=30,t.DIRECTION_DOWN=R,t.DIRECTION_LEFT=2,t.DIRECTION_RIGHT=4,t.DIRECTION_UP=8,t.DIRECTION_HORIZONTAL=6,t.DIRECTION_VERTICAL=M,t.DIRECTION_NONE=1,t.DIRECTION_DOWN=R,t.INPUT_START=1,t.INPUT_MOVE=2,t.INPUT_END=4,t.INPUT_CANCEL=8,t.STATE_POSSIBLE=1,t.STATE_BEGAN=2,t.STATE_CHANGED=4,t.STATE_ENDED=8,t.STATE_RECOGNIZED=8,t.STATE_CANCELLED=16,t.STATE_FAILED=pe,t.Manager=Ce,t.Input=j,t.TouchAction=I,t.TouchInput=re,t.MouseInput=le,t.PointerEventInput=Q,t.TouchMouseInput=he,t.SingleTouchInput=Le,t.Recognizer=ve,t.AttrRecognizer=ye,t.Tap=ge,t.Pan=Ee,t.Swipe=Te,t.Pinch=Se,t.Rotate=Re,t.Press=Me,t.on=k,t.off=X,t.each=w,t.merge=Oe,t.extend=Ue,t.bindFn=ze,t.assign=i,t.inherit=Ve,t.bindFn=ze,t.prefixed=c,t.toArray=J,t.inArray=Y,t.uniqueArray=ee,t.splitStr=W,t.boolOrFn=C,t.hasParent=D,t.addEventListeners=k,t.removeEventListeners=X,t.defaults=i({},Ne,{preset:Ae}),t}()}))},{}],56:[function(e,t,n){"use strict";n.byteLength=function(e){var t=u(e),n=t[0],r=t[1];return 3*(n+r)/4-r},n.toByteArray=function(e){var t,n,r=u(e),a=r[0],s=r[1],l=new o(function(e,t,n){return 3*(t+n)/4-n}(0,a,s)),c=0,f=s>0?a-4:a;for(n=0;n<f;n+=4)t=i[e.charCodeAt(n)]<<18|i[e.charCodeAt(n+1)]<<12|i[e.charCodeAt(n+2)]<<6|i[e.charCodeAt(n+3)],l[c++]=t>>16&255,l[c++]=t>>8&255,l[c++]=255&t;2===s&&(t=i[e.charCodeAt(n)]<<2|i[e.charCodeAt(n+1)]>>4,l[c++]=255&t);1===s&&(t=i[e.charCodeAt(n)]<<10|i[e.charCodeAt(n+1)]<<4|i[e.charCodeAt(n+2)]>>2,l[c++]=t>>8&255,l[c++]=255&t);return l},n.fromByteArray=function(e){for(var t,n=e.length,i=n%3,o=[],a=16383,s=0,l=n-i;s<l;s+=a)o.push(c(e,s,s+a>l?l:s+a));1===i?(t=e[n-1],o.push(r[t>>2]+r[t<<4&63]+"==")):2===i&&(t=(e[n-2]<<8)+e[n-1],o.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return o.join("")};for(var r=[],i=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,l=a.length;s<l;++s)r[s]=a[s],i[a.charCodeAt(s)]=s;function u(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function c(e,t,n){for(var i,o,a=[],s=t;s<n;s+=3)i=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return a.join("")}i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},{}],57:[function(e,t,n){var r=e("./mime-types.json"),i={};Object.keys(r).forEach((function(e){r[e].forEach((function(t){i[t]=e}))})),t.exports=function(e){if(!e)throw new TypeError("must specify extension string");return 0===e.indexOf(".")&&(e=e.substring(1)),i[e.toLowerCase()]}},{"./mime-types.json":58}],58:[function(e,t,n){t.exports={"audio/midi":["mid","midi","kar","rmi"],"audio/mp4":["mp4a","m4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/webm":["weba"],"audio/x-matroska":["mka"],"audio/x-mpegurl":["m3u"],"audio/wav":["wav"],"video/3gpp":["3gp"],"video/3gpp2":["3g2"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"],"video/x-f4v":["f4v"],"video/x-fli":["fli"],"video/x-flv":["flv"],"video/x-m4v":["m4v"],"video/x-matroska":["mkv","mk3d","mks"]}},{}],59:[function(e,t,n){(function(t){(function(){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
"use strict";var t=e("base64-js"),r=e("ieee754");n.Buffer=a,n.SlowBuffer=function(e){+e!=e&&(e=0);return a.alloc(+e)},n.INSPECT_MAX_BYTES=50;var i=2147483647;function o(e){if(e>i)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return t.__proto__=a.prototype,t}function a(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return u(e)}return s(e,t,n)}function s(e,t,n){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!a.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var n=0|h(e,t),r=o(n),i=r.write(e,t);i!==n&&(r=r.slice(0,i));return r}(e,t);if(ArrayBuffer.isView(e))return c(e);if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(z(e,ArrayBuffer)||e&&z(e.buffer,ArrayBuffer))return function(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');var r;r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n);return r.__proto__=a.prototype,r}(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return a.from(r,t,n);var i=function(e){if(a.isBuffer(e)){var t=0|f(e.length),n=o(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!=typeof e.length||G(e.length)?o(0):c(e);if("Buffer"===e.type&&Array.isArray(e.data))return c(e.data)}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return a.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function u(e){return l(e),o(e<0?0:0|f(e))}function c(e){for(var t=e.length<0?0:0|f(e.length),n=o(t),r=0;r<t;r+=1)n[r]=255&e[r];return n}function f(e){if(e>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|e}function h(e,t){if(a.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||z(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;for(var i=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return U(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return O(e).length;default:if(i)return r?-1:U(e).length;t=(""+t).toLowerCase(),i=!0}}function d(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return A(this,t,n);case"utf8":case"utf-8":return S(this,t,n);case"ascii":return M(this,t,n);case"latin1":case"binary":return N(this,t,n);case"base64":return T(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return w(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function p(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function _(e,t,n,r,i){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),G(n=+n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=a.from(t,r)),a.isBuffer(t))return 0===t.length?-1:b(e,t,n,r,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):b(e,[t],n,r,i);throw new TypeError("val must be string, number or Buffer")}function b(e,t,n,r,i){var o,a=1,s=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;a=2,s/=2,l/=2,n/=2}function u(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(i){var c=-1;for(o=n;o<s;o++)if(u(e,o)===u(t,-1===c?0:o-c)){if(-1===c&&(c=o),o-c+1===l)return c*a}else-1!==c&&(o-=o-c),c=-1}else for(n+l>s&&(n=s-l),o=n;o>=0;o--){for(var f=!0,h=0;h<l;h++)if(u(e,o+h)!==u(t,h)){f=!1;break}if(f)return o}return-1}function m(e,t,n,r){n=Number(n)||0;var i=e.length-n;r?(r=Number(r))>i&&(r=i):r=i;var o=t.length;r>o/2&&(r=o/2);for(var a=0;a<r;++a){var s=parseInt(t.substr(2*a,2),16);if(G(s))return a;e[n+a]=s}return a}function v(e,t,n,r){return V(U(t,e.length-n),e,n,r)}function g(e,t,n,r){return V(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function y(e,t,n,r){return g(e,t,n,r)}function x(e,t,n,r){return V(O(t),e,n,r)}function E(e,t,n,r){return V(function(e,t){for(var n,r,i,o=[],a=0;a<e.length&&!((t-=2)<0);++a)r=(n=e.charCodeAt(a))>>8,i=n%256,o.push(i),o.push(r);return o}(t,e.length-n),e,n,r)}function T(e,n,r){return 0===n&&r===e.length?t.fromByteArray(e):t.fromByteArray(e.slice(n,r))}function S(e,t,n){n=Math.min(e.length,n);for(var r=[],i=t;i<n;){var o,a,s,l,u=e[i],c=null,f=u>239?4:u>223?3:u>191?2:1;if(i+f<=n)switch(f){case 1:u<128&&(c=u);break;case 2:128==(192&(o=e[i+1]))&&(l=(31&u)<<6|63&o)>127&&(c=l);break;case 3:o=e[i+1],a=e[i+2],128==(192&o)&&128==(192&a)&&(l=(15&u)<<12|(63&o)<<6|63&a)>2047&&(l<55296||l>57343)&&(c=l);break;case 4:o=e[i+1],a=e[i+2],s=e[i+3],128==(192&o)&&128==(192&a)&&128==(192&s)&&(l=(15&u)<<18|(63&o)<<12|(63&a)<<6|63&s)>65535&&l<1114112&&(c=l)}null===c?(c=65533,f=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),i+=f}return function(e){var t=e.length;if(t<=R)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=R));return n}(r)}n.kMaxLength=i,a.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()}catch(e){return!1}}(),a.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(a.prototype,"parent",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.buffer}}),Object.defineProperty(a.prototype,"offset",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&a[Symbol.species]===a&&Object.defineProperty(a,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),a.poolSize=8192,a.from=function(e,t,n){return s(e,t,n)},a.prototype.__proto__=Uint8Array.prototype,a.__proto__=Uint8Array,a.alloc=function(e,t,n){return function(e,t,n){return l(e),e<=0?o(e):void 0!==t?"string"==typeof n?o(e).fill(t,n):o(e).fill(t):o(e)}(e,t,n)},a.allocUnsafe=function(e){return u(e)},a.allocUnsafeSlow=function(e){return u(e)},a.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==a.prototype},a.compare=function(e,t){if(z(e,Uint8Array)&&(e=a.from(e,e.offset,e.byteLength)),z(t,Uint8Array)&&(t=a.from(t,t.offset,t.byteLength)),!a.isBuffer(e)||!a.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var n=e.length,r=t.length,i=0,o=Math.min(n,r);i<o;++i)if(e[i]!==t[i]){n=e[i],r=t[i];break}return n<r?-1:r<n?1:0},a.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},a.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return a.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=a.allocUnsafe(t),i=0;for(n=0;n<e.length;++n){var o=e[n];if(z(o,Uint8Array)&&(o=a.from(o)),!a.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,i),i+=o.length}return r},a.byteLength=h,a.prototype._isBuffer=!0,a.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)p(this,t,t+1);return this},a.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)p(this,t,t+3),p(this,t+1,t+2);return this},a.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)p(this,t,t+7),p(this,t+1,t+6),p(this,t+2,t+5),p(this,t+3,t+4);return this},a.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?S(this,0,e):d.apply(this,arguments)},a.prototype.toLocaleString=a.prototype.toString,a.prototype.equals=function(e){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===a.compare(this,e)},a.prototype.inspect=function(){var e="",t=n.INSPECT_MAX_BYTES;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},a.prototype.compare=function(e,t,n,r,i){if(z(e,Uint8Array)&&(e=a.from(e,e.offset,e.byteLength)),!a.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),t<0||n>e.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&t>=n)return 0;if(r>=i)return-1;if(t>=n)return 1;if(this===e)return 0;for(var o=(i>>>=0)-(r>>>=0),s=(n>>>=0)-(t>>>=0),l=Math.min(o,s),u=this.slice(r,i),c=e.slice(t,n),f=0;f<l;++f)if(u[f]!==c[f]){o=u[f],s=c[f];break}return o<s?-1:s<o?1:0},a.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},a.prototype.indexOf=function(e,t,n){return _(this,e,t,n,!0)},a.prototype.lastIndexOf=function(e,t,n){return _(this,e,t,n,!1)},a.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return m(this,e,t,n);case"utf8":case"utf-8":return v(this,e,t,n);case"ascii":return g(this,e,t,n);case"latin1":case"binary":return y(this,e,t,n);case"base64":return x(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},a.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var R=4096;function M(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(127&e[i]);return r}function N(e,t,n){var r="";n=Math.min(e.length,n);for(var i=t;i<n;++i)r+=String.fromCharCode(e[i]);return r}function A(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var i="",o=t;o<n;++o)i+=B(e[o]);return i}function w(e,t,n){for(var r=e.slice(t,n),i="",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function C(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function F(e,t,n,r,i,o){if(!a.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<o)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function I(e,t,n,r,i,o){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function D(e,t,n,i,o){return t=+t,n>>>=0,o||I(e,0,n,4),r.write(e,t,n,i,23,4),n+4}function L(e,t,n,i,o){return t=+t,n>>>=0,o||I(e,0,n,8),r.write(e,t,n,i,52,8),n+8}a.prototype.slice=function(e,t){var n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);var r=this.subarray(e,t);return r.__proto__=a.prototype,r},a.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||C(e,t,this.length);for(var r=this[e],i=1,o=0;++o<t&&(i*=256);)r+=this[e+o]*i;return r},a.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||C(e,t,this.length);for(var r=this[e+--t],i=1;t>0&&(i*=256);)r+=this[e+--t]*i;return r},a.prototype.readUInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),this[e]},a.prototype.readUInt16LE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]|this[e+1]<<8},a.prototype.readUInt16BE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]<<8|this[e+1]},a.prototype.readUInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},a.prototype.readUInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},a.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||C(e,t,this.length);for(var r=this[e],i=1,o=0;++o<t&&(i*=256);)r+=this[e+o]*i;return r>=(i*=128)&&(r-=Math.pow(2,8*t)),r},a.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||C(e,t,this.length);for(var r=t,i=1,o=this[e+--r];r>0&&(i*=256);)o+=this[e+--r]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*t)),o},a.prototype.readInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},a.prototype.readInt16LE=function(e,t){e>>>=0,t||C(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},a.prototype.readInt16BE=function(e,t){e>>>=0,t||C(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},a.prototype.readInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},a.prototype.readInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},a.prototype.readFloatLE=function(e,t){return e>>>=0,t||C(e,4,this.length),r.read(this,e,!0,23,4)},a.prototype.readFloatBE=function(e,t){return e>>>=0,t||C(e,4,this.length),r.read(this,e,!1,23,4)},a.prototype.readDoubleLE=function(e,t){return e>>>=0,t||C(e,8,this.length),r.read(this,e,!0,52,8)},a.prototype.readDoubleBE=function(e,t){return e>>>=0,t||C(e,8,this.length),r.read(this,e,!1,52,8)},a.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t>>>=0,n>>>=0,r)||F(this,e,t,n,Math.pow(2,8*n)-1,0);var i=1,o=0;for(this[t]=255&e;++o<n&&(i*=256);)this[t+o]=e/i&255;return t+n},a.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t>>>=0,n>>>=0,r)||F(this,e,t,n,Math.pow(2,8*n)-1,0);var i=n-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+n},a.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,1,255,0),this[t]=255&e,t+1},a.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},a.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},a.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},a.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},a.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){var i=Math.pow(2,8*n-1);F(this,e,t,n,i-1,-i)}var o=0,a=1,s=0;for(this[t]=255&e;++o<n&&(a*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+n},a.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){var i=Math.pow(2,8*n-1);F(this,e,t,n,i-1,-i)}var o=n-1,a=1,s=0;for(this[t+o]=255&e;--o>=0&&(a*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+n},a.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},a.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},a.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},a.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},a.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||F(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},a.prototype.writeFloatLE=function(e,t,n){return D(this,e,t,!0,n)},a.prototype.writeFloatBE=function(e,t,n){return D(this,e,t,!1,n)},a.prototype.writeDoubleLE=function(e,t,n){return L(this,e,t,!0,n)},a.prototype.writeDoubleBE=function(e,t,n){return L(this,e,t,!1,n)},a.prototype.copy=function(e,t,n,r){if(!a.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var i=r-n;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,n,r);else if(this===e&&n<t&&t<r)for(var o=i-1;o>=0;--o)e[o+t]=this[o+n];else Uint8Array.prototype.set.call(e,this.subarray(n,r),t);return i},a.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!a.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){var i=e.charCodeAt(0);("utf8"===r&&i<128||"latin1"===r)&&(e=i)}}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var o;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(o=t;o<n;++o)this[o]=e;else{var s=a.isBuffer(e)?e:a.from(e,r),l=s.length;if(0===l)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(o=0;o<n-t;++o)this[o+t]=s[o%l]}return this};var P=/[^+/0-9A-Za-z-_]/g;function B(e){return e<16?"0"+e.toString(16):e.toString(16)}function U(e,t){var n;t=t||1/0;for(var r=e.length,i=null,o=[],a=0;a<r;++a){if((n=e.charCodeAt(a))>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===r){(t-=3)>-1&&o.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function O(e){return t.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(P,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function V(e,t,n,r){for(var i=0;i<r&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function z(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function G(e){return e!=e}}).call(this)}).call(this,e("buffer").Buffer)},{"base64-js":56,buffer:59,ieee754:64}],60:[function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty,i="~";function o(){}function a(e,t,n){this.fn=e,this.context=t,this.once=n||!1}function s(e,t,n,r,o){if("function"!=typeof n)throw new TypeError("The listener must be a function");var s=new a(n,r||e,o),l=i?i+t:t;return e._events[l]?e._events[l].fn?e._events[l]=[e._events[l],s]:e._events[l].push(s):(e._events[l]=s,e._eventsCount++),e}function l(e,t){0==--e._eventsCount?e._events=new o:delete e._events[t]}function u(){this._events=new o,this._eventsCount=0}Object.create&&(o.prototype=Object.create(null),(new o).__proto__||(i=!1)),u.prototype.eventNames=function(){var e,t,n=[];if(0===this._eventsCount)return n;for(t in e=this._events)r.call(e,t)&&n.push(i?t.slice(1):t);return Object.getOwnPropertySymbols?n.concat(Object.getOwnPropertySymbols(e)):n},u.prototype.listeners=function(e){var t=i?i+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var r=0,o=n.length,a=new Array(o);r<o;r++)a[r]=n[r].fn;return a},u.prototype.listenerCount=function(e){var t=i?i+e:e,n=this._events[t];return n?n.fn?1:n.length:0},u.prototype.emit=function(e,t,n,r,o,a){var s=i?i+e:e;if(!this._events[s])return!1;var l,u,c=this._events[s],f=arguments.length;if(c.fn){switch(c.once&&this.removeListener(e,c.fn,void 0,!0),f){case 1:return c.fn.call(c.context),!0;case 2:return c.fn.call(c.context,t),!0;case 3:return c.fn.call(c.context,t,n),!0;case 4:return c.fn.call(c.context,t,n,r),!0;case 5:return c.fn.call(c.context,t,n,r,o),!0;case 6:return c.fn.call(c.context,t,n,r,o,a),!0}for(u=1,l=new Array(f-1);u<f;u++)l[u-1]=arguments[u];c.fn.apply(c.context,l)}else{var h,d=c.length;for(u=0;u<d;u++)switch(c[u].once&&this.removeListener(e,c[u].fn,void 0,!0),f){case 1:c[u].fn.call(c[u].context);break;case 2:c[u].fn.call(c[u].context,t);break;case 3:c[u].fn.call(c[u].context,t,n);break;case 4:c[u].fn.call(c[u].context,t,n,r);break;default:if(!l)for(h=1,l=new Array(f-1);h<f;h++)l[h-1]=arguments[h];c[u].fn.apply(c[u].context,l)}}return!0},u.prototype.on=function(e,t,n){return s(this,e,t,n,!1)},u.prototype.once=function(e,t,n){return s(this,e,t,n,!0)},u.prototype.removeListener=function(e,t,n,r){var o=i?i+e:e;if(!this._events[o])return this;if(!t)return l(this,o),this;var a=this._events[o];if(a.fn)a.fn!==t||r&&!a.once||n&&a.context!==n||l(this,o);else{for(var s=0,u=[],c=a.length;s<c;s++)(a[s].fn!==t||r&&!a[s].once||n&&a[s].context!==n)&&u.push(a[s]);u.length?this._events[o]=1===u.length?u[0]:u:l(this,o)}return this},u.prototype.removeAllListeners=function(e){var t;return e?(t=i?i+e:e,this._events[t]&&l(this,t)):(this._events=new o,this._eventsCount=0),this},u.prototype.off=u.prototype.removeListener,u.prototype.addListener=u.prototype.on,u.prefixed=i,u.EventEmitter=u,void 0!==t&&(t.exports=u)},{}],61:[function(e,t,n){(function(e){(function(){!function(e){function t(){}function n(e,t){if(e=void 0===e?"utf-8":e,t=void 0===t?{fatal:!1}:t,-1===r.indexOf(e.toLowerCase()))throw new RangeError("Failed to construct 'TextDecoder': The encoding label provided ('"+e+"') is invalid.");if(t.fatal)throw Error("Failed to construct 'TextDecoder': the 'fatal' option is unsupported.")}if(e.TextEncoder&&e.TextDecoder)return!1;var r=["utf-8","utf8","unicode-1-1-utf-8"];Object.defineProperty(t.prototype,"encoding",{value:"utf-8"}),t.prototype.encode=function(e,t){if((t=void 0===t?{stream:!1}:t).stream)throw Error("Failed to encode: the 'stream' option is unsupported.");t=0;for(var n=e.length,r=0,i=Math.max(32,n+(n>>1)+7),o=new Uint8Array(i>>3<<3);t<n;){var a=e.charCodeAt(t++);if(55296<=a&&56319>=a){if(t<n){var s=e.charCodeAt(t);56320==(64512&s)&&(++t,a=((1023&a)<<10)+(1023&s)+65536)}if(55296<=a&&56319>=a)continue}if(r+4>o.length&&(i+=8,i=(i*=1+t/e.length*2)>>3<<3,(s=new Uint8Array(i)).set(o),o=s),0==(4294967168&a))o[r++]=a;else{if(0==(4294965248&a))o[r++]=a>>6&31|192;else if(0==(4294901760&a))o[r++]=a>>12&15|224,o[r++]=a>>6&63|128;else{if(0!=(4292870144&a))continue;o[r++]=a>>18&7|240,o[r++]=a>>12&63|128,o[r++]=a>>6&63|128}o[r++]=63&a|128}}return o.slice?o.slice(0,r):o.subarray(0,r)},Object.defineProperty(n.prototype,"encoding",{value:"utf-8"}),Object.defineProperty(n.prototype,"fatal",{value:!1}),Object.defineProperty(n.prototype,"ignoreBOM",{value:!1}),n.prototype.decode=function(e,t){if((t=void 0===t?{stream:!1}:t).stream)throw Error("Failed to decode: the 'stream' option is unsupported.");!((t=e)instanceof Uint8Array)&&t.buffer instanceof ArrayBuffer&&(t=new Uint8Array(e.buffer)),e=0;for(var n=[],r=[];;){var i=e<t.length;if(!i||65536&e){if(r.push(String.fromCharCode.apply(null,n)),!i)return r.join("");n=[],t=t.subarray(e),e=0}if(0===(i=t[e++]))n.push(0);else if(0==(128&i))n.push(i);else if(192==(224&i)){var o=63&t[e++];n.push((31&i)<<6|o)}else if(224==(240&i)){o=63&t[e++];var a=63&t[e++];n.push((31&i)<<12|o<<6|a)}else if(240==(248&i)){65535<(i=(7&i)<<18|(o=63&t[e++])<<12|(a=63&t[e++])<<6|63&t[e++])&&(i-=65536,n.push(i>>>10&1023|55296),i=56320|1023&i),n.push(i)}}},e.TextEncoder=t,e.TextDecoder=n}("undefined"!=typeof window?window:void 0!==e?e:this)}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],62:[function(e,t,n){(function(e){(function(){var n;n="undefined"!=typeof window?window:void 0!==e?e:"undefined"!=typeof self?self:{},t.exports=n}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],63:[function(e,t,n){t.exports=function(e){"string"==typeof e&&(e=[e]);for(var t=[].slice.call(arguments,1),n=[],r=0;r<e.length-1;r++)n.push(e[r],t[r]||"");return n.push(e[r]),n.join("")}},{}],64:[function(e,t,n){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
n.read=function(e,t,n,r,i){var o,a,s=8*i-r-1,l=(1<<s)-1,u=l>>1,c=-7,f=n?i-1:0,h=n?-1:1,d=e[t+f];for(f+=h,o=d&(1<<-c)-1,d>>=-c,c+=s;c>0;o=256*o+e[t+f],f+=h,c-=8);for(a=o&(1<<-c)-1,o>>=-c,c+=r;c>0;a=256*a+e[t+f],f+=h,c-=8);if(0===o)o=1-u;else{if(o===l)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,r),o-=u}return(d?-1:1)*a*Math.pow(2,o-r)},n.write=function(e,t,n,r,i,o){var a,s,l,u=8*o-i-1,c=(1<<u)-1,f=c>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:o-1,p=r?1:-1,_=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=c):(a=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-a))<1&&(a--,l*=2),(t+=a+f>=1?h/l:h*Math.pow(2,1-f))*l>=2&&(a++,l/=2),a+f>=c?(s=0,a=c):a+f>=1?(s=(t*l-1)*Math.pow(2,i),a+=f):(s=t*Math.pow(2,f-1)*Math.pow(2,i),a=0));i>=8;e[n+d]=255&s,d+=p,s/=256,i-=8);for(a=a<<i|s,u+=i;u>0;e[n+d]=255&a,d+=p,a/=256,u-=8);e[n+d-p]|=128*_}},{}],65:[function(e,t,n){t.exports=function(e){if(!e)return!1;var t=r.call(e);return"[object Function]"===t||"function"==typeof e&&"[object RegExp]"!==t||"undefined"!=typeof window&&(e===window.setTimeout||e===window.alert||e===window.confirm||e===window.prompt)};var r=Object.prototype.toString},{}],66:[function(e,t,n){function r(e){return!!e&&("object"==typeof e||"function"==typeof e)&&"function"==typeof e.then}t.exports=r,t.exports.default=r},{}],67:[function(e,t,n){var r=e("./loaders"),i=e("object-assign"),o=e("is-promise"),a=function(){};function s(e,t,n){if("function"!=typeof(t=t||a))return Promise.reject(new Error("The second argument to load.all() and load.any() must be a function, or undefined"));var r,i,o=0,s=function(e,n,i,o){var a={target:e,total:r,count:i,progress:i/r,value:n};o&&(a.error=o),t(a)};if(i=n?function(e){return l(e).then((function(e){return{value:e}}),(function(e){return{value:null,error:e}})).then((function(t){return s(e,t.value,++o,t.error),t.value}))}:function(e){return l(e).then((function(t){return s(e,t,++o),t}))},Array.isArray(e))return r=e.length,Promise.all(e.map((function(e){return i(e)})));if(e){var u=Object.keys(e).map((function(t){return{key:t,value:e[t]}}));return r=u.length,Promise.all(u.map((function(e){var t=e.key;return i(e.value).then((function(e){return{value:e,key:t}}))}))).then((function(e){return e.reduce((function(e,t){return e[t.key]=t.value,e}),{})}))}return Promise.reject(new Error("You must specify an array of assets or object group to load"))}function l(e){return e?("string"==typeof e&&(e={url:e}),o(e)?e:function(e){var t,n,i=e.type?e.type:null;if(i){if("function"==typeof i)return Promise.resolve(i);if(i=i.toLowerCase(),!e.url)return Promise.reject(new Error("When using loadAsset(), you must specify a URL or descriptor of the asset to load"));for(t=0;t<r.length;t++)if((n=r[t]).key===i)return Promise.resolve(n.load);return Promise.reject(new Error('Could not find an asset loader by the key "'+e.type+'"'))}if(!e.url)return Promise.reject(new Error("When using loadAsset(), you must specify a URL or descriptor of the asset to load"));var o=function(e){if(!e)return"";var t=e.lastIndexOf("/");-1!==t&&(e=e.substring(t+1));-1!==(t=e.indexOf("?"))&&(e=e.substring(0,t));-1!==(t=e.indexOf("#"))&&(e=e.substring(0,t));return-1!==(t=e.lastIndexOf("."))?e.substring(t):""}(e.url);if(!o)return Promise.reject(new Error('No extension found for input URL "'+e.url+'", try to specify a { type } such as "image" or "text"'));for(t=0;t<r.length;t++){if((n=r[t]).match)if("function"==typeof n.match?n.match(o):n.match.test(o))return Promise.resolve(n.load)}return Promise.reject(new Error('Could not infer an asset loader from the file type "'+o+'", try specifying { type } such as "image" or "text"'))}(e).then((function(t){return delete(e=i({},e)).type,t(e)}))):Promise.reject(new Error("You must specify a URL or descriptor of the asset to load"))}t.exports=l,t.exports.all=function(e,t){return s(e,t,!1)},t.exports.any=function(e,t){return s(e,t,!0)}},{"./loaders":70,"is-promise":66,"object-assign":72}],68:[function(e,t,n){var r=e("xhr"),i=e("object-assign");t.exports=function(e){return function(t){return("fetch"in window?window.fetch(t.url,t).then((function(t){if(/404/.test(t.status))throw new Error("Resource not found");if(!/^2/.test(t.status))throw new Error("Unexpected HTTP Status Code: "+t.status);if(!t.ok)throw new Error("Response not OK");return"json"===e?t.json():"binary"===e?t.arrayBuffer():"blob"===e?t.blob():t.text()})):function(e,t){return new Promise((function(n,o){var a="text";"json"===e?a="text":"binary"===e?a="arraybuffer":"blob"===e&&(a="blob"),t=i({},t,{json:!1,responseType:a}),r(t,(function(t,r,i){if(t)return o(t);if(/404/.test(r.statusCode))throw new Error("Resource not found");if(!/^2/.test(r.statusCode))return o(new Error("Unexpected HTTP Status Code: "+r.statusCode));if("json"===e)try{i=JSON.parse(i)}catch(t){return o(t)}n(i)}))}))}(e,t)).catch((function(e){throw new Error(e.message+" while loading file "+t.url)}))}}},{"object-assign":72,xhr:74}],69:[function(e,t,n){var r=e("browser-media-mime-type");t.exports=function(e,t){return{key:e,match:function(t){return function(e){var t=r(e);return t?0===t.indexOf("audio")?"audio":0===t.indexOf("video")?"video":null:null}(t)===e},load:function(n){return new Promise((function(r,i){var o=!1,a=t(),s=function(){o||(o=!0,r(a))},l=(n.event||"canplay").toLowerCase();if("loadedmetadata"===l?a.onloadedmetadata=s:"canplaythrough"===l?a.oncanplaythrough=s:"loadeddata"===l?a.onloadeddata=s:a.oncanplay=s,a.onerror=function(t){o||(o=!0,i(new Error("Error while loading "+e+" at "+n.url)))},n.crossOrigin&&(a.crossOrigin=n.crossOrigin),void 0!==n.volume&&(a.volume=n.volume),void 0!==n.preload&&(a.preload=n.volume),void 0!==n.playbackRate&&(a.playbackRate=n.volume),void 0!==n.muted&&(a.muted=n.volume),void 0!==n.currentTime&&(a.currentTime=n.volume),void 0!==n.controls&&(a.controls=n.volume),void 0!==n.autoPlay&&(a.autoPlay=n.volume),a.src=n.url,a.readyState>=a.HAVE_ENOUGH_DATA)return o=!0,r(a);a.load()}))}}}},{"browser-media-mime-type":57}],70:[function(e,t,n){const r=e("./createMediaLoader"),i=e("./createFileLoader"),o=e("./loadImage");t.exports=[{key:"json",match:/\.json$/i,load:i("json")},{key:"text",match:/\.txt$/i,load:i("text")},{key:"image",match:/\.(jpg|jpeg|svg|png|gif|webp|bmp|tga|tif|apng|wbpm|ico)$/i,load:o},r("audio",(function(){return new window.Audio})),r("video",(function(){return document.createElement("video")})),{key:"binary",match:/\.bin$/i,load:i("binary")},{key:"blob",load:i("blob")}]},{"./createFileLoader":68,"./createMediaLoader":69,"./loadImage":71}],71:[function(e,t,n){t.exports=function(e){return new Promise((function(t,n){var r=!1,i=new window.Image;i.onload=function(){r||(r=!0,t(i))},i.onerror=function(){r||(r=!0,n(new Error("Error while loading image at "+e.url)))},e.crossOrigin&&(i.crossOrigin=e.crossOrigin),i.src=e.url}))}},{}],72:[function(e,t,n){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
"use strict";var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}t.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,s,l=a(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))i.call(n,c)&&(l[c]=n[c]);if(r){s=r(n);for(var f=0;f<s.length;f++)o.call(n,s[f])&&(l[s[f]]=n[s[f]])}}return l}},{}],73:[function(e,t,n){var r=function(e){return e.replace(/^\s+|\s+$/g,"")};t.exports=function(e){if(!e)return{};for(var t,n={},i=r(e).split("\n"),o=0;o<i.length;o++){var a=i[o],s=a.indexOf(":"),l=r(a.slice(0,s)).toLowerCase(),u=r(a.slice(s+1));void 0===n[l]?n[l]=u:(t=n[l],"[object Array]"===Object.prototype.toString.call(t)?n[l].push(u):n[l]=[n[l],u])}return n}},{}],74:[function(e,t,n){"use strict";var r=e("global/window"),i=e("is-function"),o=e("parse-headers"),a=e("xtend");function s(e,t,n){var r=e;return i(t)?(n=t,"string"==typeof e&&(r={uri:e})):r=a(t,{uri:e}),r.callback=n,r}function l(e,t,n){return u(t=s(e,t,n))}function u(e){if(void 0===e.callback)throw new Error("callback argument missing");var t=!1,n=function(n,r,i){t||(t=!0,e.callback(n,r,i))};function r(){var e=void 0;if(e=c.response?c.response:c.responseText||function(e){try{if("document"===e.responseType)return e.responseXML;var t=e.responseXML&&"parsererror"===e.responseXML.documentElement.nodeName;if(""===e.responseType&&!t)return e.responseXML}catch(e){}return null}(c),m)try{e=JSON.parse(e)}catch(e){}return e}function i(e){return clearTimeout(f),e instanceof Error||(e=new Error(""+(e||"Unknown XMLHttpRequest Error"))),e.statusCode=0,n(e,v)}function a(){if(!u){var t;clearTimeout(f),t=e.useXDR&&void 0===c.status?200:1223===c.status?204:c.status;var i=v,a=null;return 0!==t?(i={body:r(),statusCode:t,method:d,headers:{},url:h,rawRequest:c},c.getAllResponseHeaders&&(i.headers=o(c.getAllResponseHeaders()))):a=new Error("Internal XMLHttpRequest Error"),n(a,i,i.body)}}var s,u,c=e.xhr||null;c||(c=e.cors||e.useXDR?new l.XDomainRequest:new l.XMLHttpRequest);var f,h=c.url=e.uri||e.url,d=c.method=e.method||"GET",p=e.body||e.data,_=c.headers=e.headers||{},b=!!e.sync,m=!1,v={body:void 0,headers:{},statusCode:0,method:d,url:h,rawRequest:c};if("json"in e&&!1!==e.json&&(m=!0,_.accept||_.Accept||(_.Accept="application/json"),"GET"!==d&&"HEAD"!==d&&(_["content-type"]||_["Content-Type"]||(_["Content-Type"]="application/json"),p=JSON.stringify(!0===e.json?p:e.json))),c.onreadystatechange=function(){4===c.readyState&&setTimeout(a,0)},c.onload=a,c.onerror=i,c.onprogress=function(){},c.onabort=function(){u=!0},c.ontimeout=i,c.open(d,h,!b,e.username,e.password),b||(c.withCredentials=!!e.withCredentials),!b&&e.timeout>0&&(f=setTimeout((function(){if(!u){u=!0,c.abort("timeout");var e=new Error("XMLHttpRequest timeout");e.code="ETIMEDOUT",i(e)}}),e.timeout)),c.setRequestHeader)for(s in _)_.hasOwnProperty(s)&&c.setRequestHeader(s,_[s]);else if(e.headers&&!function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}(e.headers))throw new Error("Headers cannot be set on an XDomainRequest object");return"responseType"in e&&(c.responseType=e.responseType),"beforeSend"in e&&"function"==typeof e.beforeSend&&e.beforeSend(c),c.send(p||null),c}t.exports=l,t.exports.default=l,l.XMLHttpRequest=r.XMLHttpRequest||function(){},l.XDomainRequest="withCredentials"in new l.XMLHttpRequest?l.XMLHttpRequest:r.XDomainRequest,function(e,t){for(var n=0;n<e.length;n++)t(e[n])}(["get","put","post","patch","head","delete"],(function(e){l["delete"===e?"del":e]=function(t,n,r){return(n=s(t,n,r)).method=e.toUpperCase(),u(n)}}))},{"global/window":62,"is-function":65,"parse-headers":73,xtend:75}],75:[function(e,t,n){t.exports=function(){for(var e={},t=0;t<arguments.length;t++){var n=arguments[t];for(var i in n)r.call(n,i)&&(e[i]=n[i])}return e};var r=Object.prototype.hasOwnProperty},{}],76:[function(e,t,n){(function(t){(function(){const{WebGLCanvas:n,StopWatch:r,RenderTarget:i,GL:o}=e(".."),a=e("../loader/texture"),s=e("../BigTriangle"),l=e("glslify"),u=document.getElementById("canvas"),c="#version 300 es\n    precision highp float;\n    in vec2 position;\n    void main() {\n        gl_Position = vec4(position.xy, 0.0, 1.0);\n}";!async function(){let e=0,f=0,h=INITIAL_SPEED;var d=new Slider(document.getElementById("speed-slider"),1,MAX_SPEED,INITIAL_SPEED,(function(t){h=t,e=0})),p=new Buttons([document.getElementById("LAMBERT"),document.getElementById("METAL"),document.getElementById("GLASS"),document.getElementById("WOOD")],(function(t){f=t,e=0})),_=[1,1,1];new HuePicker(document.getElementById("picker"),(function(t){e=0;var n="rgb("+(255*(_=hsvToRGB(t,UI_SATURATION,UI_VALUE))[0]).toFixed(0)+","+(255*_[1]).toFixed(0)+","+(255*_[2]).toFixed(0)+")";d.setColor(n),p.setColor(n)}));const b=await a({wood:t+"/assets/wood.jpg"}),m=s({vs:c,fs:l(['#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define GLSLIFY 1\nuniform vec2 size;\nuniform int frame;\nuniform float time;\n\nout vec4 fragColor;\n\nuniform sampler2D buffer;\n\nuniform int MAX_BOUNCES;\n\n#define MAX_DIST 1e20\n#define EPS 0.0001\n\nuint wang_hash(inout uint seed) {\n    seed = uint(seed ^ uint(61)) ^ uint(seed >> uint(16));\n    seed *= uint(9);\n    seed = seed ^ (seed >> 4);\n    seed *= uint(0x27d4eb2d);\n    seed = seed ^ (seed >> 15);\n    return seed;\n}\n\nfloat hash(inout uint state) {\n    return float(wang_hash(state)) / 4294967296.0;\n}\n\nvec2 hash2(inout uint state) {\n    return vec2(hash(state), hash(state));\n}\n\nconst float PI_0 = 3.14159265358979323846;\n\nstruct PerRayData {\n    float seed;\n    vec3 normal;\n    vec3 throughput;\n    vec3 rad; // radiance\n    vec3 wi; // bsdf dir\n    vec3 wo; // out dir\n    vec3 li; // light emissive radiance\n    vec3 li_pdf; // light pdf\n    bool light;  // is light    \n    vec3 hit;\n    int bounce;\n};\n\nstruct Ray {\n    vec3 o;\n    vec3 dir;    \n};\n\n#define QUAD_LIGHT 0\n#define DIR_LIGHT 1\n\nstruct Light {\n    int type;    \n    vec3 color; // 12\n    vec3 pos;   // 12\n    vec3 u; // 12\n    vec3 v; // 12\n    mat3 rotation;\n};\n\nconst float PI_1 = 3.14159265358979323846;\n\nRay camera_ray_3771232466(vec3 eye, vec3 tar, vec2 ndc) {\n    vec3 near = tar - eye;\n    float fov = 50.0;\n    vec3 dir = normalize(near);\n    vec3 u = normalize(cross(dir, vec3(0., 1., 0.))); // right\n    vec3 v = normalize(cross(u, dir)); // up\n\n    float vlen = length(near) * tan (fov * 0.5 * PI_1 / 180.);\n    float ulen = vlen * size.x / size.y;\n    dir = ndc.x * (u * ulen) + ndc.y * (v * vlen) + near;\n\n    Ray ray;\n    ray.o = eye;\n    ray.dir = normalize(dir);\n\n    return ray;\n}\n\n#define BSDF_REFLECTION 1 << 0\n#define BSDF_TRANSMISSION 1 << 1\n#define BSDF_DIFFUSE 1 << 2\n#define BSDF_GLOSSY 1 << 3\n#define BSDF_SPECULAR 1 << 4\n#define BSDF_ALL BSDF_DIFFUSE | BSDF_GLOSSY | BSDF_SPECULAR | BSDF_REFLECTION | BSDF_TRANSMISSION\n\nstruct Material {   \n    vec3 color; \n    float ior;\n    int type;\n};\n\nfloat intersect_2 (in vec3 ro_0, in vec3 rd_0, vec4 sph, in vec2 dist_bound_3533466125, inout vec3 normal_1) {\n    vec3 oc = ro_0 - sph.xyz;\n    float b = dot( oc, rd_0 );\n    float c = dot( oc, oc ) - sph.w*sph.w;\n    float h = b * b - c;\n    if (h < 0.) {\n        return MAX_DIST;\n    } else {\n\t    h = sqrt(h);\n        float d1 = -b-h;\n        float d2 = -b+h;\n        if (d1 >= dist_bound_3533466125.x && d1 <= dist_bound_3533466125.y) {\n            normal_1 = normalize(ro_0 + rd_0 * d1 - sph.xyz);\n            return d1;\n        } else if (d2 >= dist_bound_3533466125.x && d2 <= dist_bound_3533466125.y) { \n            normal_1 = normalize(ro_0 + rd_0 * d2 - sph.xyz);\n            return d2;\n        } else {\n            return MAX_DIST;\n        }\n    }\n}\n\nfloat intersect_3( in vec3 ro, in vec3 rd, in vec4 plane, in vec2 distBound, inout vec3 normal) {\n    float a = dot(rd, plane.xyz); // (a > 0) means backface\n    float d = -(dot(ro, plane.xyz) + plane.w) / a;\n    if (a > 0. || d < distBound.x || d > distBound.y) {\n        return MAX_DIST; // no intersection if back hit\n    } else {\n        normal = plane.xyz;\n    \treturn d;\n    }\n}\n\n// when ro inside the box, tN will be negative, return tF\n// box automactically flip normal\n\nfloat intersect_0(in vec3 ro, in vec3 rd, in vec3 boxSize, in vec2 distBound, inout vec3 normal) {\n    vec3 m = 1.0 / rd;\n    vec3 n = m * ro;\n    vec3 k = abs(m) * boxSize;\n\t\n    vec3 t1 = -n - k;\n    vec3 t2 = -n + k;\n\n\tfloat tN = max( max( t1.x, t1.y ), t1.z );\n\tfloat tF = min( min( t2.x, t2.y ), t2.z );\n\t\n    if (tN > tF || tF <= 0.) {\n        return MAX_DIST;\n    } else {\n        if (tN >= distBound.x && tN <= distBound.y) {  // if near < 0 means inside, only intersection at tF\n        \tnormal = -sign(rd)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n            return tN;\n        } else if (tF >= distBound.x && tF <= distBound.y) { \n        \tnormal = -sign(rd)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n            return tF;\n        } else {\n            return MAX_DIST;\n        }\n    }\n}\n/*\nfloat intersect(in vec3 ro, in vec3 rd, in vec3 boxSize, in vec2 distBound, inout vec3 normal) {\n    vec3 cubeMin = -boxSize;\n    vec3 cubeMax = boxSize;\n    vec3 tMin = (cubeMin - ro) / rd;\n    vec3 tMax = (cubeMax - ro) / rd;\n    vec3 t1 = min(tMin, tMax);\n    vec3 t2 = max(tMin, tMax);\n    float tNear = max(max(t1.x, t1.y), t1.z);\n    float tFar = min(min(t2.x, t2.y), t2.z);\n\n\n    vec3 hit;\n    float r;\n    \n    if (tNear > tFar) {\n        return MAX_DIST;\n    } else {\n        if (tNear >= distBound.x && tNear <= distBound.y) {  // if near < 0 means inside, only intersection at tF\n            r = tNear;\n        } else if (tFar >= distBound.x && tFar <= distBound.y) { \n            r = tFar;\n        } else {\n            return MAX_DIST;\n        }\n    } \n\n    hit = r * rd + ro;\n\n    if (hit.x < cubeMin.x + distBound.x) normal = vec3(-1.0, 0.0, 0.0);\n    else if (hit.x > cubeMax.x - distBound.x) normal = vec3(1.0, 0.0, 0.0);\n    else if (hit.y < cubeMin.y + distBound.x) normal = vec3(0.0, -1.0, 0.0);\n    else if (hit.y > cubeMax.y - distBound.x) normal = vec3(0.0, 1.0, 0.0);\n    else if (hit.z < cubeMin.z + distBound.x) normal =  vec3(0.0, 0.0, -1.0);\n    else normal = vec3(0.0, 0.0, 1.0);    \n\n    normal = -1. * normal;    \n\n    return r;\n}\n*/\n\n// Noteice that: cornel box intersection with back-face culling\n// always return tF in intersection, make sure every thing is inside this cornel box \n/*\nfloat intersect(in vec3 ro, in vec3 rd, in vec3 boxSize, in vec2 distBound, inout vec3 normal) {\n    vec3 m = sign(rd)/max(abs(rd), 1e-8);\n    vec3 n = m*ro;\n    vec3 k = abs(m)*boxSize;\t\n    vec3 t1 = -n - k;\n    vec3 t2 = -n + k;\n\tfloat tN = max( max( t1.x, t1.y ), t1.z );\n\tfloat tF = min( min( t2.x, t2.y ), t2.z );\t\n\n    if (tN > tF || tF <= 0.) {\n        return -1.;\n    } else {\n       if (tF >= distBound.x && tF <= distBound.y) { \n        \tnormal = -sign(rd)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n            return tF;    \n        } else {\n            return -1.;\n        }\n    }    \n}\n*/\n\nfloat intersect_1(in vec3 ro, in vec3 rd, in vec3 boxSize, in vec2 distBound, inout vec3 normal) {\n    vec3 cubeMin = -boxSize;\n    vec3 cubeMax = boxSize;\n    vec3 tMin = (cubeMin - ro) / rd;\n    vec3 tMax = (cubeMax - ro) / rd;\n    vec3 t1 = min(tMin, tMax);\n    vec3 t2 = max(tMin, tMax);\n    float tNear = max(max(t1.x, t1.y), t1.z);\n    float tFar = min(min(t2.x, t2.y), t2.z);\n\n    if (tNear > tFar) return MAX_DIST;\n\n    vec3 hit;\n    float r;\n    \n    if (tFar >= distBound.x && tFar <= distBound.y) { \n        hit = tFar * rd + ro;\n        r = tFar;\n    } else {\n        return MAX_DIST;\n    }\n    if (hit.x < cubeMin.x + distBound.x) normal = vec3(-1.0, 0.0, 0.0);\n    else if (hit.x > cubeMax.x - distBound.x) normal = vec3(1.0, 0.0, 0.0);\n    else if (hit.y < cubeMin.y + distBound.x) normal = vec3(0.0, -1.0, 0.0);\n    else if (hit.y > cubeMax.y - distBound.x) normal = vec3(0.0, 1.0, 0.0);\n    else if (hit.z < cubeMin.z + distBound.x) normal =  vec3(0.0, 0.0, -1.0);\n    else normal = vec3(0.0, 0.0, 1.0);    \n\n    normal = -1. * normal;    \n\n    return r;\n}\n\nvoid make_coord_421267681(in vec3 N, inout vec3 T, inout vec3 B) {\n   if (abs(N.x) > abs(N.y)) \n        T = vec3(N.z, 0, -N.x) / sqrt(N.x * N.x + N.z * N.z); \n    else\n        T = vec3(0, -N.z, N.y) / sqrt(N.y * N.y + N.z * N.z); \n    // T is already normalized\n    B = cross(N, T); // conserve right hand\n}\n\nvoid cos_hemi_sample_2197045468(in vec2 rand, out vec3 p) {\n    // uniformly sample in a unit-disk.\n    float r  = sqrt(rand.x); // cos(theta), theta(0, PI / 2)\n    float phi = 2.0 * PI_0 * rand.y; // phi (0, 2 * PI)\n    p.x = r * cos(phi);\n    p.y = r * sin(phi);\n     // then project up to hemisphere.\n    p.z = sqrt(max(0.0, 1.0 - p.x * p.x - p.y * p.y));\n}\n\nvec3 eval_1(const vec3 N, const vec3 wo, const vec3 wi) {\n    float dot_wi_n = dot(wi, N);\n    if (dot_wi_n <= 0. || dot(wo, N) <= 0.) return vec3(0);\n    return vec3(dot_wi_n / PI_0);\n}\n\n// "sample" is revsered identify\nvec3 sample_f_1921068617(in vec2 rand, in vec3 N, vec3 wo, inout vec3 wi, inout float pdf) {\n    cos_hemi_sample_2197045468(rand, wi); // z up\n    vec3 T;\n    vec3 B;\n    make_coord_421267681(N, T, B);    \n    wi = wi.x * T + wi.y * B + wi.z * N;    \n    pdf = abs(dot(N, wi)) / PI_0;        \n    return eval_1(N, wo, wi);\n}\n\nfloat dielectric_fr_1535977339(float cosThetaI, float etaI, float etaT) {\n    cosThetaI = clamp(cosThetaI, -1., 1.);\n\n    // Potentially swap indices of refraction\n    bool entering = cosThetaI > 0.f;\n    if (!entering) {\n        float temp;\n        temp = etaI;\n        etaI = etaT;\n        etaT = temp;\n        cosThetaI = abs(cosThetaI);\n    }\n\n    // Compute _cosThetaT_ using Snell\'s law\n    float sinThetaI = sqrt(max(0., 1. - cosThetaI * cosThetaI));\n    float sinThetaT = etaI / etaT * sinThetaI;\n\n    // Handle total internal reflection\n    if (sinThetaT >= 1.) return 1.;\n    float cosThetaT = sqrt(max(0., 1. - sinThetaT * sinThetaT));\n    float Rparl = ((etaT * cosThetaI) - (etaI * cosThetaT)) /\n                  ((etaT * cosThetaI) + (etaI * cosThetaT));\n    float Rperp = ((etaI * cosThetaI) - (etaT * cosThetaT)) /\n                  ((etaI * cosThetaI) + (etaT * cosThetaT));\n    return (Rparl * Rparl + Rperp * Rperp) / 2.;\n}\n\nvec3 sample_f_4181093413(vec2 rand, vec3 N, vec3 wo, inout vec3 wi, inout float pdf) {    \n    float ior1 = 1.0;\n    float ior2 = 1.45;\n    vec3 reflect_color = vec3(1.0);\n    float F = dielectric_fr_1535977339(dot(N, wo), ior1, ior2);\n    F = 1.0;\n    bool entering = dot(wo, N) >= 0.0;\n    ior1 = entering? ior1: ior2;\n    ior2 = entering? ior2: ior1;\n    vec3 normal = entering? N : -N;\n\n    if (rand.x < F) {\n        pdf = F;\n        wi = reflect(-wo, normal);        \n        return vec3(F) * reflect_color;\n    } else {        \n        pdf = 1.0 - F;            \n        wi = refract(-wo, normal, ior1 / ior2);        \n        return vec3(1.0 - F) * reflect_color;\n    }\n}\n\nvec3 eval_0(const vec3 N, const vec3 wo, const vec3 wi) {\n    float dot_wi_n = dot(wi, N);\n    if (dot_wi_n <= 0. || dot(wo, N) <= 0.) return vec3(0);\n    return vec3(dot_wi_n / PI_0);\n}\n\nfloat pdf_0(in vec3 N, in vec3 wi) {\n    return abs(dot(N, wi)) / PI_0;\n}\n\nfloat sdBox( vec3 p, vec3 b ) {\n    vec3 q = abs(p) - b;\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat sdCross( in vec3 p ) {\n    float da = sdBox(p.xyz,vec3(10000.,1.0,1.0));\n    float db = sdBox(p.yzx,vec3(1.0,10000.,1.0));\n    float dc = sdBox(p.zxy,vec3(1.0,1.0,10000.));\n    return min(da,min(db,dc));\n}\n\nfloat map( in vec3 p ) {\n\n    float d = sdBox(p,vec3(1.0));\n    float s = 1.0;\n    for( int m=0; m<3; m++ ) {\n        vec3 a = mod( p*s, 2.0 )-1.0;\n        s *= 3.0;\n        vec3 r = abs(1.0 - 3.0*abs(a));\n        float c = sdCross(r)/s;\n        d = max(d,-c);\n    }\n    return d;\n\n/*\n    float d = sdf_box(p,vec3(0.7));\n    float s = 1.0;\n    for( int m=0; m<4; m++ ) {\n        vec3 a = mod( p*s, 2.0 )-1.0;\n        s *= 3.0;\n        vec3 r = abs(1.0 - 3.0*abs(a));\n        float da = max(r.x,r.y);\n        float db = max(r.y,r.z);\n        float dc = max(r.z,r.x);\n        float c = (min(da,min(db,dc))-1.0)/s;\n        d = max(d,c);\n    }\n    return d;\n    */\n}\n\nvec3 normal_0( in vec3 pos ) {\n    vec3 eps = vec3(0.0001,0.0,0.0);\n    return normalize( vec3(\n      map( pos+eps.xyy ) - map( pos-eps.xyy ),\n      map( pos+eps.yxy ) - map( pos-eps.yxy ),\n      map( pos+eps.yyx ) - map( pos-eps.yyx ) ) );\n}\n\nfloat raymarch( in vec3 ro, in vec3 rd, inout vec3 normal ) {    \n    float res = -1.0;\n    float tmax = 3.;\n    float t = 0.01;\n    for (int i=0; i <45; i++) {\n        float h = map(ro+rd*t);\n        if( h<0.001 || t>tmax ) break;\n        t +=  h;\n    }    \n    if( t < tmax ) {\n        res = t;\n        normal = normal_0(ro + rd * t);\n    }\n    else res = MAX_DIST;\n    return res;\n}\n\n#define DIRECT_LIGHT_SAMPLE\n#define MI_SAMPLE\n\n#define LIGHT_NUM 1\nLight lights[LIGHT_NUM];\n\nconst vec3 colors[6] = vec3[6](\n    vec3(1),\n    vec3(0.9647, 0.5255, 0.9804),\n    vec3(0.3529, 0.9686, 0.8627),\n    vec3(0.4471, 0.4118, 0.9608),\n    vec3(0.8667, 0.6353, 0.1294),\n    vec3(1)\n);\n\nvec3 glass_sample_f(vec2 rand, vec3 N, vec3 wo, inout vec3 wi, inout float pdf) {    \n    float ior1 = 1.0;\n    float ior2 = 1.45;\n    vec3 reflect_color = vec3(1.0);\n    float F = dielectric_fr_1535977339(dot(N, wo), ior1, ior2);\n    \n    bool entering = dot(wo, N) >= 0.0;\n    ior1 = entering? ior1: ior2;\n    ior2 = entering? ior2: ior1;\n    vec3 normal = entering? N : -N;\n\n    if (rand.x < F) {\n        pdf = F;\n        wi = reflect(-wo, normal);        \n        return vec3(F) * reflect_color;\n    } else {        \n        pdf = 1.0 - F;            \n        wi = refract(-wo, normal, ior1 / ior2);        \n        return vec3(1.0 - F) * reflect_color;\n    }\n}\n\nvec3 metal_sample_f(vec2 rand, vec3 N, vec3 wo, inout vec3 wi, inout float pdf) {    \n    float ior1 = 1.0;\n    float ior2 = 1.45;\n    vec3 reflect_color = vec3(1.0);\n    bool entering = dot(wo, N) >= 0.0;\n    vec3 normal = entering? N : -N;\n    pdf = 1.0;\n    wi = reflect(-wo, normal);        \n    return reflect_color;    \n}\n\n// must be trace last\nbool trace_lights(in vec3 res, in Ray ray, inout int light_id) {\n    vec3 normal;\n    light_id = -1;\n    for (int i = 0; i < LIGHT_NUM; i++) {\n        Light light = lights[i];\n        switch (light.type) {\n            case QUAD_LIGHT: \n                vec3 size = vec3((light.rotation * light.u).x, 0.0001, (light.rotation * light.v).z);\n                float t = intersect_0(light.rotation * (ray.o - light.pos), light.rotation * ray.dir, size, res.xy, normal);\n                if (t < res.y) {\n                    light_id = i;\n                    res.y = t;\n                } break;\n            case DIR_LIGHT: break;\n        }\n    }\n    return (light_id >= 0);\n}\n\nvec3 compare(float id, vec3 res, float t) {\n\treturn (t < res.y) ? vec3(res.x, t, id) : res;\n}\n\n#define LAMBERT 0\n#define METAL_SPECULAR 1\n#define GLASS_SPECULAR 2\n#define WOOD 3\n\n#define SPHERE_POSITION vec4(-0.6, .4, .3, .4)\n\nfloat trace_shadow(vec2 near_far, in Ray ray) {\n    vec3 result = vec3(near_far, -1000); // near, far, hit_id\n    vec3 normal;\n    //result = compare(2., result, raymarch(ray.o + vec3(0, -1.0, 0), ray.dir, normal));\n\n    result = compare(4., result, intersect_2(ray.o, ray.dir, SPHERE_POSITION, result.xy, normal));\n    result = compare(5., result, intersect_2(ray.o, ray.dir, vec4(0.6, .4, -.6, .4),     result.xy, normal));\n    result = compare(3., result, intersect_2(ray.o, ray.dir, vec4(0.6, .3, 0.6, .3), result.xy, normal));\n    \n\n    return result.y;\n}\n\nuniform vec3 color;\nuniform int type;\n\nfloat trace_ray(vec2 near_far, in Ray ray, inout PerRayData prd, inout Material material) {\n    vec3 result = vec3(near_far, -1000); // near, far, hit_id\n    \n    result = compare(4., result, intersect_2(ray.o, ray.dir, SPHERE_POSITION, result.xy, prd.normal));\n    result = compare(5., result, intersect_2(ray.o, ray.dir, vec4(0.6, .4, -.6, .4), result.xy, prd.normal));          \n    result = compare(3., result, intersect_2(ray.o, ray.dir, vec4(0.6, .3, 0.6, .3), result.xy, prd.normal));\n\n    // cornel\n    result = compare( 0., result, intersect_3(ray.o, ray.dir,  vec4(0, 1, 0, 0), result.xy, prd.normal)); // bottom\n    result = compare( 1., result, intersect_3(ray.o, ray.dir,  vec4(1, 0, 0, 1), result.xy, prd.normal)); // left \n    result = compare( 2., result, intersect_3(ray.o, ray.dir,  vec4(-1, 0, 0, 1),  result.xy, prd.normal)); // right\n    result = compare( 0., result, intersect_3(ray.o, ray.dir,  vec4(0, -1, 0, 2),  result.xy, prd.normal)); // top\n    result = compare( 0., result, intersect_3(ray.o, ray.dir,  vec4(0, 0, 1, 1), result.xy, prd.normal)); // back  \n\n    prd.light = false;\n\n    int lightId;    \n    if (/*prd.bounce > 0 &&*/ trace_lights(result, ray, lightId)) {\n        Light light = lights[lightId];        \n        prd.light = true;\n        prd.li = light.color;\n        return result.y;\n    } \n    if (result.z <= .5) { // the closest hit is something (not light)\n        material.type = LAMBERT;\n        material.color = colors[int(result.z)];\n    } else if (result.z <= 1.5) {\n        material.color = vec3(1.0);\n        material.type = METAL_SPECULAR;\n    } else if (result.z <= 2.5) {\n        material.type = LAMBERT;\n        material.color = color;// colors[int(result.z)];                \n    } else if (result.z <= 3.5) {\n        material.type = METAL_SPECULAR;\n        material.color = colors[int(result.z)];                \n    } else if (result.z <= 4.5) {\n        material.type = type;\n        material.color = vec3(1.0);\n    } else if (result.z <= 5.5) {\n        material.type = LAMBERT;\n        material.color =  vec3(0.4471, 0.4118, 0.9608);\n    } else { // we dont hit anything\n        prd.light = true;            \n        prd.li = vec3(0.0);\n    }\n\n    return result.y;\n}\n\nuniform sampler2D wood;\n\n// sample_f\nvec3 material_sample (inout Material mat, vec2 u, in vec3 hit, in vec3 N, in vec3 wo, inout vec3 wi, inout float pdf) {\n    vec3 bsdf;\n    switch(mat.type) {\n        case LAMBERT:\n            bsdf = sample_f_1921068617(u, N, wo, wi, pdf) * mat.color;\n            break;\n        case METAL_SPECULAR:\n            bsdf = metal_sample_f(u, N, wo, wi, pdf);\n            break;\n        case GLASS_SPECULAR:    \n            bsdf = glass_sample_f(u, N, wo, wi, pdf);\n            break;\n        case WOOD:\n            vec3 dir = normalize(hit - vec3(SPHERE_POSITION));\n            float PI = 3.14;\n            float phi = atan(dir.z, dir.x);  // [-PI , PI]\n            float theta = asin(dir.y); // [-PI/2, PI/2]\n            vec2 uv;\n            uv.x = phi / (2.0 * PI) + 0.5; // [0, 1], +x -> 0.5\n            uv.y = theta / PI + 0.5; // [0, 1]\n            vec4 woodTex = texture(wood, uv);\n            bsdf = sample_f_1921068617(u, N, wo, wi, pdf) * woodTex.rgb;\n    }\n    return bsdf;\n}\n\nvec3 material_eval (inout Material mat, in vec3 hit, in vec3 N, in vec3 wo, in vec3 wi) {    \n    vec3 bsdf;\n    switch(mat.type) {\n        case LAMBERT:\n            bsdf = eval_0(N, wo, wi) * mat.color;\n            break;\n        case METAL_SPECULAR:\n            bsdf = vec3(0); // no chance \n            break;\n        case WOOD:\n            vec3 dir = normalize(hit - vec3(SPHERE_POSITION));\n            float PI = 3.14;\n            float phi = atan(dir.z, dir.x);  // [-PI , PI]\n            float theta = asin(dir.y); // [-PI/2, PI/2]\n            vec2 uv;\n            uv.x = phi / (2.0 * PI) + 0.5; // [0, 1], +x -> 0.5\n            uv.y = theta / PI + 0.5; // [0, 1]\n            vec4 woodTex = texture(wood, uv);\n            bsdf = eval_0(N, wo, wi) * woodTex.rgb;            \n    }\n    return bsdf;\n}\n\nfloat material_pdf(int type, vec3 normal, vec3 wi, vec3 wo) {\n    float pdf;\n    switch(type) {\n        case LAMBERT:\n            pdf = pdf_0(normal, wi);\n        case METAL_SPECULAR:            \n            pdf = 0.0; // no chance\n    }\n    return pdf;\n}\n\nvoid direct_sample_light(inout uint seed, inout PerRayData prd, in Material material) {\n    vec3 li; vec3 sample_dir; float pdf; float dist; vec3 wi; vec3 facing_dir; vec3 cross_uv;\n    for (int i = 0; i < LIGHT_NUM; i++) {\n        Light light = lights[i];\n\n        switch (light.type) {\n            case QUAD_LIGHT:\n                cross_uv = cross(light.u, light.v);\n                float area = length(cross_uv) * 4.;\n                vec2 rand = 2.0 * hash2(seed) - 1.0;    \n                wi = light.pos + rand.x * light.u + rand.y * light.v - prd.hit;\n                dist = length(wi);\n                wi = wi / dist;\n                li = light.color;\n                pdf = (dist * dist / abs(dot(normalize(cross_uv), wi))) * (1. / area); // convert pdf(A) to pdf(W)\n                break;\n            case DIR_LIGHT:\n                break;\n        }\n\n        if (dot(prd.normal, wi) <= 0. || pdf <= 0.0) break; // shading nomral is not facing the sample light\n        Ray ray;\n        ray.o = prd.hit;\n        ray.dir = wi;\n        if (trace_shadow(vec2(EPS, dist), ray) < dist) break;  // damn we are in shadow\n        vec3 bsdf = material_eval(material, prd.hit, prd.normal, prd.wo, wi);\n        prd.rad += prd.throughput * bsdf * li / max(0.0001, pdf);\n    }\n\n}\n\nvec3 run_path_tracer(inout Ray ray, inout uint seed) {\n    PerRayData prd;\n    prd.rad = vec3(0);\n    prd.throughput = vec3(1.0);\n    prd.light = false;\n    Material material;\n    bool is_specular_bounce = false;\n    for (int bounce = 0; bounce <= MAX_BOUNCES; bounce++) {\n        prd.bounce = bounce;\n        float t = trace_ray(vec2(EPS, MAX_DIST), ray, prd, material);    \n        if (prd.light) {        \n            #ifndef DIRECT_LIGHT_SAMPLE\n                prd.rad += prd.throughput * prd.li;\n            #else\n                if (bounce == 0 || is_specular_bounce) prd.rad += prd.throughput * prd.li;\n            #endif\n            break; // quit here\n        }\n\n        vec3 hit = ray.o + ray.dir * t;\n        prd.hit = hit;\n        prd.wo = -ray.dir;\n\n        is_specular_bounce = material.type == METAL_SPECULAR;\n\n        #ifdef DIRECT_LIGHT_SAMPLE\n            if (!is_specular_bounce) direct_sample_light(seed, prd, material);\n        #endif\n        float pdf;        \n\n        vec3 bsdf = material_sample(material, hash2(seed), hit, prd.normal, prd.wo, prd.wi, pdf);\n        \n        prd.throughput *= bsdf / vec3(pdf);\n        ray.o = hit;\n        ray.dir = prd.wi;        \n    }\n    return prd.rad;\n}\n\nvoid init_lights() {\n    vec3 u = vec3(.4, 0, 0);\n    vec3 v = vec3(0, 0, .4);\n    mat3 invRot = transpose(mat3(normalize(u), normalize(cross(v, u)), normalize(v)));\n    lights[0] = Light(QUAD_LIGHT, vec3(5.), vec3(0, 2.0, 0), u, v, invRot);\n}\n\nvoid main() {\n     \n    vec3 eye = vec3(0., 1., 2.9);\n    vec3 tar = vec3(0., 1., 2.0);\n\n    vec2 ndc = (gl_FragCoord.xy - 0.5) / size * 2.0 - 1.0;  // -1, 1\n    //float seed = float(baseHash(floatBitsToUint(ndc))) / float(0xffffffffU) + time;  // hash1\n    uint seed = uint(uint(gl_FragCoord.x) * uint(1973) + uint(gl_FragCoord.y) * uint(9277) + uint(frame) * uint(26699)) | uint(1);    \n\n    ndc += 2.0 * hash2(seed) / size; // jitter AA    \n    Ray ray = camera_ray_3771232466(eye, tar, ndc);    \n\n    init_lights();\n    vec3 rad = run_path_tracer(ray, seed);\n    vec4 result = vec4(rad, 1.0);\n    \n    if (frame > 0) {\n        vec2 uv = gl_FragCoord.xy / size;    \n        vec4 prev = texture(buffer, uv);\n        result = mix(result, prev, float(frame) / (float(frame) + 1.));\n    }\n\n    fragColor = result;\n\n}\n'])}),v=s({vs:c,fs:l(["#version 300 es\nprecision highp float;\n#define GLSLIFY 1\nuniform vec2 size;\nuniform sampler2D buffer;\n\nout vec4 fragColor;\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / size;\n    vec4 color = texture(buffer, uv);\n    fragColor = vec4(sqrt(color.rgb), color.a);\n}\n"])}),g=new r(!0),y=new n(u,{webgl2:!0});let x,E=0;const T={dataType:o.FLOAT,format:o.RGBA,internalFormat:o.RGBA32F,wrapS:o.CLAMP_TO_EDGE,wrapT:o.CLAMP_TO_EDGE,magFilter:o.NEAREST,minFilter:o.NEAREST,anistropy:1};let S=new i(T),R=new i(T);const M=()=>{const t=g.getIntervalSeconds();x=requestAnimationFrame(M),y.computeCanvasSize()&&(y.context.setScreenViewport([0,0,y.width,y.height]),S.resize(y.width,y.height),R.resize(y.width,y.height),e=0);try{E+=t,e++,((e,t,n)=>{e.context.bindRenderTarget(S);const r={size:[e.width,e.height],frame:t++,time:n,buffer:R.colorTexture,wood:b.wood,color:_,type:f,MAX_BOUNCES:Number(h)};e.draw(m,{uniforms:r}),e.context.bindRenderTarget(null),r.buffer=S.colorTexture,e.draw(v,{uniforms:r});let i=S;S=R,R=i})(y,e,E)}catch(e){console.error(e),cancelAnimationFrame(x)}};M()}()}).call(this)}).call(this,"/pathtracer_3")},{"..":44,"../BigTriangle":3,"../loader/texture":45,glslify:63}],77:[function(e,t,n){(function(e){(function(){t.exports={AberrationBalanceTone_FS:"\nvarying vec2 varyUV;\nout vec4 gl_FragColor;\n\nuniform sampler2D uColorTexture;\nuniform sampler2D uTransparentsTexture;\n\n#if defined CHROMATICABERRATION\n\nuniform float uIntensity;\n\nvec4 chromaticAberration (vec4 color) {\n\n    vec2 direction = varyUV - 0.5;\n\n    // Double its length without changing its direction...\n    direction *= length(direction);\n\n    vec2 offset = direction * uIntensity;\n\n    color.r = texture2D(uColorTexture, varyUV - offset).r;\n    color.g = texture2D(uColorTexture, varyUV).g;\n    color.b = texture2D(uColorTexture, varyUV + offset).b;\n\n    return color;\n\n}\n\n#endif\n\n#if defined COLORBALANCE\n\nuniform vec3 uColorBalanceShadows;\nuniform vec3 uColorBalanceMidTones;\nuniform vec3 uColorBalanceHighLights;\nuniform float uPreserveLuminosity;\n\nfloat RGBToL(const in vec3 color) {\n    float fmin = min(min(color.r, color.g), color.b);\n    float fmax = max(max(color.r, color.g), color.b);\n    return (fmax + fmin) / 2.0;\n}\n\nvec3 RGBToHSL(vec3 color)\n{\n\tvec3 hsl;\n\n\tfloat fmin = min(min(color.r, color.g), color.b);   \n\tfloat fmax = max(max(color.r, color.g), color.b);  \n\tfloat delta = fmax - fmin;            \n\n\thsl.z = (fmax + fmin) / 2.0; \n\n\tif (delta == 0.0) {\n\n\t\thsl.x = 0.0;\t\n\t\thsl.y = 0.0;\n\n\t}\n\telse                                    \n\t{\n\t\tif (hsl.z < 0.5) hsl.y = delta / (fmax + fmin); \n\t\telse hsl.y = delta / (2.0 - fmax - fmin); \n\t\t\n\t\tfloat deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;\n\t\tfloat deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;\n\t\tfloat deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;\n\t\t\n\t\tif (color.r == fmax ) hsl.x = deltaB - deltaG;\n\t\telse if (color.g == fmax) hsl.x = (1.0 / 3.0) + deltaR - deltaB; \n\t\telse if (color.b == fmax) hsl.x = (2.0 / 3.0) + deltaG - deltaR;\n\t\t\n\t\tif (hsl.x < 0.0) hsl.x += 1.0;\n\t\telse if (hsl.x > 1.0) hsl.x -= 1.0;\n\t}\n\n\treturn hsl;\n}\n\t\nfloat HueToRGB(float f1, float f2, float hue)\n{\n\tif (hue < 0.0) hue += 1.0;\n\telse if (hue > 1.0) hue -= 1.0;\n\tfloat res;\n\tif ((6.0 * hue) < 1.0) res = f1 + (f2 - f1) * 6.0 * hue;\n\telse if ((2.0 * hue) < 1.0) res = f2;\n\telse if ((3.0 * hue) < 2.0) res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\n\telse res = f1;\n\treturn res;\n}\n\t\nvec3 HSLToRGB(vec3 hsl)\n{\n\tvec3 rgb;\n\n\tif (hsl.y == 0.0) rgb = vec3(hsl.z); // Luminance\n\telse {\n\t\tfloat f2;\n\t\t\n\t\tif (hsl.z < 0.5) f2 = hsl.z * (1.0 + hsl.y);\n\t\telse f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);\n\t\t\n\t\tfloat f1 = 2.0 * hsl.z - f2;\n\t\t\n\t\trgb.r = HueToRGB(f1, f2, hsl.x + (1.0/3.0));\n\t\trgb.g = HueToRGB(f1, f2, hsl.x);\n\t\trgb.b= HueToRGB(f1, f2, hsl.x - (1.0/3.0));\n\t}\n\n\treturn rgb;\n}\n\t\nvec4 colorBalance(vec4 color) {\n\n    float lightness = RGBToL(color.rgb);\n    float a = 0.25;\n    float b = 0.333;\n    float scale = 0.7;\n\t\n    vec3 shadows  = uColorBalanceShadows * clamp((lightness - b) / -a + 0.5, 0.0, 1.0);\n    vec3 midtones = uColorBalanceMidTones * clamp((lightness - b) / a + 0.5, 0.0, 1.0) * clamp((lightness + b - 1.0) / -a + 0.5, 0.0, 1.0);\n    vec3 highlights  = uColorBalanceHighLights * clamp((lightness + b - 1.0) / a + 0.5, 0.0, 1.0);\n    // vec3 newColor = clamp(color.rgb + (shadows + midtones + highlights) * scale, vec3(0.0), vec3(1.0));\n\n    vec3 newColor = max(color.rgb + (shadows + midtones + highlights) * scale, vec3(0.0));\n    float len = length(newColor);\n    newColor = len < 1e-5 ? newColor * cLen : newColor * cLen / len;\n\n    if (uPreserveLuminosity > 0.0) {\n\t\n\t\tvec3 newHSL = RGBToHSL(newColor);\n\t\treturn vec4(HSLToRGB(vec3(newHSL.x, newHSL.y, lightness)), color.a);\n          \n\t} else {\n\n\t\treturn vec4(newColor, color.a);\n\n\t}\n\n}\n\n#endif\n\n#if defined TONEMAPPING\n\nuniform float uToneBrightness;\nuniform float uToneContrast;\nuniform float uToneExposure;\nuniform float uToneSaturation;\nuniform float uToneMethod;\n\nfloat getLuminance(const in vec3 color) {\n\n    const vec3 colorBright = vec3(0.2126, 0.7152, 0.0722);\n    return dot(color, colorBright);\n\n}\n\nvec3 toneMapping(const in vec3 color) {\n\n    vec3 col = color * uToneExposure;\n\n    float luminance = dot(col * (1.0 + uToneBrightness), vec3(0.2126, 0.7152, 0.0722));\n\n    col = mix(vec3(luminance), col * (1.0 + uToneBrightness), vec3(uToneSaturation));\n\n    float toneContrast = uToneContrast;\n\n    col = max(vec3(0.0), col * (1.0 + toneContrast) - 0.5 * toneContrast);\n\n    if(uToneMethod == 1.0) {\n\n        col /= 1.0 + getLuminance(col);\n\n    }\n\n    else if( uToneMethod == 2.0) {\n\n        vec3 x = max(vec3(0.0), col - 0.004);\n\n        col = (x * (6.2 * x + 0.5) ) / ( x * (6.2 * x + 1.7) + 0.06);\n\n        col = pow(col, vec3(2.2));\n\n    }\n\n    return col;\n\n}\n#endif\n\nvec3 decodeRGBM(vec4 rgbm, float range) {\n    return (range * rgbm.a) * rgbm.rgb;    \n}\n            \nvec3 decodeRGBM7(vec4 rgbm) {\n    return decodeRGBM(rgbm, 7.0);\n}\n\n#if defined TRANSPARENT_BACKGROUND\n\nuniform sampler2D uDepthTexture;\n\nfloat unpackRGBAToFloat( vec4 rgba ) {\n    return dot( rgba, vec4(1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0) );\n}\n\n#endif\n\n\nvoid main () {\n\n\t// vec4 color = vec4(decodeRGBM7(texture2D(uColorTexture, varyUV)), 1.0);\n\tvec4 color = texture2D(uColorTexture, varyUV);\n#if defined TRANSPARENT_BACKGROUND\n\tfloat alpha = texture2D(uTransparentsTexture, varyUV).a;\n    float depth = unpackRGBAToFloat(texture2D( uDepthTexture, varyUV));\n\tif (depth > 1.0) {\n\t\tcolor.a = alpha;\n\t}\n#endif\n\n\n#if defined CHROMATICABERRATION\n\n    color = chromaticAberration(color);\n\n#endif\n\n#if defined COLORBALANCE\n\n    color = colorBalance(color);\n\n#endif\n\n#if defined TONEMAPPING\n\n    color.rgb = toneMapping(color.rgb);\n\n#endif\n\n    color.rgb = gammaOutput(color.rgb);\n\tgl_FragColor = color;\n\n}\n",AlbedoConstant_FS:"\nuniform vec3 uDiffuseColor;\n\nvoid getAlbedo()\n{\n    gAlbedo = uDiffuseColor.rgb;\n}\n\n",AlbedoMap_FS:"\nuniform sampler2D diffuseMap;\n\nvoid getAlbedo()\n{\n    gAlbedo = gammaInput(diffuseMap, $(UV)).$(CHANNEL);\n}\n\n",AlbedoMapTint_FS:"\nuniform sampler2D diffuseMap;\nuniform vec3 uDiffuseColor;\n\nvoid getAlbedo()\n{\n    gAlbedo = gammaInput(diffuseMap, $(UV)).$(CHANNEL) * uDiffuseColor;\n}\n\n",AlbedoWithAlpha_FS:"\nuniform sampler2D diffuseMap;\n\nvec3 gAlbedo;\n\nvoid getAlbedo()\n{\n    vec4 tex = texture2D(diffuseMap, $(UV));\n\n    gAlbedo = tex.rgb;\n\n    gAlpha *= tex.a;\n\n}\n\n",AlphaTest_FS:"\nuniform float uAlphaTestValue;\n\nvoid alphaTest (float alpha) {\n\n    if (alpha < uAlphaTestValue) discard;\n\n}\n",AmbientColorTint_FS:"\nuniform vec3 ambientColor;\n\n\nvoid ambientColorOcclude() {\n\n    gDiffuseLight *= ambientColor;\n\n}\n\n",AmbientConstant_FS:"\nuniform vec3 uSceneAmbient;\n\n void addAmbient() {\n\n     gDiffuseLight += uSceneAmbient;\n\n }",AoMap_FS:"\nuniform sampler2D aoMap;\nuniform float uAOFactor;\n\nfloat getMaterialAmbientOcclude () {\n\n    return mix(1.0, texture2D(aoMap, $(UV)).$(CHANNEL), uAOFactor);\n\n}\n\n/*\nuniform float uAmbient\nfloat gAmbientOcclusion = 1.0;\n\nvoid ambientOcclude() {\n\n    gAmbientOcclusion = gAmbientOcclusion * texture2D(aoMap, $(UV)).$(CHANNEL);\n    gDiffuseLight *= gAmbientOcclusion;\n\n}\n*/",Billboard_FS:'#include "common.h"\n\nuniform sampler2D texture;\nuniform float alpha;\nout vec2 uv;\n\nvoid main() {\n\n\tvec4 tex = texture2D(texture, uv);\n\n\ttex.a *= alpha;\n\n\tgl_FragColor = tex;\n\n}\n',Billboard_VS:"// Created By ShengJianWen\n\nin vec3 vPosition;\nin vec2 vUV1;\n\nuniform mat4 uWorldMat;\nuniform mat4 uViewMat;\nuniform mat4 uProjection;\n\nout vec2 varyUV1;\n\nvoid main() {\n\n    varyUV1 = vUV1;\n\n    mat4 mat = uViewMat * uWorldMat;\n\n    float scaleX = length(mat[0].xyz);\n    float scalez = length(mat[2].xyz);\n\n    mat[0][0] = scaleX;\n    mat[0][1] = 0.0;\n    mat[0][2] = 0.0;\n\n    #if defined(RENDERMODE_BILLBOARD)\n\n    float scaleY = length(mat[1].xyz);\n    \n    mat[1][0] = 0.0;\n    mat[1][1] = scaleY;\n    mat[1][2] = 0.0;\n\n    #endif\n\n    mat[2][0] = 0.0;\n    mat[2][1] = 0.0;\n    mat[2][2] = scalez;\n\n    gl_Position = uProjection * mat * vec4(vPosition, 1.0);\n\n}\n\n\n/*\nvoid main() {\n\n\n    varyUV1 = vUV1;\n    vec3 viewPos = vec3(uViewMat * uWorldMat * origin);\n\n    // Importance: 1. Make sure that the world-matrix' scale part is applied on this billboard.\n    float scaleX = length(uWorldMat[0].xyz);\n    float scaleY = length(uWorldMat[1].xyz);\n    float sclaeZ = length(uWorldMat[2].xyz);\n    vec3 position = vec3(scaleX * vPosition.x, scaleY * vPosition.y, 0.0);\n\n    // Importance: 2. Then make sure the world-matrix's position applied on this billboard.\n    gl_Position = uProjection * vec4(viewPos + position, 1.0);\n\n}\n\n*/\n",Binormal_VS:"\n\nvec3 getBinormal(vec3 normal, vec3 tangent, float handness) {\n\n    return normalize(cross(normal, tangent) * handness);\n\n}\n",BloomCombineUE_FS:"\n\nvarying vec2 varyUV;\nuniform sampler2D blur0;\nuniform sampler2D blur1;\nuniform sampler2D blur2;\nuniform sampler2D blur3;\nuniform sampler2D blur4;\nuniform vec3 uParam;\n\n\nuniform sampler2D uColorTexture;\n\nfloat lerpBloomFactor(const in float factor) {\n\n\tfloat mirrorFactor = 1.2 - factor;\n\treturn mix(factor, mirrorFactor, uParam.y);\n\n}\n\nvec3 gammaOutput(vec3 color) {\n    return vec3( color.r < 0.0031308 ? color.r * 12.92 : 1.055 * pow(color.r, 1.0/2.4) - 0.055, color.g < 0.0031308 ? color.g * 12.92 : 1.055 * pow(color.g, 1.0/2.4) - 0.055, color.b < 0.0031308 ? color.b * 12.92 : 1.055 * pow(color.b, 1.0/2.4) - 0.055);\n}\n\nvoid main() {\n\n    vec4 bloom = uParam.x * ( lerpBloomFactor(1.1) * texture2D(blur0, varyUV) +\n\t\t\t\t\t \t\t  lerpBloomFactor(0.9) * texture2D(blur1, varyUV) +\n\t\t\t\t\t\t\t  lerpBloomFactor(0.6) * texture2D(blur2, varyUV) +\n\t\t\t\t\t\t\t  lerpBloomFactor(0.3) * texture2D(blur3, varyUV) +\n\t\t\t\t\t\t\t  lerpBloomFactor(0.1) * texture2D(blur4, varyUV) );\n\n    vec4 base = texture2D(uColorTexture, varyUV);\n\n    gl_FragColor =  vec4( (bloom + base - uParam.z * bloom * base).rgb, base.a );\n\n}",Bokeh_FS:"uniform sampler2D uColorTexture;\nuniform sampler2D uDepthTexture;\n\nuniform float uFocusNear;\nuniform float uFocusFar;\n\nuniform float uNear;\nuniform float uFar;\n\nuniform vec4 uBlurOffsetNearFar;\n\nuniform float uAspect;\n\nvarying vec2 varyUV;\n\n\n/*\n    vec2 aspectcorrect = vec2(1.0, uMaxBlurApertureAspectFocus.z);\n\n    float packDepth = unpackRGBAToFloat(texture2D(uDepthTexture, varyUV));\n\n    float depth = packDepth * (uFar - uNear) + uNear;\n\n    float factor = (depth - uMaxBlurApertureAspectFocus.w);\n\n    vec2 dofblur = vec2 ( clamp( factor * uMaxBlurApertureAspectFocus.y, -uMaxBlurApertureAspectFocus.x, uMaxBlurApertureAspectFocus.x ) );\n*/\n\nvoid main() {\n\n    vec2 aspectcorrect = vec2(1.0, uAspect);\n\n    float packDepth = unpackRGBAToFloat(texture2D(uDepthTexture, varyUV));\n\n    float focus = (uBlurOffsetNearFar.w - uBlurOffsetNearFar.z) * uBlurOffsetNearFar.y + uBlurOffsetNearFar.z;\n\n    float depth = packDepth * (uFar - uNear) + uNear; // depth view\n\n    float diff = depth - focus;\n\n    diff = diff / (diff < 0.0 ? (focus - uBlurOffsetNearFar.z) : uBlurOffsetNearFar.w - focus);\n\n    diff = clamp(diff, -1.0, 1.0);\n\n    vec2 dofblur = vec2(diff * uBlurOffsetNearFar.x); //  ; vec2 ( clamp( , -uMaxBlurApertureAspectFocus.x, uMaxBlurApertureAspectFocus.x ) );\n\n\tvec2 dofblur9 = dofblur * 0.9;\n\tvec2 dofblur7 = dofblur * 0.7;\n\tvec2 dofblur4 = dofblur * 0.4;\n\n\tvec4 col = vec4( 0.0 );\n\n\tvec4 origin = texture2D( uColorTexture, varyUV.xy );\n\n\t// col += origin;\n\n\tcol += origin;\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\n\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\n\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\n\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\n\tcol += texture2D( uColorTexture, varyUV.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\n\n\tgl_FragColor = col / 41.0;\n\tgl_FragColor.a = origin.a;\n\n}\n",BumpMap_FS:"\nuniform vec2 uBumpMapSize;\nuniform sampler2D normalMap;\nuniform float uBumpMapFactor;\n\nvec2 getMaterialBumpMap() {\n    vec3 invSize = vec3(1.0 / uBumpMapSize, 0.0);\n    float lf = texture2D(normalMap, $(UV) - invSize.xz).g; // left\n    float rt = texture2D(normalMap, $(UV) + invSize.xz).g; // right\n    float tp = texture2D(normalMap, $(UV) + invSize.zy).g; // top\n    float bm = texture2D(normalMap, $(UV) - invSize.zy).g; // bm\n    return vec2(lf - rt, tp - bm) * uBumpMapFactor;\n}",CavityMap_FS:"\nuniform float uCavityIntensity;\nuniform sampler2D cavityMap;\n\n\nfloat getMaterialCavity() {\n     \n     return mix(1.0, texture2D(cavityMap, $(UV)).$(CHANNEL), uCavityIntensity);\n\n}\n\n\n",ChromaticAberrations_FS:"// Created by ShengJianWen\n\n\nvarying vec2 varyUV;\n\nuniform sampler2D uColorTexture;\nuniform float uIntensity;\n\n\nvec4 chromaticAberration (sampler2D texture, const vec2 uv) {\n\n    vec2 direction = uv - 0.5;\n\n    // Double its length without changing its direction...\n    direction *= length(direction);\n\n    vec2 offset = direction * uIntensity;\n\n    vec4 color = texture2D(texture, uv);\n\n    color.r = texture2D(texture, uv - offset).r;\n    color.g = texture2D(texture, uv).g;\n    color.b = texture2D(texture, uv + offset).b;\n\n    return color;\n\n}\n\nvoid main () {\n\n    gl_FragColor = vec4(chromaticAberration(uColorTexture, varyUV));\n\n}\n",ClearCoatCookTorranceSpecularBRDF_FS:"\nvoid clearCoatCookTorranceSpecularBRDF(\n                                      const in float roughness,\n                                      const in float ccNoV,\n                                      const in vec3 normal,\n                                      const in vec3 eyeVector,\n                                      const in vec3 lightIrradiance,\n                                      const in vec3 eyeLightDir,\n                                      const in float clearCoatFactor,\n                                      const in float uClearCoatF0,\n                                      const in float uClearCoatIor,\n                                      out vec3 clearCoatSpecular,\n                                      out vec3 clearCoatAttenuation) {\n\n/*\n    if (dotNL <= 0.0) {\n        clearCoatSpecular = vec3(0.0);\n        clearCoatAttenuation = vec3(0.0);\n        return;\n    }\n*/\n    float linearRoughness = roughness * roughness;\n\n    float NdotV = abs( dot (normal, eyeVector)) + 1e-5; // avoid artifact\n    float ccNoL = clamp(dot(normal, -refract(eyeLightDir, normal, 1.0 / uClearCoatIor)), 0., 1.);\n    vec3 clearCoatAbsorption = getClearCoatAbsorbtion(ccNoV, ccNoL, clearCoatFactor);\n    vec3 H = normalize(eyeVector + eyeLightDir);\n    float NoH = clamp(dot(normal, H), 0., 1.);\n    float VoH = clamp(dot(eyeLightDir, H), 0., 1.); // == LoH\n    float D = D_GGX(NoH, linearRoughness);\n    float V = V_SmithGGXCorrelated(NdotV, ccNoL, linearRoughness);\n    float F = F_Schlick(uClearCoatF0, 1.0, VoH);\n\n    clearCoatSpecular = (clearCoatFactor * D * V * F / 3.141593) * lightIrradiance; // sketchfab * 3.14 here...\n    clearCoatAttenuation = (1.0 - F * clearCoatFactor) * clearCoatAbsorption;\n\n}",ClearCoatNormalMap_FS:"\nuniform sampler2D clearCoatNormalMap;\nuniform float uClearCoatNormalMapRate;\n\nvec3 extractClearCoatNormalMap() {\n\n    vec4 tex = texture2D(clearCoatNormalMap, $(UV));\n\n    vec3 texNormal = (tex.rgb * 2.0 - vec3(1.0));\n\n    texNormal.y *= $(FlipY);\n\n    // Notice that we dont normalize the normal data...\n\n    texNormal = mix(vec3(0.0, 0.0, 1.0), normalize(texNormal), uClearCoatNormalMapRate);\n\n    return texNormal;\n\n}",ClearCoatRoughnessConstant_FS:"uniform float uClearCoatRoughness;\n\nfloat getMaterialClearCoatRoughness() {\n\n    return uClearCoatRoughness;\n\n}",ClearCoatRoughnessMap_FS:"uniform float uClearCoatRoughness;\nuniform sampler2D clearCoatRoughnessMap;\n\nfloat getMaterialClearCoatRoughness() {\n\n    return texture2D(clearCoatRoughnessMap, $(UV)).$(CHANNEL) * uClearCoatRoughness;\n\n}",Clearcoat_FS:"\n\nuniform float uClearCoatIntensity;\nuniform float uClearCoatThickness;\nuniform vec3 uClearCoatTint;\nuniform float uClearCoatReflectivity;\n\nfloat getClearCoatIntensity() {\n\n    return uClearCoatIntensity;\n\n}\n\nfloat getClearCoatReflectivity() {\n\n    return uClearCoatReflectivity;\n\n}\n\nvec3 beerLambert(const float NoV, const float NoL, const vec3 tint, const float d) {\n\n    return exp(tint * -(d * ((NoL + NoV) / max(NoL * NoV, 1e-3))));\n\n}\n\nvec3 getClearCoatAbsorbtion(const in float NoV, const in float NoL, const in float clearCoatFactor) {\n\n      float t = max(20.0 - uClearCoatThickness, .01);\n      vec3 tint = clamp(uClearCoatTint, 0.01, 0.99);\n      tint = -log(tint) / t;\n      return mix(vec3(1.0), beerLambert(NoV, NoL, tint, uClearCoatThickness), clearCoatFactor);\n\n}\n",ColorBalance_FS:"\nuniform sampler2D uColorTexture;\nuniform vec3 uColorBalanceShadows;\nuniform vec3 uColorBalanceMidTones;\nuniform vec3 uColorBalanceHighLights;\nuniform float uPreserveLuminosity;\nvarying vec2 varyUV;\n\nfloat RGBToL(const in vec3 color) {\n    float fmin = min(min(color.r, color.g), color.b);\n    float fmax = max(max(color.r, color.g), color.b);\n    return (fmax + fmin) / 2.0;\n}\n\nvec3 RGBToHSL(vec3 color)\n{\n\tvec3 hsl;\n\n\tfloat fmin = min(min(color.r, color.g), color.b);   \n\tfloat fmax = max(max(color.r, color.g), color.b);  \n\tfloat delta = fmax - fmin;            \n\n\thsl.z = (fmax + fmin) / 2.0; \n\n\tif (delta == 0.0)\t\t\n\t{\n\t\thsl.x = 0.0;\t\n\t\thsl.y = 0.0;\t\n\t}\n\telse                                    \n\t{\n\t\tif (hsl.z < 0.5) hsl.y = delta / (fmax + fmin); \n\t\telse hsl.y = delta / (2.0 - fmax - fmin); \n\t\t\n\t\tfloat deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;\n\t\tfloat deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;\n\t\tfloat deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;\n\t\t\n\t\tif (color.r == fmax ) hsl.x = deltaB - deltaG;\n\t\telse if (color.g == fmax) hsl.x = (1.0 / 3.0) + deltaR - deltaB; \n\t\telse if (color.b == fmax) hsl.x = (2.0 / 3.0) + deltaG - deltaR;\n\t\t\n\t\tif (hsl.x < 0.0) hsl.x += 1.0;\n\t\telse if (hsl.x > 1.0) hsl.x -= 1.0;\n\t}\n\n\treturn hsl;\n}\n\t\nfloat HueToRGB(float f1, float f2, float hue)\n{\n\tif (hue < 0.0) hue += 1.0;\n\telse if (hue > 1.0) hue -= 1.0;\n\tfloat res;\n\tif ((6.0 * hue) < 1.0) res = f1 + (f2 - f1) * 6.0 * hue;\n\telse if ((2.0 * hue) < 1.0) res = f2;\n\telse if ((3.0 * hue) < 2.0) res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\n\telse res = f1;\n\treturn res;\n}\n\t\nvec3 HSLToRGB(vec3 hsl)\n{\n\tvec3 rgb;\n\n\tif (hsl.y == 0.0) rgb = vec3(hsl.z); // Luminance\n\telse {\n\t\tfloat f2;\n\t\t\n\t\tif (hsl.z < 0.5) f2 = hsl.z * (1.0 + hsl.y);\n\t\telse f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);\n\t\t\n\t\tfloat f1 = 2.0 * hsl.z - f2;\n\t\t\n\t\trgb.r = HueToRGB(f1, f2, hsl.x + (1.0/3.0));\n\t\trgb.g = HueToRGB(f1, f2, hsl.x);\n\t\trgb.b= HueToRGB(f1, f2, hsl.x - (1.0/3.0));\n\t}\n\n\treturn rgb;\n}\n\t\nvec3 colorBalance(const in vec3 color) {\n\n    float lightness = RGBToL(color);\n    float a = 0.25;\n    float b = 0.333;\n    float scale = 0.7;\n\t\n    vec3 shadows  = uColorBalanceShadows * clamp((lightness - b) / -a + 0.5, 0.0, 1.0);\n    vec3 midtones = uColorBalanceMidTones * clamp((lightness - b) / a + 0.5, 0.0, 1.0) * clamp((lightness + b - 1.0) / -a + 0.5, 0.0, 1.0);\n    vec3 highlights  = uColorBalanceHighLights * clamp((lightness + b - 1.0) / a + 0.5, 0.0, 1.0);\n    vec3 newColor = clamp(color + (shadows + midtones + highlights) * scale, vec3(0.0), vec3(1.0));\n\n    if (uPreserveLuminosity > 0.0) {\n\t\n\t\tvec3 newHSL = RGBToHSL(newColor);\n\t\treturn HSLToRGB(vec3(newHSL.x, newHSL.y, lightness));\n          \n\t} else {\n\t\treturn newColor;\n\t}\n}\n\nvoid main () {\n\n    vec4 color = texture2D(uColorTexture, varyUV);\n    gl_FragColor = vec4(colorBalance(color.rgb), color.a);\n\n}",Combine_FS:"\n\nvec3 combine () {\n\n    return gDiffuseLight + gSpecularLight;\n    // gFinalColor.rgb = mix(gDiffuseLight * gAlbedo, gSpecularLight, gSpecular) + gReflection;\n\n}\n\n",CookTorranceSpecularBRDF_FS:"\n\nvec3 cookTorranceSpecularBRDF (const in vec3 worldNormal, const in vec3 worldViewDir, const in vec3 lightDirection) {\n    vec3 N = worldNormal;\n    vec3 V = worldViewDir;\n    vec3 L = lightDirection;\n\n    // Moving_Frostbite_to_Physically_Based_Rendering-p12\n    // a specular microfacet model with a Smith correlated visibility function and a GGX_NDF\n\n    float NdotV = abs( dot (N, V)) + 1e-5; // avoid artifact\n    vec3 H = normalize (V + L);\n    float LdotH = clamp ( dot (V, H), 0.0, 1.0); // equaivalent to VdotH, of course :)\n    float NdotH = clamp ( dot (N, H), 0.0, 1.0);\n    float NdotL = clamp ( dot (N, L), 0.0, 1.0);\n    float VdotH = clamp ( dot (V, H), 0.0, 1.0);\n\n    float adjustedRoughness = max(gRoughness, 0.045);\n    float linearRoughness = adjustedRoughness * adjustedRoughness;\n\n    // Specular BRDF\n    vec3  F = F_Schlick (gSpecularF0, gSpecularF90, VdotH); // fresnel\n    float Vis = V_SmithGGXCorrelated (NdotL, NdotV, linearRoughness); // visibility\n    float D = D_GGX (NdotH , linearRoughness); //\n\n    vec3 brdf = D * F * Vis / 3.141593;\n    // NOTICE sketchfab modifies it to D * F * Vis, I guess it relates to physically-correction-light with mutiplier of PI\n    return brdf;\n}",CubemapAmbient_FS:"\n\nvoid addAmbient() {\n\n    vec3 fixedReflDir = fixSeamsStatic(gWorldNormal, 1.0 - 1.0 / 4.0);\n\n    gDiffuseLight += envIntensify( $(DECODE)( textureCubeLodEXT(prefilter128, fixedReflDir, 5.0) ).rgb);\n\n}\n\n",CubemapAmbientLod_FS:"\n\nvoid addAmbient() {\n\n    vec3 fixedReflDir = fixSeamsStatic(environmentRotate(gWorldNormal), 1.0 - 1.0 / 4.0);\n\n    fixedReflDir.x *= -1.0;\n\n    gDiffuseLight += envIntensify( $(DECODE)( textureCubeLod(prefilter128, fixedReflDir, 5.0) ).rgb);\n\n}\n\n",CubemapAmbientNoLod_FS:"\n\nvoid addAmbient() {\n\n    vec3 fixedReflDir = fixSeamsStatic(environmentRotate(gWorldNormal), 1.0 - 1.0 / 4.0);\n\n    fixedReflDir.x *= -1.0;\n\n    gDiffuseLight += envIntensify( $(DECODE)( textureCube(prefilter4, fixedReflDir) ).rgb);\n\n}\n\n",CubemapAmbientSPH_FS:"\nuniform vec3 uSphCoef[9];\n\n//#pragma DECLARE_FUNCTION\nvec3 computeDiffuseSPH(const in vec3 sphCoef[9], const in vec3 n) {\n\n    // vec3 n = envTransform * normal;\n    // https://github.com/cedricpinson/envtools/blob/master/Cubemap.cpp#L523\n    vec3 result = sphCoef[0] +\n    sphCoef[1] * n.y +\n    sphCoef[2] * n.z +\n    sphCoef[3] * n.x +\n    sphCoef[4] * n.y * n.x +\n    sphCoef[5] * n.y * n.z +\n    sphCoef[6] * (3.0 * n.z * n.z - 1.0) +\n    sphCoef[7] * (n.z * n.x) +\n    sphCoef[8] * (n.x * n.x - n.y * n.y);\n\n    return max(result, vec3(0.0));\n\n}\n\n\nvec3 calcCubemapBasedLightingAmbient() {\n\n    vec3 fixedReflDir = gWorldNormal;\n\n    //fixedReflDir.x *= -1.0;\n\n    // gDiffuseLight += envIntensify( computeDiffuseSPH(uSphCoef, fixedReflDir) ) * gDiffuse;\n    return envIntensify( computeDiffuseSPH(uSphCoef, environmentRotate(fixedReflDir)) ) * gDiffuse;\n\n}\n\n",CubemapReflectionLod_FS:"\n//#extension GL_EXT_shader_texture_lod : enable\n\nuniform samplerCube prefilter128;\n\nuniform float uReflectivity;\n\nvoid addReflection (vec3 dir, float intensity) {\n\n    float bias = clamp(1.0 - gShininess, 0.0, 1.0) * 5.0; // multiply by max mip level\n\n    dir.x *= -1.0;\n\n    dir = environmentRotate(dir);\n\n    vec3 fixedReflDir = fixSeams(dir, bias);\n\n    gReflection += envIntensify( $(DECODE)( textureCubeLod(prefilter128, fixedReflDir, bias) ).rgb) * intensity;\n\n}",CubemapReflectionLodUE4_FS:"\nuniform sampler2D lutBRDF;\n\nvec3 integrateBRDFApproximate( const in vec3 specular, float roughness, float NoV ) {\n\n    const vec4 c0 = vec4( -1, -0.0275, -0.572, 0.022 );\n    const vec4 c1 = vec4( 1, 0.0425, 1.04, -0.04 );\n    vec4 r = roughness * c0 + c1;\n    float a004 = min( r.x * r.x, exp2( -9.28 * NoV ) ) * r.x + r.y;\n    vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n    return specular * AB.x + AB.y;\n\n}\n\nvec3 integrageLutBRDF( const in vec3 specular, const in float roughnessLinear, const in float NoV, const in sampler2D lut, const in float f90 ) {\n\n    vec4 rgba = texture2D( lut, vec2(NoV, roughnessLinear) );\n    float b = (rgba[3] * 65280.0 + rgba[2] * 255.0);\n    float a = (rgba[1] * 65280.0 + rgba[0] * 255.0);\n    const float div = 1.0/65535.0;\n    return (specular * a + b * f90) * div;\n\n}\n\n// From Sebastien Lagarde Moving Frostbite to PBR page 69\n// We have a better approximation of the off specular peak\n// but due to the other approximations we found this one performs better.\n// N is the normal direction\n// R is the mirror vector\n// This approximation works fine for G smith correlated and uncorrelated\nvec3 getSpecularDominantDir(const in vec3 N, const in vec3 R, const in float realRoughness) {\n\n    vec3 dominant;\n    float smoothness = 1.0 - realRoughness;\n    float lerpFactor = smoothness * (sqrt(smoothness) + realRoughness);\n\n    // The result is not normalized as we fetch in a cubemap\n    dominant = mix(N, R, lerpFactor);\n    return dominant;\n\n}\n\nvec3 getPrefilteredEnvMapColor(const in vec3 worldNormal, const in float roughnessLinear, vec3 refDir, const in vec3 faceWorldNormal) {\n\n\n    refDir = getSpecularDominantDir(worldNormal, refDir, roughnessLinear);\n\n    // refDir.x *= -1.0;\n\n    // vec3 prefilteredColor = envIntensify( $(DECODE)( textureCubeLodEXTFixed(prefilter128, cubemapSize, refDir, bias, lodRange) ).rgb); //  * uReflectivity;\n    vec3 prefilteredColor = fetchPrefilterEnvmap(refDir, roughnessLinear);\n\n    // TODO: bug here use vertexNormal..\n    // http://marmosetco.tumblr.com/post/81245981087\n    // marmoset uses 1.3, we force it to 1.0\n    float factor = clamp( 1.0 + dot( refDir, faceWorldNormal), 0.0, 1.0 );\n    prefilteredColor *= (factor * factor);\n\n    return prefilteredColor;\n\n}\n\n// TODO: computeIBLSpecular rename\nvec3 calcCubemapBasedLightingSpecular(const in vec3 worldNormal, const in vec3 worldViewDir, const in vec3 faceWorldNormal) {\n\n    vec3 worldViewReflect = reflectView(worldNormal, worldViewDir);\n\n    // Real Shading in Unreal Engine 4 | Learn-opengl both use material-roughness however sketchfab(osg) name it linear-roughness, which\n    // is conused (seems linear-roughness = roughness * roughness)\n    float roughness = gRoughness;\n\n    // Wierd roughness may be < 0.0;\n    roughness = max( roughness, 0.0 );\n\n    // TODO: treat max-range and size as an uniform...\n    vec3 prefilter = getPrefilteredEnvMapColor(gWorldNormal, roughness, environmentRotate(worldViewReflect), faceWorldNormal);\n\n    float nov = dot(worldNormal, worldViewDir);\n\n    // TODO: remove gSpecular outside since gSpecular maybe zero to make shader error\n    // gReflection =  prefilter * integrageLutBRDF(gSpecular, roughnessLinear, nov, lutBRDF, 1.0) / gSpecular;\n    // gSpecularLight += prefilter * integrageLutBRDF(gSpecularF0, roughness, nov, lutBRDF, gSpecularF90);\n    return prefilter * integrageLutBRDF(gSpecularF0, roughness, nov, lutBRDF, gSpecularF90);\n\n}\n",CubemapReflectionNoLod_FS:"\n\nuniform samplerCube prefilter128;\nuniform samplerCube prefilter64;\nuniform samplerCube prefilter32;\nuniform samplerCube prefilter16;\nuniform samplerCube prefilter8;\nuniform samplerCube prefilter4;\n\n\n\nuniform float uReflectivity;\n\nvoid addReflection(vec3 dir, float intensity) {\n\n    // Unfortunately, WebGL doesn't allow us using textureCubeLod. Therefore bunch of nasty workarounds is required.\n    // We fix mip0 to 128x128, so code is rather static.\n    // Mips smaller than 4x4 aren't great even for diffuse. Don't forget that we don't have bilinear filtering between different faces.\n\n    float bias = clamp(1.0 - gShininess, 0.0, 1.0) * 5.0; // multiply by max mip level\n    int index1 = int(bias);\n    int index2 = int(min(bias + 1.0, 7.0));\n\n    dir.x *= -1.0;\n    dir = environmentRotate(dir);\n\n    vec3 fixedReflDir = fixSeams(dir, bias);\n\n    vec4 cubes[6];\n\n    // TODO: Maybe better not to use -9990.0, each cube should be pure data with nothing to do with camera-bias.\n    cubes[0] = textureCube(prefilter128, fixedReflDir);\n    cubes[1] = textureCube(prefilter64, fixedReflDir);\n    cubes[2] = textureCube(prefilter32, fixedReflDir);\n    cubes[3] = textureCube(prefilter16, fixedReflDir);\n    cubes[4] = textureCube(prefilter8, fixedReflDir);\n    cubes[5] = textureCube(prefilter4, fixedReflDir);\n\n    // Also we don't have dynamic indexing in PS, so...\n    vec4 cube[2];\n\n    for ( int i = 0; i < 6; i++ ) {\n\n        if (i == index1) {\n\n            cube[0] = cubes[i];\n\n        }\n\n        if (i == index2) {\n\n            cube[1] = cubes[i];\n\n        }\n\n    }\n\n    vec4 cubeFinal = mix(cube[0], cube[1], fract(bias));\n\n    gReflection += envIntensify($(DECODE)(cubeFinal).rgb) * intensity;\n\n}\n\n",CubemapSampler_FS:"\nuniform samplerCube envMap;",DirLights_FS:"\nstruct DirectionLight {\n\n    vec3 color;\n    vec3 direction;\n\n};\n\nuniform DirectionLight dirLight[$(DIR_LIGHT_NUM)];\n\n\nvoid getDirLightIrradiance(DirectionLight directionLight, out IrradianceLight irradianceLight)\n{\n    irradianceLight.direction = normalize(-directionLight.direction);\n    irradianceLight.color = directionLight.color;\n\n}\n",Displacement_VS:"\nuniform sampler2D displacementMap;\nuniform float uDisplacementFactor;\n\nvec3 displacement(vec3 position) {\n\n    float displacement = ((texture2D(displacementMap, vUV1).g) - 0.5) * 1.0;\n    position += normalize(gWorldNormal) * displacement * uDisplacementFactor;\n    return position;\n\n}",Dithered_FS:"\n\n// todo: 有問題\n\nvoid ditheringMask (const in vec4 fragCoord, const in float alpha) {\n\n    float rnd = pseudoRandom(fragCoord.xy + fragCoord.z * 1000.0);\n\n    if (alpha < rnd) discard;\n\n}",EdgeDetection_FS:"\nuniform vec2 uResolution;\n\n// uniform vec4 uBackgroundColor;\nuniform sampler2D uColorTexture;\n\n\nvarying vec2 varyUV;\n\nconst vec3 eyeLum = vec3( 0.299, 0.587, 0.114 );\n\nfloat getLuminousIntensity (sampler2D texture, vec2 uv) {\n\n    vec4 tex = texture2D( texture, uv );\n\n    return dot( tex.xyz, eyeLum );\n\n}\n\nvoid main() {\n\n    vec4 originTexture = texture2D(uColorTexture, varyUV);\n\n    vec2 texel = vec2( 1.0 / uResolution.x, 1.0 / uResolution.y );\n\n    const mat3 Gx = mat3( -1.0, -2.0, -1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 1.0 );\n    const mat3 Gy = mat3( -1.0, 0.0, 1.0, -2.0, 0.0, 2.0, -1.0, 0.0, 1.0 );\n\n    float tx0y0 = getLuminousIntensity( uColorTexture, varyUV + texel * vec2( -1.0, -1.0 ) );\n    float tx0y1 = getLuminousIntensity( uColorTexture, varyUV + texel * vec2( -1.0, 0.0  ) );\n    float tx0y2 = getLuminousIntensity( uColorTexture, varyUV + texel * vec2( -1.0, 1.0  ) );\n    float tx1y0 = getLuminousIntensity( uColorTexture, varyUV + texel * vec2( 0.0, -1.0  ) );\n    float tx1y1 = getLuminousIntensity( uColorTexture, varyUV + texel * vec2( 0.0, 0.0   ) );\n    float tx1y2 = getLuminousIntensity( uColorTexture, varyUV + texel * vec2( 0.0, 1.0   ) );\n    float tx2y0 = getLuminousIntensity( uColorTexture, varyUV + texel * vec2( 1.0, -1.0  ) );\n    float tx2y1 = getLuminousIntensity( uColorTexture, varyUV + texel * vec2( 1.0, 0.0   ) );\n    float tx2y2 = getLuminousIntensity( uColorTexture, varyUV + texel * vec2( 1.0, .0    ) );\n\n    float valueGx = Gx[0][0] * tx0y0 + Gx[1][0] * tx1y0 + Gx[2][0] * tx2y0 +\n                     Gx[0][1] * tx0y1 + Gx[1][1] * tx1y1 + Gx[2][1] * tx2y1 +\n                     Gx[0][2] * tx0y2 + Gx[1][2] * tx1y2 + Gx[2][2] * tx2y2;\n\n    float valueGy = Gy[0][0] * tx0y0 + Gy[1][0] * tx1y0 + Gy[2][0] * tx2y0 +\n                     Gy[0][1] * tx0y1 + Gy[1][1] * tx1y1 + Gy[2][1] * tx2y1 +\n                     Gy[0][2] * tx0y2 + Gy[1][2] * tx1y2 + Gy[2][2] * tx2y2;\n\n    float G = sqrt( ( valueGx * valueGx ) + ( valueGy * valueGy ) );\n\n    vec3 color = mix(originTexture.xyz, vec3(0.0, 0.0, 0.0), G);\n\n    gl_FragColor = vec4( color, originTexture.w );\n\n    // gl_FragColor = mix( uBackgroundColor, tex, factor );\n\n}\n",EdgeDetectionND_FS:"\nuniform vec2 uResolution;\n\n// uniform vec4 uBackgroundColor;\nuniform sampler2D uColorTexture;\n\nuniform sampler2D uDepthTexture;\nuniform sampler2D uNormalTexture;\n\nuniform vec3 uEdgeColor;\nuniform vec2 uDepthNormalSensitive;\n\nvarying vec2 varyUV;\n\nbool check (vec2 uv1, vec2 uv2) {\n\n    float depth1  =   unpackRGBAToFloat(texture2D( uDepthTexture, uv1 ));\n    vec3 normal1 =   unpackRGBToNormal(texture2D( uNormalTexture, uv1).xyz);\n\n    float depth2  =  unpackRGBAToFloat(texture2D( uDepthTexture, uv2 ));\n    vec3 normal2 =  unpackRGBToNormal(texture2D( uNormalTexture, uv2 ).xyz);\n\n    float diffDepth = abs(depth1 - depth2);\n    //  vec2 diffNormal = abs(normal1.xy - normal2.xy);\n    // (diffNormal.x + diffNormal.y)\n    // length(normal1 - normal2)\n    return (diffDepth >= uDepthNormalSensitive.x || (length(normal1 - normal2)) >= uDepthNormalSensitive.y);\n\n}\n\n/*\n    K x p\n    x * x\n    P x K\n*/\n\nvoid main() {\n\n    vec4 originTexture = texture2D(uColorTexture, varyUV);\n\n    vec2 texel = vec2( 1.0 / uResolution.x, 1.0 / uResolution.y );\n\n    vec2 texLeftBottom  =  varyUV + texel * vec2( -1.0, -1.0 );\n    vec2 texLeftTop     =  varyUV + texel * vec2( -1.0, 1.0  );\n    vec2 texRightBottom =  varyUV + texel * vec2(  1.0, -1.0  );\n    vec2 texRightTop    =  varyUV + texel * vec2(  1.0, 1.0   );\n\n    float edge = (check(texRightTop, texLeftBottom) || check(texLeftTop, texRightBottom)) ? 1.0: 0.0;\n\n    gl_FragColor = vec4( mix( originTexture.xyz, uEdgeColor, edge), originTexture.w );\n\n}\n",EmissiveConstant_FS:"\nuniform vec3 uEmissiveColor;\nuniform float uEmissiveIntensity;\n\nvec3 getEmissive() {\n\n    return uEmissiveColor * uEmissiveIntensity;\n\n}\n",EmissiveMap_FS:"\nuniform sampler2D emissiveMap;\n\nuniform float uEmissiveIntensity;\n\nvec3 getEmissive() {\n\n    return gammaInput(emissiveMap, $(UV)).$(CHANNEL) * uEmissiveIntensity;\n\n}\n",EmissiveMapTint_FS:"\nuniform sampler2D emissiveMap;\n\nuniform vec3 uEmissiveColor;\n\nuniform float uEmissiveIntensity;\n\nvec3 getEmissive() {\n\n    return gammaInput(emissiveMap, $(UV)).$(CHANNEL) * uEmissiveColor * uEmissiveIntensity;\n\n}\n\n",EnvIntensity_FS:"\n\nuniform float uEnvIntensity;\n\n\nvec3 envIntensify(vec3 color) {\n\n    return uEnvIntensity * color;\n\n}\n\n",EnvIntensityNone_FS:"\nvec3 envIntensify(vec3 color) {\n\n    return color;\n\n}\n\n\n",EnvRotation_FS:"\nuniform mat3 uEnvRotation;\n\nvec3 environmentRotate(vec3 direction) {\n\n    return uEnvRotation * direction;\n\n}\n",EnvRotationNone_FS:"\n\nvec3 environmentRotate(vec3 direction) {\n\n    return direction;\n\n}\n",FilmEffect_FS:"\nuniform float uTime;\nuniform bool grayscale;\n\n// noise effect intensity value (0 = no effect, 1 = full effect)\nuniform float uNoiseIntensity;\n\n// scanlines effect intensity value (0 = no effect, 1 = full effect)\nuniform float uScanlineIntensity;\n\n// scanlines effect count value (0 = no effect, 4096 = full effect)\nuniform float uScanlineCount;\n\nuniform sampler2D uColorTexture;\n\nvarying vec2 varyUV;\n\nvoid main() {\n\n\t// sample the source\n    vec4 texture = texture2D( uColorTexture, varyUV );\n\n\t// make some noise\n\tfloat dx = rand( varyUV + uTime );\n\n\t// add noise\n\tvec3 cResult = texture.rgb + texture.rgb * clamp( 0.1 + dx, 0.0, 1.0 );\n\n\t// get us a sine and cosine\n\tvec2 sc = vec2( sin( varyUV.y * uScanlineCount ), cos( varyUV.y * uScanlineCount ) );\n\n\t// add scanlines\n\tcResult += texture.rgb * vec3( sc.x, sc.y, sc.x ) * uScanlineIntensity;\n\n\t// interpolate between source and result by intensity\n\tcResult = texture.rgb + clamp( uNoiseIntensity, 0.0,1.0 ) * ( cResult - texture.rgb );\n\n\t// convert to grayscale if desired\n\tif( false ) {\n\n\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n\n\t}\n\n\tgl_FragColor =  vec4( cResult, texture.a );\n\n}",FixSeams_FS:"vec3 fixSeams(vec3 vec, float mipmapIndex) {\n    float scale = 1.0 - exp2(mipmapIndex) / 128.0;\n    float M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\n    if (abs(vec.x) != M) vec.x *= scale;\n    if (abs(vec.y) != M) vec.y *= scale;\n    if (abs(vec.z) != M) vec.z *= scale;\n    return vec;\n}\n\nvec3 fixSeams(vec3 vec) {\n    float scale = 1.0 - 1.0 / 128.0;\n    float M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\n    if (abs(vec.x) != M) vec.x *= scale;\n    if (abs(vec.y) != M) vec.y *= scale;\n    if (abs(vec.z) != M) vec.z *= scale;\n    return vec;\n}\n\nvec3 fixSeamsStatic(vec3 vec, float invRecMipSize) {\n    float scale = invRecMipSize;\n    float M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\n    if (abs(vec.x) != M) vec.x *= scale;\n    if (abs(vec.y) != M) vec.y *= scale;\n    if (abs(vec.z) != M) vec.z *= scale;\n    return vec;\n}\n",FixSeamsNone_FS:"vec3 fixSeams(vec3 vec, float mipmapIndex) {\n    return vec;\n}\n\nvec3 fixSeams(vec3 vec) {\n    return vec;\n}\n\nvec3 fixSeamsStatic(vec3 vec, float invRecMipSize) {\n    return vec;\n}\n",FloatPacker_FS:"\n/*\n\n*/\n// Referenced from http://marcodiiga.github.io/encoding-normalized-floats-to-rgba8-vectors\n\n/*\nvec4 packFloatToRGBA(const float value) {\n    // value should be in the range [0.0, 1.0];\n\n    float fract_256 = fract(value * 256.0);\n    float fract_256_256 = fract(value * 256.0 * 256.0);\n    float fract_256_256_256 = fract(value * 256.0 * 256.0 * 256.0);\n\n    vec4 rgba;\n    rgba.a = value - fract_256 / 256.0;\n    rgba.b = fract_256 - fract_256_256 / 256.0;\n    rgba.g = fract_256_256 - fract_256_256_256 / 256.0;\n    rgba.r = fract(value * 256.0 * 256.0 * 256.0);\n    return rgba;\n\n}\n\nfloat unpackRGBAToFloat(const vec4 value) {\n\n    const vec4 bitSh = vec4(1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0);\n\n    return(dot(value, bitSh));\n\n}\n*/\n\n\n/*\nvec4 packFloatToRGBA( float v ) {\n  vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * v;\n  enc = fract(enc);\n  enc -= enc.yzww * vec4(1.0/255.0,1.0/255.0,1.0/255.0,0.0);\n  return enc;\n}\n\nfloat unpackRGBAToFloat( vec4 rgba ) {\n\n    return dot( rgba, vec4(1.0, 1.0 / 255.0, 1.0/65025.0, 1.0/16581375.0) );\n\n}\n*/\n\n\n/*\nconst float PackUpscale = 256. / 255.;\nconst float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packFloatToRGBA( const in float v ) {\n    vec4 r = vec4( fract( v * PackFactors ), v );\n    r.yzw -= r.xyz * ShiftRight8;\n    return r * PackUpscale;\n}\nfloat unpackRGBAToFloat( const in vec4 v ) {\n    return dot( v, UnpackFactors );\n}\n*/\n\n/*\nvec4 packFloatToRGBA (float depth) {\n\n    const vec4 bit_shift = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\n    const vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\n\n    // combination of mod and multiplication and division works better\n    vec4 res = mod(depth * bit_shift * vec4(255), vec4(256) ) / vec4(255);\n    res -= res.xxyz * bit_mask;\n    return res;\n\n}\n*/\n\n\n",FrontFaceFlip_FS:"\n\nvec3 frontFaceFlip(const in vec3 v) {\n\n\treturn v * (float(gl_FrontFacing) * 2.0 - 1.0);\n\n}\n",FxaaSharpenVignetteGrainComposite_FS:"\nuniform sampler2D uColorTexture;\nuniform sampler2D uAuxiliaryTexture;\n\nuniform vec2 uRcpResolution;\n\nvarying vec2 varyUV;\nout vec4 gl_FragColor;\n\n\n#if defined GRAIN\n\nuniform float uTime;\nuniform float uGrainFactor;\n\nfloat pseudoRandom(const in vec2 fragCoord) {\n    vec3 p3 = fract(vec3(fragCoord.xyx) * 0.1031);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n\nfloat nrandTriangle() {\n    float nrnd0 = pseudoRandom(gl_FragCoord.xy + 1000.0 * fract(uTime));\n    // Convert uniform distribution into triangle-shaped distribution.\n    float orig = nrnd0 * 2.0 - 1.0;\n    nrnd0 = orig * inversesqrt(abs(orig));\n    nrnd0 = max(-1.0, nrnd0);\n    // Nerf the NaN generated by 0 * rsqrt(0).\n    nrnd0 = nrnd0 - sign(orig) + 0.5;\n    // Result is range [-0.5, 1.5] which is useful for actual dithering. convert to [0, 1] for histogram.\n    return (nrnd0 + 0.5) * 0.5;\n}\n\n\nvec4 grain(vec4 color) {\n\n    float grainFactor = nrandTriangle();\n    return vec4(mix(color.rgb, color.rgb * (color.rgb + (1.0 - color.rgb) * 2.0 * grainFactor), uGrainFactor), color.a);\n}\n\n#endif\n\n#if defined VIGNETTE\n\nuniform float uAmount;\n\nuniform float uHardness;\n\nvec4 vignette(vec4 color) {\n\n\tvec2 uv = (varyUV - vec2(0.5)) * vec2(uHardness);\n\n    return vec4(mix(color.rgb, vec3(1.0 - uAmount), dot(uv, uv)), color.a);\n\n}\n\n#endif\n\n#ifdef SHARPEN\n\nuniform float uIntensity;\n\n#if defined DEPTH_TEXTURE\n\nuniform sampler2D uDepthTexture;\n\n#endif\n\n\nvec4 sharpen(vec4 color) {\n\n#if defined DEPTH_TEXTURE\n\n    float depth = unpackRGBAToFloat(texture2D( uDepthTexture, varyUV));\n    //float d = unpackRGBAToFloat(textureLod( uDepthTexture, varyUV, 0.));\n    //return vec4(d, 0, 0, 1.0);\n    if (depth > 1.0) {\n\n        return color;\n\n    }\n\n#endif\n\n    vec2 off = uRcpResolution;\n\n    // use useAA, 4 texFetch already in cache. perhaps we could cache ourself.\n    vec3 rgbNW = texture2D(uColorTexture, varyUV + off * vec2(-1.0, -1.0)).rgb;\n\n    vec3 rgbSE = texture2D(uColorTexture, varyUV + off * vec2(1.0, 1.0)).rgb;\n\n    vec3 rgbNE = texture2D(uColorTexture, varyUV + off * vec2(1.0, -1.0)).rgb;\n\n    vec3 rgbSW = texture2D(uColorTexture, varyUV + off * vec2(-1.0, 1.0)).rgb;\n\n    return vec4(color.rgb + uIntensity * (4.0 * color.rgb - rgbNW - rgbNE - rgbSW - rgbSE), color.a);\n\n}\n\n#endif\n\nvec4 Fxaa(sampler2D tex) {\n\n\tvec2 fxaaQualityRcpFrame = uRcpResolution;\n    vec2 n = varyUV + vec2(0.0, 1.0) * uRcpResolution;\n    vec2 s = varyUV + vec2(0.0, -1.0) * uRcpResolution;\n    vec2 w = varyUV + vec2(-1.0, 0.0) * uRcpResolution;\n    vec2 e = varyUV + vec2(1.0, 0.0) * uRcpResolution;\n    vec2 ne = varyUV + vec2(1.0, 1.0) * uRcpResolution;\n    vec2 se = varyUV + vec2(1.0, -1.0) * uRcpResolution;\n    vec2 nw = varyUV + vec2(-1.0, 1.0) * uRcpResolution;\n    vec2 sw = varyUV + vec2(-1.0, -1.0) * uRcpResolution;\n    vec2 posM = varyUV;\n    vec4 rgbyM = texture2D(tex, posM);\n\n    float lumaS = texture2D(tex, n).g;\n    float lumaE = texture2D(tex, e).g;\n    float lumaN = texture2D(tex, s).g;\n    float lumaW = texture2D(tex, w).g;\n    float maxSM = max(lumaS, rgbyM.g);\n    float minSM = min(lumaS, rgbyM.g);\n    float maxESM = max(lumaE, maxSM);\n    float minESM = min(lumaE, minSM);\n    float maxWN = max(lumaN, lumaW);\n    float minWN = min(lumaN, lumaW);\n    float rangeMax = max(maxWN, maxESM);\n    float rangeMin = min(minWN, minESM);\n    float rangeMaxScaled = rangeMax * 0.125;//0.166;\n    float range = rangeMax - rangeMin;\n    float rangeMaxClamped = max(0.0625, rangeMaxScaled); //0.0833\n    bool earlyExit = range < rangeMaxClamped;\n    if(earlyExit) {\n        return rgbyM;\n    }\n    float lumaNW = texture2D(tex, sw).g;\n    float lumaSE = texture2D(tex, ne).g;\n    float lumaNE = texture2D(tex, se).g;\n    float lumaSW = texture2D(tex, nw).g;\n    float lumaNS = lumaN + lumaS;\n    float lumaWE = lumaW + lumaE;\n    float subpixRcpRange = 1.0 / range;\n    float subpixNSWE = lumaNS + lumaWE;\n    float edgeHorz1 = (-2.0 * rgbyM.g) + lumaNS;\n    float edgeVert1 = (-2.0 * rgbyM.g) + lumaWE;\n\n    float lumaNESE = lumaNE + lumaSE;\n    float lumaNWNE = lumaNW + lumaNE;\n    float edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\n    float edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\n\n    float lumaNWSW = lumaNW + lumaSW;\n    float lumaSWSE = lumaSW + lumaSE;\n    float edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\n    float edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\n    float edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\n    float edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\n    float edgeHorz = abs(edgeHorz3) + edgeHorz4;\n    float edgeVert = abs(edgeVert3) + edgeVert4;\n\n    float subpixNWSWNESE = lumaNWSW + lumaNESE;\n    float lengthSign = fxaaQualityRcpFrame.x;\n    bool horzSpan = edgeHorz >= edgeVert;\n    float subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\n\n    if(!horzSpan) lumaN = lumaW;\n    if(!horzSpan) lumaS = lumaE;\n    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\n    float subpixB = (subpixA * (1.0/12.0)) - rgbyM.g;\n\n    float gradientN = lumaN - rgbyM.g;\n    float gradientS = lumaS - rgbyM.g;\n    float lumaNN = lumaN + rgbyM.g;\n    float lumaSS = lumaS + rgbyM.g;\n    bool pairN = abs(gradientN) >= abs(gradientS);\n    float gradient = max(abs(gradientN), abs(gradientS));\n    if(pairN) lengthSign = -lengthSign;\n    float subpixC = clamp(abs(subpixB) * subpixRcpRange, 0.0, 1.0);\n\n    vec2 posB;\n    posB.x = posM.x;\n    posB.y = posM.y;\n    vec2 offNP;\n    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\n    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\n    if(!horzSpan) posB.x += lengthSign * 0.5;\n    if( horzSpan) posB.y += lengthSign * 0.5;\n\n    vec2 posN;\n    posN.x = posB.x - offNP.x;\n    posN.y = posB.y - offNP.y;\n    vec2 posP;\n    posP.x = posB.x + offNP.x;\n    posP.y = posB.y + offNP.y;\n    float subpixD = ((-2.0) * subpixC) + 3.0;\n    float lumaEndN = texture2D(tex, posN).g;\n    float subpixE = subpixC * subpixC;\n    float lumaEndP = texture2D(tex, posP).g;\n\n    if(!pairN) lumaNN = lumaSS;\n    float gradientScaled = gradient * 1.0/4.0;\n    float lumaMM = rgbyM.g - lumaNN * 0.5;\n    float subpixF = subpixD * subpixE;\n    bool lumaMLTZero = lumaMM < 0.0;\n\n    lumaEndN -= lumaNN * 0.5;\n    lumaEndP -= lumaNN * 0.5;\n    bool doneN = abs(lumaEndN) >= gradientScaled;\n    bool doneP = abs(lumaEndP) >= gradientScaled;\n    if(!doneN) posN.x -= offNP.x * 1.5;\n    if(!doneN) posN.y -= offNP.y * 1.5;\n    bool doneNP = (!doneN) || (!doneP);\n    if(!doneP) posP.x += offNP.x * 1.5;\n    if(!doneP) posP.y += offNP.y * 1.5;\n\n    if(doneNP) {\n        if(!doneN) lumaEndN = texture2D(tex, posN.xy).g;\n        if(!doneP) lumaEndP = texture2D(tex, posP.xy).g;\n        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n        doneN = abs(lumaEndN) >= gradientScaled;\n        doneP = abs(lumaEndP) >= gradientScaled;\n        if(!doneN) posN.x -= offNP.x * 2.0;\n        if(!doneN) posN.y -= offNP.y * 2.0;\n        doneNP = (!doneN) || (!doneP);\n        if(!doneP) posP.x += offNP.x * 2.0;\n        if(!doneP) posP.y += offNP.y * 2.0;\n        if(doneNP) {\n            if(!doneN) lumaEndN = texture2D(tex, posN.xy).g;\n            if(!doneP) lumaEndP = texture2D(tex, posP.xy).g;\n            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n            doneN = abs(lumaEndN) >= gradientScaled;\n            doneP = abs(lumaEndP) >= gradientScaled;\n            if(!doneN) posN.x -= offNP.x * 4.0;\n            if(!doneN) posN.y -= offNP.y * 4.0;\n            doneNP = (!doneN) || (!doneP);\n            if(!doneP) posP.x += offNP.x * 4.0;\n            if(!doneP) posP.y += offNP.y * 4.0;\n            if(doneNP) {\n                if(!doneN) lumaEndN = texture2D(tex, posN.xy).g;\n                if(!doneP) lumaEndP = texture2D(tex, posP.xy).g;\n                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n                doneN = abs(lumaEndN) >= gradientScaled;\n                doneP = abs(lumaEndP) >= gradientScaled;\n                if(!doneN) posN.x -= offNP.x * 12.0;\n                if(!doneN) posN.y -= offNP.y * 12.0;\n                doneNP = (!doneN) || (!doneP);\n                if(!doneP) posP.x += offNP.x * 12.0;\n                if(!doneP) posP.y += offNP.y * 12.0;\n            }\n        }\n    }\n    float dstN = posM.x - posN.x;\n    float dstP = posP.x - posM.x;\n    if(!horzSpan) dstN = posM.y - posN.y;\n    if(!horzSpan) dstP = posP.y - posM.y;\n/*--------------------------------------------------------------------------*/\n    bool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\n    float spanLength = (dstP + dstN);\n    bool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\n    float spanLengthRcp = 1.0 / spanLength;\n/*--------------------------------------------------------------------------*/\n    bool directionN = dstN < dstP;\n    float dst = min(dstN, dstP);\n    bool goodSpan = directionN ? goodSpanN : goodSpanP;\n    float subpixG = subpixF * subpixF;\n    float pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\n    float subpixH = subpixG * 0.75;\n/*--------------------------------------------------------------------------*/\n    float pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\n    float pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\n    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\n    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\n\n    return vec4(texture2D(tex, posM).rgb, rgbyM.a);\n}\n\nvec4 compositeAuxiliary(vec4 color) {\n    vec4 auxiliaryColor = texture2D(uAuxiliaryTexture, varyUV);\n    // 这里认为auxiliary-texture的里面的颜色是预先乘好的， 但是实质上是没有的， 这样会让\n    // auxiliary-texture的颜色比重变高。\n    return color * (1.0 - auxiliaryColor.a) + auxiliaryColor;\n}\n\nvoid main() {\n\n\tvec4 color;\n    color = Fxaa(uColorTexture);\n\n#if defined SHARPEN\n\tcolor = sharpen(color);\n#endif\n\n#if defined VIGNETTE\n\tcolor = vignette(color);\n#endif\n\n#if defined GRAIN\n\tcolor = grain(color);\n#endif\n\n\tgl_FragColor = compositeAuxiliary(color);\n\n}\n\n",FxaaV2_FS:"\nuniform sampler2D uColorTexture;\n\nuniform vec2 uRcpResolution;\n\nin vec2 vUv;\n\nin vec2 vNE;\nin vec2 vSE;\nin vec2 vNW;\nin vec2 vSW;\n\nvec4 Fxaa(\n    vec2 pos,\n    vec2 ne,\n    vec2 se,\n    vec2 nw,\n    vec2 sw,\n    sampler2D tex, \n    vec2 fxaaQualityRcpFrame\n) {\n\n    vec4 color;\n    vec3 rgbNW = texture2D(tex, nw).rgb;\n    vec3 rgbNE = texture2D(tex, ne).rgb;\n    vec3 rgbSW = texture2D(tex, sw).rgb;\n    vec3 rgbSE = texture2D(tex, se).rgb;\n    vec4 texColor = texture2D(tex, pos);\n    vec3 rgbM  = texColor.rgb;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n    \n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    \n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) * 0.03125, 0.0078125);\n    \n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(8.0, 8.0), max(vec2(-8.0, -8.0), dir * rcpDirMin)) * fxaaQualityRcpFrame;\n    \n    vec3 rgbA = 0.5 * (\n        texture2D(tex, pos + dir * (1.0 / 3.0 - 0.5)).rgb +\n        texture2D(tex, pos + dir * (2.0 / 3.0 - 0.5)).rgb);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n        texture2D(tex, pos + dir * -0.5).rgb +\n        texture2D(tex, pos + dir * 0.5).rgb);\n\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, texColor.a);\n    else\n        color = vec4(rgbB, texColor.a);\n    return color;\n}\n\nvoid main() {\n\n    gl_FragColor = Fxaa(\n        vUv,\n        vNE,\n        vSE,\n        vNW,\n        vSW,\n        uColorTexture,\n        uRcpResolution\n    );\n\n}",FxaaV2_VS:"\nin vec2 vPosition;\n\nuniform vec2 uRcpResolution;\n\nout vec2 vUv;\n\nout vec2 vNE;\nout vec2 vSE;\nout vec2 vNW;\nout vec2 vSW;\n\nvoid main(void) {\n\n    gl_Position = vec4(vPosition, 0.0, 1.0);\n\n    // (-1.0, 1.0) -> (0.0, 1.0)\n    vUv = (vPosition.xy + 1.0) * 0.5;\n\n    vNE = vUv + vec2(1.0, 1.0) * uRcpResolution;\n    vSE = vUv + vec2(1.0, -1.0) * uRcpResolution;\n    vNW = vUv + vec2(-1.0, 1.0) * uRcpResolution;\n    vSW = vUv + vec2(-1.0, -1.0) * uRcpResolution;\n\n}",FxaaV3_FS:"\n\nuniform sampler2D uColorTexture;\n\nuniform vec2 uRcpResolution;\n\nin vec2 vUv;\n\nin vec2 vN;\nin vec2 vS;\nin vec2 vW;\nin vec2 vE;\n\nin vec2 vNE;\nin vec2 vSE;\nin vec2 vNW;\nin vec2 vSW;\n\nvec4 Fxaa(\n    vec2 pos,\n    vec2 n,\n    vec2 s,\n    vec2 w,\n    vec2 e,\n    vec2 ne,\n    vec2 se,\n    vec2 nw,\n    vec2 sw,\n    sampler2D tex,\n    vec2 fxaaQualityRcpFrame\n) {\n    vec2 posM;\n    posM.x = pos.x;\n    posM.y = pos.y;\n    vec4 rgbyM = texture2D(tex, posM);\n    \n    float lumaS = texture2D(tex, n).g;\n    float lumaE = texture2D(tex, e).g;\n    float lumaN = texture2D(tex, s).g;\n    float lumaW = texture2D(tex, w).g;\n    float maxSM = max(lumaS, rgbyM.g);\n    float minSM = min(lumaS, rgbyM.g);\n    float maxESM = max(lumaE, maxSM);\n    float minESM = min(lumaE, minSM);\n    float maxWN = max(lumaN, lumaW);\n    float minWN = min(lumaN, lumaW);\n    float rangeMax = max(maxWN, maxESM);\n    float rangeMin = min(minWN, minESM);\n    float rangeMaxScaled = rangeMax * 0.125;//0.166;\n    float range = rangeMax - rangeMin;\n    float rangeMaxClamped = max(0.0625, rangeMaxScaled); //0.0833\n    bool earlyExit = range < rangeMaxClamped;\n    if(earlyExit) {\n        return rgbyM;\n    }\n    float lumaNW = texture2D(tex, sw).g;\n    float lumaSE = texture2D(tex, ne).g;\n    float lumaNE = texture2D(tex, se).g;\n    float lumaSW = texture2D(tex, nw).g;\n    float lumaNS = lumaN + lumaS;\n    float lumaWE = lumaW + lumaE;\n    float subpixRcpRange = 1.0 / range;\n    float subpixNSWE = lumaNS + lumaWE;\n    float edgeHorz1 = (-2.0 * rgbyM.g) + lumaNS;\n    float edgeVert1 = (-2.0 * rgbyM.g) + lumaWE;\n\n    float lumaNESE = lumaNE + lumaSE;\n    float lumaNWNE = lumaNW + lumaNE;\n    float edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\n    float edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\n\n    float lumaNWSW = lumaNW + lumaSW;\n    float lumaSWSE = lumaSW + lumaSE;\n    float edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\n    float edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\n    float edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\n    float edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\n    float edgeHorz = abs(edgeHorz3) + edgeHorz4;\n    float edgeVert = abs(edgeVert3) + edgeVert4;\n\n    float subpixNWSWNESE = lumaNWSW + lumaNESE;\n    float lengthSign = fxaaQualityRcpFrame.x;\n    bool horzSpan = edgeHorz >= edgeVert;\n    float subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\n\n    if(!horzSpan) lumaN = lumaW;\n    if(!horzSpan) lumaS = lumaE;\n    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\n    float subpixB = (subpixA * (1.0/12.0)) - rgbyM.g;\n\n    float gradientN = lumaN - rgbyM.g;\n    float gradientS = lumaS - rgbyM.g;\n    float lumaNN = lumaN + rgbyM.g;\n    float lumaSS = lumaS + rgbyM.g;\n    bool pairN = abs(gradientN) >= abs(gradientS);\n    float gradient = max(abs(gradientN), abs(gradientS));\n    if(pairN) lengthSign = -lengthSign;\n    float subpixC = clamp(abs(subpixB) * subpixRcpRange, 0.0, 1.0);\n\n    vec2 posB;\n    posB.x = posM.x;\n    posB.y = posM.y;\n    vec2 offNP;\n    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\n    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\n    if(!horzSpan) posB.x += lengthSign * 0.5;\n    if( horzSpan) posB.y += lengthSign * 0.5;\n\n    vec2 posN;\n    posN.x = posB.x - offNP.x;\n    posN.y = posB.y - offNP.y;\n    vec2 posP;\n    posP.x = posB.x + offNP.x;\n    posP.y = posB.y + offNP.y;\n    float subpixD = ((-2.0) * subpixC) + 3.0;\n    float lumaEndN = texture2D(tex, posN).g;\n    float subpixE = subpixC * subpixC;\n    float lumaEndP = texture2D(tex, posP).g;\n\n    if(!pairN) lumaNN = lumaSS;\n    float gradientScaled = gradient * 1.0/4.0;\n    float lumaMM = rgbyM.g - lumaNN * 0.5;\n    float subpixF = subpixD * subpixE;\n    bool lumaMLTZero = lumaMM < 0.0;\n\n    lumaEndN -= lumaNN * 0.5;\n    lumaEndP -= lumaNN * 0.5;\n    bool doneN = abs(lumaEndN) >= gradientScaled;\n    bool doneP = abs(lumaEndP) >= gradientScaled;\n    if(!doneN) posN.x -= offNP.x * 1.5;\n    if(!doneN) posN.y -= offNP.y * 1.5;\n    bool doneNP = (!doneN) || (!doneP);\n    if(!doneP) posP.x += offNP.x * 1.5;\n    if(!doneP) posP.y += offNP.y * 1.5;\n\n    if(doneNP) {\n        if(!doneN) lumaEndN = texture2D(tex, posN.xy).g;\n        if(!doneP) lumaEndP = texture2D(tex, posP.xy).g;\n        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n        doneN = abs(lumaEndN) >= gradientScaled;\n        doneP = abs(lumaEndP) >= gradientScaled;\n        if(!doneN) posN.x -= offNP.x * 2.0;\n        if(!doneN) posN.y -= offNP.y * 2.0;\n        doneNP = (!doneN) || (!doneP);\n        if(!doneP) posP.x += offNP.x * 2.0;\n        if(!doneP) posP.y += offNP.y * 2.0;\n        if(doneNP) {\n            if(!doneN) lumaEndN = texture2D(tex, posN.xy).g;\n            if(!doneP) lumaEndP = texture2D(tex, posP.xy).g;\n            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n            doneN = abs(lumaEndN) >= gradientScaled;\n            doneP = abs(lumaEndP) >= gradientScaled;\n            if(!doneN) posN.x -= offNP.x * 4.0;\n            if(!doneN) posN.y -= offNP.y * 4.0;\n            doneNP = (!doneN) || (!doneP);\n            if(!doneP) posP.x += offNP.x * 4.0;\n            if(!doneP) posP.y += offNP.y * 4.0;\n            if(doneNP) {\n                if(!doneN) lumaEndN = texture2D(tex, posN.xy).g;\n                if(!doneP) lumaEndP = texture2D(tex, posP.xy).g;\n                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n                doneN = abs(lumaEndN) >= gradientScaled;\n                doneP = abs(lumaEndP) >= gradientScaled;\n                if(!doneN) posN.x -= offNP.x * 12.0;\n                if(!doneN) posN.y -= offNP.y * 12.0;\n                doneNP = (!doneN) || (!doneP);\n                if(!doneP) posP.x += offNP.x * 12.0;\n                if(!doneP) posP.y += offNP.y * 12.0;\n            }\n        }\n    }\n    float dstN = posM.x - posN.x;\n    float dstP = posP.x - posM.x;\n    if(!horzSpan) dstN = posM.y - posN.y;\n    if(!horzSpan) dstP = posP.y - posM.y;\n/*--------------------------------------------------------------------------*/\n    bool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\n    float spanLength = (dstP + dstN);\n    bool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\n    float spanLengthRcp = 1.0 / spanLength;\n/*--------------------------------------------------------------------------*/\n    bool directionN = dstN < dstP;\n    float dst = min(dstN, dstP);\n    bool goodSpan = directionN ? goodSpanN : goodSpanP;\n    float subpixG = subpixF * subpixF;\n    float pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\n    float subpixH = subpixG * 0.75;\n/*--------------------------------------------------------------------------*/\n    float pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\n    float pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\n    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\n    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\n\n    return vec4(texture2D(tex, posM).rgb, rgbyM.a);\n}\n\nvoid main() {\n\n    gl_FragColor = Fxaa(\n        vUv,\n        vN,\n        vS,\n        vW,\n        vE,\n        vNE,\n        vSE,\n        vNW,\n        vSW,\n        uColorTexture,\n        uRcpResolution\n    );\n\n}\n\n",FxaaV3_VS:"\nin vec2 vPosition;\n\nuniform vec2 uRcpResolution;\n\nout vec2 vUv;\n\nout vec2 vN;\nout vec2 vS;\nout vec2 vW;\nout vec2 vE;\n\nout vec2 vNE;\nout vec2 vSE;\nout vec2 vNW;\nout vec2 vSW;\n\nvoid main(void) {\n\n    gl_Position = vec4(vPosition, 0.0, 1.0);\n\n    // (-1.0, 1.0) -> (0.0, 1.0)\n    vUv = (vPosition.xy + 1.0) * 0.5;\n\n    vN = vUv + vec2(0.0, 1.0) * uRcpResolution;\n    vS = vUv + vec2(0.0, -1.0) * uRcpResolution;\n    vW = vUv + vec2(-1.0, 0.0) * uRcpResolution;\n    vE = vUv + vec2(1.0, 0.0) * uRcpResolution;\n\n    vNE = vUv + vec2(1.0, 1.0) * uRcpResolution;\n    vSE = vUv + vec2(1.0, -1.0) * uRcpResolution;\n    vNW = vUv + vec2(-1.0, 1.0) * uRcpResolution;\n    vSW = vUv + vec2(-1.0, -1.0) * uRcpResolution;\n\n}",GammaNone_FS:"\nvec4 gammaInput(sampler2D tex, vec2 uv) {\n\n    return texture2D(tex, uv);\n\n}\n\nvec4 gammaInput(samplerCube tex, vec3 uvw) {\n\n    return textureCube(tex, uvw);\n\n}\n\nvec3 gammaInput(vec3 color) {\n\n    return color;\n\n}\n\nfloat gammaInput(float color) {\n\n    return color;\n\n}\n\nvec4 gammaInput(vec4 color) {\n\n    return color;\n\n}\n\nvec3 gammaOutput(vec3 color) {\n\n    return color;\n\n}",GammaSimple_FS:"\n// sRGBToLinear\nvec3 gammaInput(vec3 color) {\n\n    return vec3( color.r < 0.04045 ? color.r * (1.0 / 12.92) : pow((color.r + 0.055) * (1.0 / 1.055), 2.4), color.g < 0.04045 ? color.g * (1.0 / 12.92) : pow((color.g + 0.055) * (1.0 / 1.055), 2.4), color.b < 0.04045 ? color.b * (1.0 / 12.92) : pow((color.b + 0.055) * (1.0 / 1.055), 2.4));\n    // return pow(color, vec3(2.2));\n\n}\n\nfloat gammaInput(float color) {\n\n    return  color < 0.04045 ? color * (1.0 / 12.92) : pow((color + 0.055) * (1.0 / 1.055), 2.4);\n    // return pow(color, 2.2);\n\n}\n\nvec4 gammaInput(vec4 color) {\n\n    return vec4( color.r < 0.04045 ? color.r * (1.0 / 12.92) : pow((color.r + 0.055) * (1.0 / 1.055), 2.4), color.g < 0.04045 ? color.g * (1.0 / 12.92) : pow((color.g + 0.055) * (1.0 / 1.055), 2.4), color.b < 0.04045 ? color.b * (1.0 / 12.92) : pow((color.b + 0.055) * (1.0 / 1.055), 2.4), color.a);\n    // return vec4(pow(color.rgb, vec3(2.2)), color.a);\n\n}\n\nvec4 gammaInput(sampler2D tex, vec2 uv) {\n\n    vec4 rgba = texture2D(tex, uv);\n    rgba.rgb = gammaInput(rgba.rgb);\n    return rgba;\n\n}\n\nvec4 gammaInput(samplerCube tex, vec3 uvw) {\n\n    vec4 rgba = textureCube(tex, uvw);\n    rgba.rgb = gammaInput(rgba.rgb);\n\n    return rgba;\n\n}\n\n// linearTosRGB\nvec3 gammaOutput(vec3 color) {\n\n    return vec3( color.r < 0.0031308 ? color.r * 12.92 : 1.055 * pow(color.r, 1.0/2.4) - 0.055, color.g < 0.0031308 ? color.g * 12.92 : 1.055 * pow(color.g, 1.0/2.4) - 0.055, color.b < 0.0031308 ? color.b * 12.92 : 1.055 * pow(color.b, 1.0/2.4) - 0.055);\n    // color += vec3(0.0000001);\n    // return pow(color, vec3(0.45));\n\n}\n\n",GaussianBlur_FS:"\n#define INV_SQUARE_TWO_PI 0.3989423\n\nvarying vec2 varyUV;\nuniform sampler2D uColorTexture;\nuniform vec2 uTextureSize;\nuniform vec2 uDirection;\n\nfloat gaussianPdf(in float x, in float sigma) {\n\n    return INV_SQUARE_TWO_PI / sigma * exp( -0.5 * x * x / ( sigma * sigma));\n\n}\n\nvoid main() {\n\n    vec2 invSize = 1.0 / uTextureSize;\n    float fSigma = float(SIGMA);\n    float weightSum = gaussianPdf(0.0, fSigma);\n\n    vec4 origin = texture2D(uColorTexture, varyUV);\n\n\tvec3 diffuseSum = origin.rgb * weightSum;\n\n\tfor ( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\n\t    float x = float(i);\n\t    float w = gaussianPdf(x, fSigma);\n\t    vec2 uvOffset = uDirection* invSize * x;\n\t\tvec3 sample1 = texture2D( uColorTexture, varyUV + uvOffset).rgb;\n\t\tvec3 sample2 = texture2D( uColorTexture, varyUV - uvOffset).rgb;\n\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\tweightSum += 2.0 * w;\n\n\t}\n\n    gl_FragColor = vec4(diffuseSum / weightSum, 1.0);\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",GgxNDF_FS:"\n// Normal Distribution Function\nfloat D_GGX ( float NdotH , float linearRoughness) {\n\n    // Divide by PI is apply later\n    float m2 = linearRoughness * linearRoughness;\n    float f = ( NdotH * m2 - NdotH ) * NdotH + 1.0;\n    return m2 / (f * f);\n\n}\n",Glitch_FS:"\nuniform sampler2D uColorTexture;\nuniform sampler2D uNosieTexture;\n\nuniform float uDisable;\nuniform float uAmount;\nuniform float uAngle;\nuniform float uSeed;\nuniform float uSeedX;\nuniform float uSeedY;\nuniform float uDistortionX;\nuniform float uDistortionY;\n\nvarying vec2 varyUV;\n\n\nfloat rand(vec2 co){\n\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n\n}\n\nvoid main() {\n\n    if(uDisable < 1.0) {\n\n        vec2 p = varyUV;\n        float xs = floor(gl_FragCoord.x / 0.5);\n        float ys = floor(gl_FragCoord.y / 0.5);\n        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n        vec4 normal = texture (uNosieTexture, p * uSeed * uSeed);\n        if(p.y < uDistortionX + 0.05 && p.y > uDistortionX - 0.05 * uSeed) {\n\n            if(uSeedX > 0.0){\n                p.y = 1.0 - (p.y + uDistortionY);\n            }\n            else {\n                p.y = uDistortionY;\n            }\n\n        }\n        if(p.x < uDistortionY + 0.05 && p.x > uDistortionY - 0.05 * uSeed) {\n\n            if(uSeedY > 0.0){\n\n                p.x = uDistortionX;\n            }\n            else {\n\n                p.x = 1.0 - (p.x + uDistortionX);\n\n            }\n\n        }\n        p.x += normal.x * uSeedX * (uSeed/5.0);\n        p.y += normal.y * uSeedY * (uSeed/5.0);\n\n        vec2 offset = uAmount * vec2(cos(uAngle), sin(uAngle));\n        vec4 cr = texture2D(uColorTexture, p + offset);\n        vec4 cga = texture2D(uColorTexture, p);\n        vec4 cb = texture2D(uColorTexture, p - offset);\n        gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        //add noise\n        vec4 snow = 200.0 * uAmount * vec4(rand(vec2(xs * uSeed,ys * uSeed * 50.0)) *0.2);\n        gl_FragColor = gl_FragColor + snow;\n\n    } else {\n\n        gl_FragColor=texture (uColorTexture, varyUV);\n\n    }\n}",Grain_FS:"uniform sampler2D uColorTexture;\nuniform float uTime;\nuniform float uGrainFactor;\n\nvarying vec2 varyUV;\n\nfloat pseudoRandom(const in vec2 fragCoord) {\n    vec3 p3 = fract(vec3(fragCoord.xyx) * 0.1031);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n\nfloat nrandTriangle() {\n    float nrnd0 = pseudoRandom(gl_FragCoord.xy + 1000.0 * fract(uTime));\n    // Convert uniform distribution into triangle-shaped distribution.\n    float orig = nrnd0 * 2.0 - 1.0;\n    nrnd0 = orig * inversesqrt(abs(orig));\n    nrnd0 = max(-1.0, nrnd0);\n    // Nerf the NaN generated by 0 * rsqrt(0).\n    nrnd0 = nrnd0 - sign(orig) + 0.5;\n    // Result is range [-0.5, 1.5] which is useful for actual dithering. convert to [0, 1] for histogram.\n    return (nrnd0 + 0.5) * 0.5;\n}\n\n\nvec4 grain(const in vec4 color) {\n\n    float grainFactor = nrandTriangle();\n    return vec4(mix(color.rgb, color.rgb * (color.rgb + (1.0 - color.rgb) * 2.0 * grainFactor), uGrainFactor), color.a);\n}\n\n\nvoid main() {\n\n    vec4 color = texture2D(uColorTexture, varyUV);\n    gl_FragColor = grain(color);\n\n}",Head_FS:"// TODO: better to rename physical head...\nuniform vec3 uEyePosition;\n\nvec3 gDiffuseLight = vec3(0.0);\nvec3 gSpecularLight = vec3(0.0);\nvec3 gReflection = vec3(0.0);\nvec3 gFinalColor = vec3(0.0);\n\nvec3 gSpecularF0 = vec3(0.0);\nfloat gSpecularF90 = 1.0;\nfloat gRoughness = 0.0;\nvec3 gAlbedo = vec3(0.0);\nvec3 gDiffuse = vec3(0.0);\nvec3 gWorldNormal = vec3(0.0);\n\n\n",Head_VS:"\n\n\n\n\nin Normal_Type vNormal;\n\nin vec2 vUV1;\n\nin vec2 vUV2;\n\nin vec3 vColor;\n\n\n\nuniform mat4 uProjection;\n\nuniform mat4 uViewMat;\n\nuniform mat4 uWorldMat;\n\n\nmat4 gWorldMatrix;\n\nvec3 gWorldPosition;\n",HeadSlot_FS:"",IrradianceLight_FS:"\n\nstruct IrradianceLight {\n\n\tvec3 color;\n\tvec3 direction;\n\n};\n\n",LambertAzimuthalDecode_VS:"\nvec3 lambertAzimuthalDecode(vec2 enc) {\n/*\n    data2 = data2 * 2.0 - 1.0;\n    vec3 data3 = data2.xyy;\n    data3.z = dot(data3.xy, data3.xy);\n    data3.xyz = vec3(2.0 * data3.xy * sqrt(1.0 - data3.z), 1.0 - 2.0 * data3.z);;\n    return data3;\n*/\n\n    vec2 fenc = enc * 4.0 - 2.0;\n    float f = dot(fenc, fenc);\n\n    // Notice that we add the absolute operation intentionally,\n    // since the shader couldnot ensure (1.0 - f / 4.0) to positive under precition-error.\n    float g = sqrt(abs(1.0 - f / 4.0));\n\n    return vec3(fenc * g, 1.0 - f / 2.0);\n\n}\n",LambertDiffuseBRDF_FS:"\n\nfloat lambert_diffuse_brdf () {\n\n    return 1.0 / 3.141593;\n\n}",LightMap_FS:"\n\nuniform sampler2D lightMap;\n\n\nvoid addLightMap() {\n\n    gDiffuseLight += texture2D(lightMap, $(UV)).$(CHANNEL);\n\n}\n\n",Lights_FS:"\nLightingReflect addLight(Vertex vertex, float shininess)\n{\n    LightingReflect finalReflectLight;\n    finalReflectLight.directDiffuse = vec3(0.0);\n    finalReflectLight.directSpecular = vec3(0.0);\n\n#if defined(ACCEPT_LIGHT)\n    // Enable lighting.\n\n    IrradianceLight irrLight;\n\n    #if defined(ENABLE_POINT_LIGHT)\n\n        for (int i = 0; i < POINT_LIGHT_NUMS; i++)\n        {\n            irrLight = getPointLightIrradiance(pointLight[i], vertex);\n            LightingReflect reflectLight = getLightReflect(irrLight, vertex, shininess);\n            finalReflectLight.directDiffuse += reflectLight.directDiffuse;\n            finalReflectLight.directSpecular += reflectLight.directSpecular;\n        }\n\n    #endif\n\n    #if defined(ENABLE_DIR_LIGHT)\n\n        for (int i = 0; i < DIR_LIGHT_NUMS; i++)\n        {\n            irrLight = getDirLightIrradiance(directionLight[i], vertex);\n            LightingReflect reflectLight = getLightReflect(irrLight, vertex, shininess);\n            finalReflectLight.directDiffuse += reflectLight.directDiffuse;\n            finalReflectLight.directSpecular += reflectLight.directSpecular;\n        }\n\n    #endif\n\n#endif\n\n\n    return finalReflectLight;\n\n}\n",LinearAttenuation_FS:"\nfloat getAttenuationRatio(float lightRaidus, float dist) {\n\n    return max(((lightRadius - dist) / lightRadius), 0.0);\n\n}\n\n",LinearDepth_VS:"\nuniform float uNear;\nuniform float uFar;\n\nfloat getLinearDepth(const vec4 positionViewSpace) {\n\n    //(uViewMat * vec4(gWorldPosition, 1.0))\n    float viewZ = positionViewSpace.z;\n\n    viewZ *= -1.0;\n\n    return (viewZ - uNear) / (uFar - uNear);\n\n}\n\n// Another method: (1.0 / fragCoor.w - uNear) / (uFar - uNear)\n\n",LinearDepthToPositiveZ_FS:"\nfloat linearDepthToPositiveZ(const in float depth, vec2 nearFar) {\n    return nearFar.x + (nearFar.y - nearFar.x) * depth;\n}\n",LinearDistance_VS:"\nuniform float uNear;\nuniform float uFar;\n\nfloat getLinearDistance(const vec4 positionViewSpace) {\n\n    float distance = length(positionViewSpace);\n\n    distance = (distance - uNear) / (uFar - uNear);\n\n    distance = clamp(distance, 0.0, 1.0);\n\n    return distance;\n\n}\n",LinearRoughnessToMip_FS:"// frostbite, lagarde paper p67\n// http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\nfloat linRoughnessToMipmap( const in float roughnessLinear ) {\n    //return roughnessLinear;\n    return sqrt(roughnessLinear);\n\n}\n",LuminosityFilter_FS:"\n\nuniform vec4 uBackgroundColor;\nuniform float uThreshold;\nuniform float uSmoothRange;\nuniform sampler2D uColorTexture;\n\n#if defined DEPTH_TEXTURE\n\nuniform sampler2D uDepthTexture;\n\n#endif\n\nvarying vec2 varyUV;\n\nconst vec3 eyeLum = vec3( 0.299, 0.587, 0.114 );\n\n\nvoid main1 () {\n\n#if defined DEPTH_TEXTURE\n\n    float depth = unpackRGBAToFloat(texture2D( uDepthTexture, varyUV ));\n\n    if (depth > 1.0) {\n\n        gl_FragColor = uBackgroundColor;\n        return;\n\n    }\n\n#endif\n\n    vec4 tex = texture2D( uColorTexture, varyUV );\n\n    float lumIntensity = dot( tex.xyz, eyeLum );\n\n    float factor = smoothstep( uThreshold, uThreshold + uSmoothRange, lumIntensity );\n\n    gl_FragColor = mix( uBackgroundColor, tex, factor );\n\n}\n\nfloat getLuminance(const in vec3 color) {\n\n    const vec3 colorBright = vec3(0.2126, 0.7152, 0.0722);\n    return dot(color, colorBright);\n\n}\nvec3 extractBright(const in vec3 color) {\n\n    return clamp(color * clamp(getLuminance(color) - (1.0 - uThreshold), 0.0, 1.0), 0.0, 1.0);\n\n}\n\nvoid main () {\n\n\n#if defined DEPTH_TEXTURE\n\n    float depth = unpackRGBAToFloat(texture2D( uDepthTexture, varyUV ));\n\n    if (depth > 1.0) {\n\n        gl_FragColor = uBackgroundColor;\n        return;\n\n    }\n\n#endif\n\n    vec4 tex = texture2D( uColorTexture, varyUV );\n\n    gl_FragColor = vec4(extractBright(tex.rgb), tex.a);\n\n}\n",LuvToRGB_FS:"\nconst mat3 LUVInverse = mat3( 6.0013, -2.700, -1.7995, -1.332, 3.1029, -5.7720, 0.3007, -1.088, 5.6268 );\n\nvec3 LUVToRGB( const in vec4 vLogLuv ) {\n\n    float Le = vLogLuv.z * 255.0 + vLogLuv.w;\n\n    // float abc = vLo\n    vec3 Xp_Y_XYZp;\n    Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n    Xp_Y_XYZp.z = Xp_Y_XYZp.y / vLogLuv.y;\n    Xp_Y_XYZp.x = vLogLuv.x * Xp_Y_XYZp.z;\n    vec3 vRGB = LUVInverse * Xp_Y_XYZp;\n\n    return max(vRGB, 0.0);\n\n}",MainEnd_FS:"\n}",MainEnd_VS:"\n}",MainEndSlot_FS:"",MainStart_FS:"\nvoid main(void) {\n",MainStart_VS:"\n\nvoid main(void) {\n\n\n",Matcap_FS:"\nuniform sampler2D matcap;\nuniform float uRimIntensity;\nuniform float uRimPower;\nuniform mat4 uViewMat;\n\nvoid matcap(){\n\n\tvec3 viewReflect = (uViewMat * vec4(gWorldViewReflect.xyz, 0.0)).xyz;\n\t\n\tviewReflect.z += 1.0;\n\t\n\tfloat m = 2.0 * length(viewReflect);\n\t\n\tvec2 matcapUv = vec2(viewReflect.x / m + 0.5,  viewReflect.y / m + 0.5);\n\t\n\tgFinalColor = texture2D(matcap, matcapUv).rgb;\n\t\n\tfloat rimLight = uRimPower * abs(dot(gWorldNormal, gWorldViewDir));\n\t\n\trimLight = uRimIntensity * (1.0 - smoothstep(0.0, 1.0, rimLight));\n\t\n\tgFinalColor += vec3(rimLight);\n\n}\n\t\t\n\t    \n\n\n\n\t\n\t",MetalnessConstant_FS:"\nuniform float uMetalness;\n\nfloat getMetalness() {\n\n    return uMetalness;\n\n}",MetalnessFunc_FS:"\n// Maybe better to be const float dieletricF0 = $(value)\n/*\nvoid metalness2AlbedoSpecular(float metalness) {\n\n     gSpecular = mix(vec3(0.04), gAlbedo, metalness);\n\n     // Create a new variable named gDiffuse\n     gAlbedo *= 1.0 - metalness;\n     gDiffuse = gAlbedo;\n\n}*/\n\nuniform float uDieletricReflectance;\n\nvec3 computeSpecularF0FromMetalness(float metalness, vec3 albedo) {\n\n    float reflectance = uDieletricReflectance;\n\n    // https://google.github.io/filament/Filament.md.html#materialsystem/parameterization/remapping\n    // float dielectricF0 = 0.16 * reflectance * reflectance;\n    // sketchfab seems use a cheaper one:\n    float dielectricF0  = 0.08 * reflectance ;\n\n    return dielectricF0 * (1.0 - metalness) + albedo * metalness;\n\n}\n",MetalnessMap_FS:"\nuniform float uMetalness;\nuniform sampler2D metalness;\n\nfloat getMetalness() {\n\n    return texture2D(metalness, $(UV)).$(CHANNEL) * uMetalness;\n\n}",Mvp_VS:"\n    gl_Position = uProjection * uViewMat * worldPosition;",NDotL_FS:"\nfloat nDotL(const in vec3 normal, const in vec3 lightDirection) {\n\n     return max(dot(normal, lightDirection), 0.0);\n\n}",Noise_FS:"\n#define factor 43758.5453123;\n\nhighp float rand (vec2 st) {\n\n    return fract( sin( dot( st.xy, vec2(12.9898,78.233) ) ) * 43758.5453123 );\n\n}\n",Normal_FS:"\n// deprecated....\nvec3 gWorldNormal;\n\nvoid getWorldNormal() {\n\n    // TODO: normalize is redundant...\n    gWorldNormal = normalize(varyWorldNormal);\n\n\tgWorldNormal *= (float(gl_FrontFacing) * 2.0 - 1.0);\n\n}\n",Normal_VS:"\n/*\nuniform mat3 uNormalMat;\n\nvec3 getWorldNormal() {\n\n    return normalize(uNormalMat * vNormal);\n\n}\n*/\n\n/*\n#ifdef QUANTIZATION_DECOMPRESS_NORMAL\n\nvec3 decompressNormal(const vec3 normal) {\n\n    vec3 localNormal = normal * 2.0 - 1.0;\n    localNormal = localNormal.xyy;\n    localNormal.z = dot(localNormal.xy, localNormal.xy);\n    localNormal.xyz = vec3(2.0 * localNormal.xy * sqrt(1.0 - localNormal.z), 1.0 - 2.0 * localNormal.z);;\n    return localNormal;\n\n}\n\n#endif\n*/\n\n\nvec3 gWorldNormal;\n\nvec3 getWorldNormal(const vec3 vertexNormal) {\n\n    return normalize(vec3(gWorldMatrix * vec4(getVertexNormal(vertexNormal), 0.0)));\n\n}\n\n",NormalMap_FS:"\nuniform sampler2D normalMap;\nuniform float uNormalMapRate;\n\nvec3 extractNormalMap() {\n\n    vec4 tex = texture2D(normalMap, $(UV));\n\n    vec3 texNormal = (tex.rgb * 2.0 - vec3(1.0));\n\n    texNormal.y *= $(FlipY);\n\n    // Notice that we dont normalize the normal data since we need its length to correct roughness...\n\n    texNormal = mix(vec3(0.0, 0.0, 1.0), normalize(texNormal), uNormalMapRate);\n\n    return texNormal;\n\n}\n\n/*\n// FlipY adds here...\n\nvoid getWorldNormal() {\n\n    mat3 TBN = mat3(normalize(varyWorldTangent), normalize(varyWorldBinormal), normalize(varyWorldNormal));\n\n    vec4 tex = texture2D(normalMap, $(UV));\n\n    gSurfaceNormal = (tex.rgb * 2.0 - vec3(1.0));\n\n\tgSurfaceNormal.y *= $(FlipY);\n\n    gWorldNormal = normalize(mix(vec3(0.0, 0.0, 1.0), normalize(gSurfaceNormal), uNormalMapRate));\n\n    gWorldNormal = normalize(TBN * gWorldNormal);\n\n\tgWorldNormal *= (float(gl_FrontFacing) * 2.0 - 1.0);\n\n}\n*/\n\n\n/*\nvoid getWorldNormal() {\n\n    mat3 tbn = mat3(normalize(varyWorldTangexnt), normalize(varyWorldBinormal), normalize(varyWorldNormal));\n\n    vec4 tex = texture2D(normalMap, $(UV));\n\n    vec3 texNormal = normalize(tbn * (tex.rgb * 2.0 - vec3(1.0)));\n\n    gWorldNormal = mix(normalize(varyWorldNormal), texNormal, uNormalMapRate);\n\n}\n*/\n",NormalPacking_FS:"\nvec3 packNormalToRGB( const in vec3 normal ) {\n\n\treturn normalize( normal ) * 0.5 + 0.5;\n\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\n\treturn 1.0 - 2.0 * rgb.xyz;\n\n}\n\n",OpacityConstant_FS:"\nfloat gAlpha;\n\nuniform float uAlpha;\n\nvoid getOpacity() {\n\n     gAlpha = uAlpha;\n\n}\n\n",OpacityMap_FS:"\nuniform sampler2D opacityMap;\n\nfloat gAlpha;\n\nvoid getOpacity() {\n\n    gAlpha = texture2D(opacityMap, $(UV)).$(CHANNEL);\n\n}\n\n",OpacityMapTint_FS:"\n\nuniform sampler2D opacityMap;\nuniform float uAlpha;\nfloat gAlpha;\n\nvoid getOpacity() {\n\n    gAlpha = texture2D(opacityMap, $(UV)).$(CHANNEL) * uAlpha;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#pragma glslify: export(*)\n",OutlineHorizontal_FS:"uniform sampler2D uColorTexture;\nuniform vec2 uOffset;\n\nvarying vec2 varyUV;\n\n\nvoid main(void)\n{\n\tfloat diff = 0.0;\n\tvec4 pixel;\n\tvec4 texel = texture2D(uColorTexture, varyUV);\n\tvec4 firstTexel = texel;\n\t\n\tpixel = texture2D(uColorTexture, varyUV + vec2(-2.0 * uOffset, 0.0));\n\ttexel = max(texel, pixel);\n\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\n\tpixel = texture2D(uColorTexture, varyUV + vec2(-uOffset, 0.0));\n\ttexel = max(texel, pixel);\n\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\n\tpixel = texture2D(uColorTexture, varyUV + vec2(uOffset, 0.0));\n\ttexel = max(texel, pixel);\n\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\n\tpixel = texture2D(uColorTexture, varyUV + vec2(2.0 * uOffset, 0.0));\n\ttexel = max(texel, pixel);\n\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\n\tgl_FragColor = vec4(texel.rgb, min(diff, 1.0));\n}\n",OutlineVertical_FS:"uniform sampler2D uColorTexture;\n\nuniform float uOffset;\n\nvarying vec2 varyUV;\n\nvoid main(void)\n{\n\tvec4 pixel;\n\tvec4 texel = texture2D(uColorTexture, varyUV);\n\tvec4 firstTexel = texel;\n\tfloat diff = texel.a;\n\t\n\tpixel = texture2D(uColorTexture, varyUV + vec2(0.0, -2.0 * uOffset));\n\ttexel = max(texel, pixel);\n\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\n\tpixel = texture2D(uColorTexture, varyUV + vec2(0.0, -uOffset));\n\ttexel = max(texel, pixel);\n\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\n\tpixel = texture2D(uColorTexture, varyUV + vec2(0.0, uOffset));\n\ttexel = max(texel, pixel);\n\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\n\tpixel = texture2D(uColorTexture, varyUV + vec2(0.0, 2.0 * uOffset));\n\ttexel = max(texel, pixel);\n\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\n\tgl_FragColor = vec4(texel.rgb, step(0.0001, diff));\n\n}",PackFloat2RGBA_FS:"/*\nvec4 packFloatToRGBA(const float value) {\n\n    const vec4 bitSh = vec4(255.0*255.0*255.0, 255.0*255.0, 255.0, 1.0);\n    const vec4 bitMsk = vec4(0.0, 1.0/255.0, 1.0/255.0, 1.0/255.0);\n    vec4 res = fract(value * bitSh);\n    res -= res.xxyz * bitMsk;\n    return res;\n\n}\n*/\n\n// R —> highest\nvec4 packFloatToRGBA( float v ) {\n    vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * v;\n    enc = fract(enc);\n    enc -= enc.yzww * vec4(1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0);\n    return enc;\n}\n\n",Particle_FS:"\nuniform sampler2D uTexture;\n\nout vec2 vUV;\nout vec4 varyColor;\n\nvoid main() {\n\n\tvec4 baseColor = texture2D(uTexture, vUV);\n\n\tgl_FragColor = baseColor * varyColor;\n\n}\n",Particle_VS:"\nuniform mat4 uWorldMat;\nuniform mat4 uProjection;\nuniform mat4 uViewMat;\n\nin vec3 vPosition;\nin vec2 vUV1;\nin vec4 vColor;\nin vec3 sizeRotCIndex;\n\nout vec2 vUV;\nout vec4 varyColor;\n\n#if defined(LINEAR_DEPTH) || defined(LINEAR_DISTANCE)\nout float varyLinearDepth;\nuniform float uNear;\nuniform float uFar;\n#endif\n\nvoid main() {\n\n    mat4 viewModel = uViewMat * uWorldMat;\n\n\t// decode param.\n\tfloat size = sizeRotCIndex.x;\n\tfloat rotation = sizeRotCIndex.y;\n\n\t// cornerIndex must be one of [0.0, 1.0, 2.0, 3.0].\n\tfloat cornerIndex = sizeRotCIndex.z;\n\n\t// color uv.\n\tvaryColor = vColor;\n\tvUV = vUV1;\n\n\t// get corner point axis\n\tvec3 edge = vec3( 1.5, cornerIndex, 2.5 );\n\n\tvec3 test = vec3( cornerIndex, 0.5, cornerIndex );\n\n\t// edge[i] > test[i] -> 0.0, othereise 1.0\n\tvec3 result = step( edge, test );\n\tfloat axisX = -1.0 + ( result.x * 2.0 );\n\tfloat axisY = -1.0 + ( result.y * 2.0 ) + ( result.z * 2.0 );\n\n\tvec3 offset = vec3(\n\n         (axisX * cos(rotation) - axisY * sin(rotation)) * size,\n         (axisX * sin(rotation) + axisY * cos(rotation)) * size,\n         0.0\n\n\t);\n\n\n#if defined(RENDERMODE_HORIZENTAL)\n\n     const mat3 Neg90Rotate = mat3(\n         1.0, 0.0, 0.0,\n         0.0, 0.0, -1.0,\n         0.0, 1.0, 0.0\n    );\n\n    offset = Neg90Rotate * offset;\n\n    vec4 viewPosition = viewModel * vec4( vPosition + offset, 1.0 );\n\n#else\n\n    // we have supposed the camera itself has no scale...\n\n    vec3 globalScale = vec3(length(uWorldMat[0].xyz), length(uWorldMat[1].xyz), length(uWorldMat[2].xyz));\n\n    offset *= globalScale;\n\n    #if defined (RENDERMODE_VERTICAL)\n\n        mat3 viewMat3 = mat3(uViewMat);\n\n        viewMat3[0][0] = 1.0;\n        viewMat3[0][1] = 0.0;\n        viewMat3[0][2] = 0.0;\n\n        viewMat3[2][0] = 0.0;\n        viewMat3[2][1] = 0.0;\n        viewMat3[2][2] = 1.0;\n\n        offset = viewMat3 * offset;\n\n    #endif\n\n        // Get the corner point position in view space\n        vec4 viewPosition = viewModel * vec4( vPosition, 1.0 );\n\n        viewPosition.xyz += offset;\n\n#endif\n\n\tgl_Position = uProjection * viewPosition;\n\n\n#if defined(LINEAR_DEPTH) || defined(LINEAR_DISTANCE)\n\n#if defined(LINEAR_DEPTH)\n\n    float depth = -viewPosition.z;\n\n#else\n\n    float depth = length(viewPosition.xyz);\n\n#endif\n\n    depth = (depth - uNear) / (uFar - uNear);\n\n    depth = clamp(depth, 0.0, 1.0);\n\n    varyLinearDepth = depth;\n\n#endif\n\n}\n",ParticleNoTex_FS:"\nout vec4 varyColor;\n\nvoid main() {\n\n\tgl_FragColor = varyColor;\n\n}\n",PhongLightSpecular_FS:"\n\n// TODO: Deprecated, DELETE THIS FILE...\n\nfloat getLightSpecularRatio() {\n\n    vec3 h = normalize(irradianceLight.direction + gWorldViewDir);\n\n    float NoH = clamp(dot(gWorldNormal, h), 0.0, 1.0);\n\n    float power = exp2(gShininess * 11.0);\n\n    power = max(shininessAA(power), 0.0001);\n\n    return pow(NoH, power) * (power + 2.0) / 8.0;\n\n}",PointLights_FS:"\nstruct PointLight {\n\n\tvec3 position;\n\tvec3 color;\n\tfloat range;\n\n};\n\n// Default to linear light attenuation...\nfloat getAttenuationRatio(float lightRadius, float dist) {\n\n    return max(((lightRadius - dist) / lightRadius), 0.0);\n\n}\n\nvoid getPointLightIrradiance(in PointLight pointLight)\n{\n\n    vec3 fragment2Light = pointLight.position - varyWorldPosition;\n\n    // Attenuation..\n\n    float attenuation = getAttenuationRatio(pointLight.range, length(fragment2Light));\n\n    irradianceLight.color = pointLight.color * attenuation;\n    irradianceLight.direction = normalize(fragment2Light);\n\n}\n\nuniform PointLight pointLight[$(POINT_LIGHT_NUM)];\n\n/*\nvoid addPointLights() {\n\n    for (int i = 0; i < $(POINT_LIGHT_NUM); i++)\n    {\n        getPointLightIrradiance(pointLight[i]);\n\n        float ndotl = nDotL();\n\n        vec3 irradiance = irradianceLight.color * ndotl;\n\n        gDiffuseLight += irradiance;\n\n        gSpecularLight += getLightSpecularRatio() * irradiance;\n\n    }\n\n}\n*/\n\n\n\n\n\n\n",Position_VS:"\n// deprecated ...\nvec4 getGLPosition() {\n\n    gWorldMatrix = getWorldMatrix();\n\n    vec3 position = getVertexPosition(vPosition);\n\n    vec4 worldPosition4 = gWorldMatrix * vec4(position, 1.0);\n\n    gWorldPosition = worldPosition4.xyz;\n\n    return uProjection * uViewMat * worldPosition4;\n\n}\n\n// maybe better call it calcWorldPosition()\n\n",PrefilterCubemap_FS:"\n// #extension GL_EXT_shader_texture_lod : enable\n\nuniform samplerCube prefilter128;\n\nvec3 fixSeams (vec3 vec , const in float lod, const in float cubemapMaxSize) {\n\n    float scale = 1.0 - exp2(lod) / cubemapMaxSize;\n    float M = max(max(abs(vec.x), abs(vec.y)), abs(vec.z));\n    if (abs(vec.x) != M) vec.x *= scale;\n    if (abs(vec.y) != M) vec.y *= scale;\n    if (abs(vec.z) != M) vec.z *= scale;\n    return vec;\n\n}\n\nvec4 textureCubeLodEXTFixed( const in samplerCube texture, const in vec2 cubemapSize, const in vec3 direction,\n                             const in float lodInput ) {\n\n    vec3 dir = direction;\n    // float lod = min( maxLod, lodRange );\n\n    // FixSeams\n\n    // http://seblagarde.wordpress.com/2012/06/10/amd-cubemapgen-for-physically-based-rendering/\n\n    dir = fixSeams(dir, lodInput, cubemapSize.x);\n\n    //return vec4(1.0);\n    return textureLod( texture, dir, min(lodInput, 5.0) );\n\n}\n\n#define MAX_ROUGHNESS_LOD_RANGE 5.0\nvec3 fetchPrefilterEnvmap(vec3 refDir, float roughnessLinear) {\n    // const vec2 cubemapSize = vec2(256.0, 256.0);    \n    float bias = linRoughnessToMipmap(roughnessLinear) * MAX_ROUGHNESS_LOD_RANGE; // multiply by max mip level    \n\n    const vec2 cubemapSize = vec2(256.0, 256.0);\n    return envIntensify( $(DECODE)( textureCubeLodEXTFixed(prefilter128, cubemapSize, refDir, bias) ).rgb);\n}\n",PrefilterPanorama_FS:"\n#define PREFILTER_PARONAMA_TEXTURE_SIZE 1024.\n#define PREFILTER_PARONAMA_LOG2_SIZE 10. // log2(1024)\n/*\nlinear mapping:\nx ： (0 , 1) -> (1, w - 1)\ny :  (0， 1) -> ( 1 + a, h - 1 + a) , a = SIZE - w\n*/\nvec2 fetchMipMapUV(const in float level, const in vec2 uv) {    \n    float widthForLevel = exp2(PREFILTER_PARONAMA_LOG2_SIZE - level);\n    // h, local space height\n    float heightForLevel = widthForLevel * 0.5;\n    vec2 uvSpaceLocal = vec2(1.0) + uv * vec2(widthForLevel - 2.0, heightForLevel - 2.0);\n    uvSpaceLocal.y += PREFILTER_PARONAMA_TEXTURE_SIZE - widthForLevel;\n    return uvSpaceLocal / PREFILTER_PARONAMA_TEXTURE_SIZE;\n}\n\nvec2 mapDirectionToPanoramaUV(const in vec3 dir) {\n    const float PI = 3.1415926535897932384626433832795;\n    float phi = atan(dir.z, dir.x);  // [-PI , PI]\n    float theta = asin(dir.y); // [-PI/2, PI/2]\n    float u = phi / (2.0 * PI) + 0.5; // [0, 1], +x -> 0.5\n    float v = theta / PI + 0.5; // [0, 1]    \n    return vec2(mod(u + 0.25, 1.0), v);  // -z -> 0.5\n}\n\n#define MAX_ROUGHNESS_LOD_RANGE 5.0\nuniform sampler2D prefilterPanorama;\nvec3 fetchPrefilterEnvmap(const vec3 refDir, const float roughnessLinear) {\n    float bias = linRoughnessToMipmap(roughnessLinear) * MAX_ROUGHNESS_LOD_RANGE; // multiply by max mip level    \n    vec2 uvBase = mapDirectionToPanoramaUV(refDir);\n    vec3 texelFloor = $(DECODE)(texture2D(prefilterPanorama, fetchMipMapUV(floor(bias), uvBase)));\n    vec3 texelCeil = $(DECODE)(texture2D(prefilterPanorama, fetchMipMapUV(ceil(bias), uvBase)));\n    return envIntensify(mix(texelFloor, texelCeil, fract(bias)));\n}",Quantization_VS:"\nuniform float uQuantizedData[14];\n\nvec2 quantizedDecode(const vec2 data, const vec2 min, const vec2 max) {\n\n    return (max - min) * data + min;\n\n}\n\nvec3 quantizedDecode(const vec3 data, const vec3 min, const vec3 max) {\n\n    return (max - min) * data + min;\n\n}\n",Random_FS:"\n\n#define INT_SCALE1 0.1031;\n\nfloat pseudoRandom(const in vec2 fragCoord) {\n\n    vec3 p3 = fract(vec3(fragCoord.xyx) * 0.1031);\n\n    p3 += dot(p3, p3.yzx + 19.19);\n\n    return fract((p3.x + p3.y) * p3.z);\n\n}\n",ReflectDir_FS:"\n// deprecated...\n// rename to reflect view to normal...\nvec3 reflectView(const in vec3 normal, const in vec3 viewDir) {\n\n    return normalize(reflect(-viewDir, normal));\n\n}\n\n",Refraction_FS:"\nuniform sampler2D uRefraction;\n\nvec3 calculateRefraction(const vec3 worldViewDir, const vec3 worldNormal, const float refractionRoughness) {\n\n    vec3 refractDir = refract(-worldViewDir, worldNormal, 1.1);\n\n    return vec3(1., 0., 0.);\n\n}",RgbmDecode_FS:"vec3 decodeRGBM(vec4 rgbm, float range) {\n    return (range * rgbm.a) * rgbm.rgb;    \n}\n\nvec3 decodeRGBM7(vec4 rgbm) {\n    return decodeRGBM(rgbm, 7.0);\n}\n",RgbmEncode_FS:"vec4 encodeRGBM(const in vec3 color, const in float range) {\n    if(range <= 0.0) return vec4(color, 1.0);\n    vec4 rgbm;\n    vec3 col = color / range;\n    rgbm.a = clamp( max( max( col.r, col.g ), max( col.b, 1e-6 ) ), 0.0, 1.0 );\n    rgbm.a = ceil( rgbm.a * 255.0 ) / 255.0;\n    rgbm.rgb = col / rgbm.a;\n    return rgbm;\n}\n\nvec4 encodeRGBM7(const in vec3 color) {\n    return encodeRGBM(color, 7.0);\n}",RoughnessNormalMap_FS:"/* Crafting a Next-Gen Material Pipeline for The Order: 1886 p21 */\n// ===============================================================================\n// Computes a new roughness value for a single mipmap texel given a normal map\n// and an existing roughness value\n// ===============================================================================\n/*\nfloat ComputeRoughness(in float2 texelPos,\n                       in uint mipLevel,\n                       in float roughness,\n                       in Texture2D NormalMap) {\n\n    if(mipLevel == 0) {\n\n        return roughness;\n\n    }\n    else\n    {\n        float3 avgNormal = 0.0f;\n        // Sample all normal map texels from the base mip level that are within\n        // the footprint of the current mipmap texel\n        const uint texelFootprint = (1 << mipLevel);\n        const float2 topLeft = (-float(texelFootprint) / 2.0f) + 0.5f;\n\n        for(uint y = 0; y < texelFootprint; ++y)\n        {\n            for(uint x = 0; x < texelFootprint; ++x)\n            {\n            float2 offset = topLeft + float2(x, y);\n            float2 samplePos = floor(texelPos + offset) + 0.5f;\n            float3 sampleNormal = NormalMap[samplePos].xyz;\n            sampleNormal = normalize(sampleNormal * 2.0f - 1.0f);\n            avgNormal += sampleNormal;\n            }\n        }\n\n        // Fit a vMF lobe to NDF for this mip texel\n        avgNormal /= (texelFootprint * texelFootprint);\n        float r = length(avgNormal);\n        float kappa = 10000.0f;\n        if(r < 1.0f)  kappa = (3 * r - r * r * r) / (1 - r * r);\n        // Compute the new roughness value\n        return sqrt(roughness * roughness + (1.0f / kappa));\n\n     }\n}\n*/\n\n\nfloat correctRoughnessNormalMap(const in float roughness, const in vec3 normalMapData) {\n\n    float r = length(normalMapData);\n    float kappa = 10000.0;\n\n    if (r < 1.0) {\n\n        kappa = (3.0 * r - r * r * r) / (1.0 - r * r);\n\n    }\n\n    // Compute the new roughness value\n    return clamp(sqrt(roughness * roughness + (1.0 / kappa)), 0.0, 1.0);\n\n}",ScalableAOExtract_FS:"",SchlickF_FS:"\n// https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/fresnel(specularf)\nvec3 F_Schlick (in vec3 f0 , in float f90 , in float u) {\n\n    return f0 + ( vec3(f90) - f0) * pow (1.0 - u, 5.0);\n\n}\n\nfloat F_Schlick (in float f0 , in float f90 , in float u) {\n\n    return f0 + ( f90 - f0 ) * pow (1.0 - u, 5.0);\n\n}\n\n\n/* When set f90 to 1 to make it cheap:\nvec3 F_Schlick(float VoH, vec3 f0) {\n    float f = pow(1.0 - VoH, 5.0);\n    return f + f0 * (1.0 - f);\n}\n*/\n",SchlickFresnel_FS:"\n// https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/fresnel(specularf)\n\nvec3 F_Schlick(float VoH, vec3 f0, float f90) {\n\n    return f0 + (vec3(f90) - f0) * pow(1.0 - VoH, 5.0);\n\n}\n\n// When set f90 to 1 to make it cheap:\nvec3 F_Schlick(float VoH, vec3 f0) {\n    float f = pow(1.0 - VoH, 5.0);\n    return f + f0 * (1.0 - f);\n}\n\nvoid fresnel2Specular() {\n\n    float fresnel = 1.0 - max(dot(gWorldNormal, gWorldViewDir), 0.0);\n\n    float fresnel2 = fresnel * fresnel;\n\n    fresnel *= fresnel2 * fresnel2;\n\n    fresnel *= gShininess * gShininess;\n\n    gSpecular = (gSpecular + (1.0 - gSpecular) * fresnel);\n\n}\n",ScreenQuad_FS:"uniform sampler2D uColorTexture;\n\nvarying vec2 varyUV;\n\nvoid main() {\n\n    gl_FragColor = texture2D(uColorTexture, varyUV);\n\n}\n",ScreenQuad_VS:"\nattribute vec2 vPosition;\n\nvarying vec2 varyUV;\n\nvoid main(void) {\n\n    gl_Position = vec4(vPosition, 0.99999, 1.0);\n\t\n    // (-1.0, 1.0) -> (0.0, 1.0)\n    varyUV = (vPosition.xy + 1.0) * 0.5;\n\n}",Sepia_FS:"uniform float uAmount;\nuniform sampler2D uColorTexture;\n\nvarying vec2 varyUV;\n\nvoid main() {\n    vec4 color = texture2D(uColorTexture, varyUV);\n    vec3 c = color.rgb;\n\n    color.r = dot(c, vec3(1.0 - 0.607 * uAmount, 0.769 * uAmount, 0.189 * uAmount));\n    color.g = dot(c, vec3(0.349 * uAmount, 1.0 - 0.314 * uAmount, 0.168 * uAmount));\n    color.b = dot(c, vec3(0.272 * uAmount, 0.534 * uAmount, 1.0 - 0.869 * uAmount));\n\n    gl_FragColor = vec4(min(vec3(1.0), color.rgb), color.a);\n}",ShadowDirLight_FS:"\nstruct DirectionalShadowMap {\n\n    sampler2D shadowMap;\n\n    mat4 shadowMatrix;\n\n    float bias;\n\n    float radius;\n\n    vec2 size;\n\n};\n\nuniform DirectionalShadowMap uDirectionalShadowMaps[$(NUM)];\n\n// TODO: add the jitter to the shadow calculation...\nfloat getShadowMapMask(\n                        vec4 shadowCoord,\n                        const sampler2D shadowMap,\n                        const vec2 shadowMapSize,\n                        const float shadowBias,\n                        const float shadowRadius ) {\n\n\tfloat shadow = 1.0;\n\n\tbvec4\tinFrustumVec\t= bvec4( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\tbool\tinFrustum\t= all( inFrustumVec );\n\tbvec2\tfrustumTestVec\t= bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\tbool\tfrustumTest\t= all( frustumTestVec );\n\n\tif (frustumTest) {\n\n    \tshadowCoord.z\t-= shadowBias;\n\n\t\tvec2\ttexelSize\t= vec2( 1.0 ) / shadowMapSize;\n\t\tfloat\tdx0\t\t= -texelSize.x * shadowRadius;\n\t\tfloat\tdy0\t\t= -texelSize.y * shadowRadius;\n\t\tfloat\tdx1\t\t= +texelSize.x * shadowRadius;\n\t\tfloat\tdy1\t\t= +texelSize.y * shadowRadius;\n\n\t\tshadow = (\n\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * (1.0 / 9.0);\n\t}\n\n\treturn shadow;\n}\n\nfloat getDirShadow (DirectionalShadowMap shadow) {\n\n    vec4 shadowCoord = shadow.shadowMatrix * vec4(varyWorldPosition, 1.0);\n    // shadowCoord.w should always 1.0, it's safe to remove this line here.\n    shadowCoord.xyz /= shadowCoord.w;\n    shadowCoord.xyz = shadowCoord.xyz * 0.5 + 0.5; // turns to 0.0 - 1.0\n    return getShadowMapMask(shadowCoord, shadow.shadowMap, shadow.size, shadow.bias, shadow.radius);\n\n}\n",ShadowMapFunc_FS:"\nfloat texture2DCompare(sampler2D depths, vec2 uv, float compare) {\n\n\treturn(step(compare, unpackRGBAToFloat(texture2D(depths, uv))));\n\n}\n\nfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\n\tconst vec2\toffset\t\t= vec2( 0.0, 1.0 );\n\tvec2\t\ttexelSize\t= vec2( 1.0 ) / size;\n\tvec2\t\tcentroidUV\t= floor( uv * size + 0.5 ) / size;\n\tfloat\t\tlb\t\t= texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare ); // 0.0, 0.0\n\tfloat\t\tlt\t\t= texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare ); // 0.0, 1.0\n\tfloat\t\trb\t\t= texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare ); // 1.0, 0.0\n\tfloat\t\trt\t\t= texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare ); // 1.0, 1.0\n\tvec2\t\tf\t\t= fract( uv * size + 0.5 );\n\tfloat\t\ta\t\t= mix( lb, lt, f.y );\n\tfloat\t\tb\t\t= mix( rb, rt, f.y );\n\tfloat\t\tc\t\t= mix( a, b, f.x );\n\treturn (c);\n\n}\n",ShadowPointLight_FS:"\nstruct PointLightShadowMap {\n\n    sampler2D shadowMap;\n\n    vec3 position;\n\n    float bias;\n\n    float radius;\n\n    vec2 size;\n\n    float near;\n\n    float far;\n\n};\n\nuniform PointLightShadowMap uPointLightShadowMap [$(NUM)];\n\nvec2 mapCubemapDirToUV( vec3 v, float texelSizeY ) {\n\n    vec3 absV = abs( v );\n    float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n    absV *= scaleToCube;\n    v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n    vec2 planar = v.xy;\n    float almostATexel = 1.5 * texelSizeY;\n    float almostOne = 1.0 - almostATexel;\n\n    if ( absV.z >= almostOne ) {\n\n        if ( v.z > 0.0 )\n            planar.x = 4.0 - v.x;\n\n    } else if ( absV.x >= almostOne ) {\n\n        float signX = sign( v.x );\n\n        planar.x = v.z * signX + 2.0 * signX;\n\n    } else if ( absV.y >= almostOne ) {\n\n        float signY = sign( v.y );\n        planar.x = v.x + 2.0 * signY + 2.0;\n        planar.y = v.z * signY - 2.0;\n\n    }\n\n    return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n}\n\nfloat getPointLightShadow (PointLightShadowMap shadow) {\n\n    vec2 texelSize = 1.0 / (shadow.size * vec2(4.0, 2.0));\n\n    vec3 light2Position = varyWorldPosition - shadow.position;\n\n    float near = shadow.near;\n    float far = shadow.far;\n\n    float distance = length(light2Position);\n\n    distance = clamp((distance - near) / (far - near), 0.0, 1.0);\n\n    distance -= shadow.bias;\n\n    vec2 offset = vec2( - 1, 1 ) * shadow.radius * texelSize.y;\n\n    vec3 light2PositionUnit = normalize( light2Position );\n\n    return (\n            texture2DCompare( shadow.shadowMap, mapCubemapDirToUV( light2PositionUnit + offset.xyy, texelSize.y ), distance ) +\n            texture2DCompare( shadow.shadowMap, mapCubemapDirToUV( light2PositionUnit + offset.yyy, texelSize.y ), distance ) +\n            texture2DCompare( shadow.shadowMap, mapCubemapDirToUV( light2PositionUnit + offset.xyx, texelSize.y ), distance ) +\n            texture2DCompare( shadow.shadowMap, mapCubemapDirToUV( light2PositionUnit + offset.yyx, texelSize.y ), distance ) +\n            texture2DCompare( shadow.shadowMap, mapCubemapDirToUV( light2PositionUnit, texelSize.y ), distance ) +\n            texture2DCompare( shadow.shadowMap, mapCubemapDirToUV( light2PositionUnit + offset.xxy, texelSize.y ), distance ) +\n            texture2DCompare( shadow.shadowMap, mapCubemapDirToUV( light2PositionUnit + offset.yxy, texelSize.y ), distance ) +\n            texture2DCompare( shadow.shadowMap, mapCubemapDirToUV( light2PositionUnit + offset.xxx, texelSize.y ), distance ) +\n            texture2DCompare( shadow.shadowMap, mapCubemapDirToUV( light2PositionUnit + offset.yxx, texelSize.y ), distance )\n    ) * ( 1.0 / 9.0 );\n\n}",Sharpness_FS:"// Created by ShengJianWen\n\n\nvarying vec2 varyUV;\nuniform sampler2D uColorTexture;\nuniform float uIntensity;\nuniform vec2 uRCP;\n\n#if defined DEPTH_TEXTURE\n\nuniform sampler2D uDepthTexture;\n\n#endif\n\n\nvec4 sharpen(sampler2D texture, vec2 uv, const float sharp) {\n\n    vec4 color = texture2D(texture, uv);\n\n#if defined DEPTH_TEXTURE\n\n    float depth = unpackRGBAToFloat(texture2D( uDepthTexture, varyUV ));\n\n    if (depth > 1.0) {\n\n        return color;\n\n    }\n\n#endif\n\n    vec2 off = uRCP;\n\n    // use useAA, 4 texFetch already in cache. perhaps we could cache ourself.\n    vec3 rgbNW = texture2D(texture, uv + off * vec2(-1.0, -1.0)).rgb;\n\n    vec3 rgbSE = texture2D(texture, uv + off * vec2(1.0, 1.0)).rgb;\n\n    vec3 rgbNE = texture2D(texture, uv + off * vec2(1.0, -1.0)).rgb;\n\n    vec3 rgbSW = texture2D(texture, uv + off * vec2(-1.0, 1.0)).rgb;\n\n    return vec4(color.rgb + sharp * (4.0 * color.rgb - rgbNW - rgbNE - rgbSW - rgbSE), color.a);\n\n}\n\nvoid main () {\n\n    gl_FragColor = vec4(sharpen(uColorTexture, varyUV, uIntensity));\n\n}\n",ShininessConstant_FS:"\nuniform float uShininess;\n\n// float materialRoughness = 1.0 - getMaterialGlossiness();\n// materialRoughness = max(0.045, materialRoughness);\n\nfloat getShininess() {\n\n    return uShininess;\n    // gShininess = uShininess;\n\n}\n\n",ShininessMap_FS:"\nuniform sampler2D shininessMap;\nuniform float uShininess;\nfloat gShininessMapFetch;\n\n// float materialRoughness = 1.0 - getMaterialGlossiness();\n// materialRoughness = max(0.045, materialRoughness);\n\nfloat getShininess() {\n    gShininessMapFetch = (texture2D(shininessMap, $(UV)).$(CHANNEL));\n    return gShininessMapFetch * uShininess;\n}\n\n",SkinFloatTex_VS:"mat4 getJointMatrix(in float matId) {\n\n\tfloat j = matId * 4.0;\n\tfloat x = mod(j, TEX_SIZE);\n\tfloat y = floor(j / TEX_SIZE);\n\n\tfloat d = 1.0 / TEX_SIZE;\n\n\tvec4 v1 = texture2D( uJoint, vec2(x + 0.5, y + 0.5) * d);\n\tvec4 v2 = texture2D( uJoint, vec2(x + 1.5, y + 0.5) * d);\n\tvec4 v3 = texture2D( uJoint, vec2(x + 2.5, y + 0.5) * d);\n\tvec4 v4 = texture2D( uJoint, vec2(x + 3.5, y + 0.5) * d);\n\n\treturn mat4( v1, v2, v3, v4 );\n\n}\n",SkinRgbaTex_VS:"float shift_right (float v, float amt) {\n\n    float value = floor(v + 0.5);\n\n    return floor(value / exp2(amt));\n\n}\n\nfloat shift_left (float v, float amt) {\n\n    return floor(floor(v + 0.5) * exp2(amt) + 0.5);\n\n}\n\nfloat mask_last (float v, float bits) {\n\n    return mod(floor(v + 0.5), shift_left(1.0, bits));\n\n}\n\nfloat extract_bits (float num, float from, float to) {\n\n    float fromIndex = floor(from + 0.5);\n\n    float toIndex = floor(to + 0.5);\n\n    return mask_last(shift_right(num, fromIndex), toIndex - fromIndex);\n\n}\n\nfloat decodeRGBA2Float(in vec4 color) {\n\n    vec4 val = color.abgr * vec4(255.0);\n\n    float sign = - shift_right(val.x, 7.0) * 2.0 + 1.0;\n\n    float mantissa = val.w + shift_left(val.z, 8.0) + shift_left(extract_bits(val.y, 0.0, 7.0), 16.0);\n    mantissa = mantissa / 8388608.0 + 1.0;\n\n    float exponent = shift_left(extract_bits(val.x, 0.0, 7.0), 1.0) + shift_right(val.y, 7.0) - 127.0;\n\n    return sign * mantissa * exp2(exponent);\n\n}\n\nmat4 getJointMatrix(in float matId)\n{\n\tfloat pixelOffset = matId * 16.0;\n\n\tfloat d = 1.0 / TEX_SIZE;\n\n\tvec2 UV = vec2(mod(pixelOffset, TEX_SIZE) + 0.5, floor(pixelOffset / TEX_SIZE) + 0.5) * d;\n\n\tmat4 jointMat;\n\n\tvec2 stepUV = vec2(d, 0.0);\n\n\tjointMat[0][0] = decodeRGBA2Float(texture2D(uJoint, UV));\n\n\tjointMat[0][1] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV));\n\n\tjointMat[0][2] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 2.0));\n\n\tjointMat[0][3] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 3.0));\n\n\n\tjointMat[1][0] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 4.0));\n\n\tjointMat[1][1] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 5.0));\n\n\tjointMat[1][2] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 6.0));\n\n\tjointMat[1][3] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 7.0));\n\n\n\tjointMat[2][0] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 8.0));\n\n\tjointMat[2][1] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 9.0));\n\n\tjointMat[2][2] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 10.0));\n\n\tjointMat[2][3] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 11.0));\n\n\n\tjointMat[3][0] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 12.0));\n\n\tjointMat[3][1] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 13.0));\n\n\tjointMat[3][2] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 14.0));\n\n\tjointMat[3][3] = decodeRGBA2Float(texture2D(uJoint, UV + stepUV * 15.0));\n\n\t\n\treturn jointMat;\n}\n",SkinTexDecl_VS:"\nuniform sampler2D uJoint;\nconst float TEX_SIZE = $(SIZE);\n\n",SkinUniforms_VS:"uniform mat4 uJointMatrices[$(JOINT_NUMS)];\n\nmat4 getJointMatrix(in float matId)\n{\n\treturn uJointMatrices[int(matId)];\n}",SkinWorld_VS:"/**\n* Dependency: SkinFloatTex.vert | SkinRgbaTex.vert\n*/\nattribute vec4 vJointIndex;\nattribute vec4 vJointWeight;\n\nmat4 getWorldMatrix() {\n\n    float weight0 = vJointWeight.x;\n    mat4 jointMatrix0 = getJointMatrix(vJointIndex.x) * weight0;\n\n    float weight1 = vJointWeight.y;\n    mat4 jointMatrix1 = getJointMatrix(vJointIndex.y) * weight1;\n\n    float weight2 = vJointWeight.z;\n    mat4 jointMatrix2 = getJointMatrix(vJointIndex.z) * weight2;\n\n    float weight3 = vJointWeight.w;\n    mat4 jointMatrix3 = getJointMatrix(vJointIndex.w) * weight3;\n\n    mat4 jointMat = jointMatrix0 + jointMatrix1 + jointMatrix2 + jointMatrix3;\n\n    return jointMat;\n\n}\n\n\n\n",Skybox_FS:"\n\nvarying vec3 vViewDir;\n\nuniform samplerCube uCubeMap;\nuniform int uCubemapAmbientMode;\nuniform vec3 uSphCoef[9];\nuniform float uCubemapSize;\n\n/* dependency: float pseudoRandom(const in vec2 fragCoord) */\n\nvoid main () {\n\n    vec3 viewDir = environmentRotate(vViewDir);\n\n    vec3 color = vec3(0.0);\n\n    if (uCubemapAmbientMode == 1) {\n        vec3 normal = normalize(viewDir +\n                                mix(-0.5/255.0, 0.5/255.0,\n                                    pseudoRandom(gl_FragCoord.xy))*2.0);\n\n        color = computeDiffuseSPH(uSphCoef, normal);\n    } else {\n        color = $(DECODE)(textureCube(uCubeMap, fixSeamsStatic(viewDir, 1.0 - 1.0 / uCubemapSize))).rgb;\n    }\n    color = envIntensify(color);\n    // color = toneMapping(color);\n    // color = gammaOutput(color);\n#ifdef ENCODE_OUTPUT\n    gl_FragColor = $(ENCODE)(color);\n#else\n    gl_FragColor = vec4(color, 1.0);\n#endif\n}\n",Skybox_VS:"\nattribute vec3 vPosition;\n\nuniform mat4 uViewMat;\nuniform mat4 uProjection;\n\n\nvarying vec3 vViewDir;\n\nvoid main(void)\n{\n\tmat4 view = uViewMat;\n\tview[3][0] = view[3][1] = view[3][2] = 0.0;\n\tgl_Position = uProjection * view * vec4(vPosition, 1.0);\n\tgl_Position.z = gl_Position.w - 0.0000001;\n\tvViewDir = vPosition;\n\n\t#ifdef FLIP_X\n\tvViewDir.x = vViewDir.x * -1.0;\n\t#endif\n\t\n\t// we must flip the x to make right-hand to left-hand...\n}\n",SmithGGXCorrelatedV_FS:'\n\n// Visiblity function (G / (4 * dot(n, v) * dot(n, l))\nfloat V_SmithGGXCorrelated ( float NdotL , float NdotV , float linearRoughness ) {\n\n    // Reference:\n    // 1. Moving_Frostbite_to_Physically_Based_Rendering-p12\n    // 2. https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/geometricshadowing(specularg)\n\n    // Original formulation of G_SmithGGX Correlated\n    // lambda_v = (-1 + sqrt ( alphaG2 * (1 - NdotL2 ) / NdotL2 + 1)) * 0.5 f;\n    // lambda_l = (-1 + sqrt ( alphaG2 * (1 - NdotV2 ) / NdotV2 + 1)) * 0.5 f;\n    // G_SmithGGXCorrelated = 1 / (1 + lambda_v + lambda_l );\n    // V_SmithGGXCorrelated = G_SmithGGXCorrelated / (4.0 f * NdotL * NdotV );\n\n    // This is the optimize version\n\n    // Caution : the " NdotL *" and " NdotV *" are explicitely inversed , this is not a mistake .\n    float Lambda_GGXV = NdotL * sqrt ((- NdotV * linearRoughness + NdotV ) * NdotV + linearRoughness );\n    float Lambda_GGXL = NdotV * sqrt ((- NdotL * linearRoughness + NdotL ) * NdotL + linearRoughness );\n\n    return 0.5 / ( Lambda_GGXV + Lambda_GGXL );\n\n    /* There is a cheap version (sketchfab use it and ):\n\n    I have tried it but artifact exists when lighting only (no environmnet-illusion)\n\n    float V_SmithGGXCorrelatedFast(float NoV, float NoL, float linearRoughness) {\n        float a = linearRoughness;  (linearRougnhess = roughness * roughness)\n        float GGXV = NoL * (NoV * (1.0 - a) + a);\n        float GGXL = NoV * (NoL * (1.0 - a) + a);\n        return 0.5 / (GGXV + GGXL);\n    }\n\n    */\n}\n',SpecularAA_FS:"\n\n/*\ntoksvig way to adjust the phong-specular-lobe\nfloat shininessAA (float specPower) {\n\n    float rlen = 1.0 / clamp(length(gSurfaceNormal), 0.0, 1.0);\n    float toksvig = 1.0 / (1.0 + specPower * (rlen - 1.0));\n\n    return specPower * mix(1.0, toksvig, uNormalMapRate);\n\n}\n*/\n\n",SpecularAANone_FS:"\n\nfloat shininessAA (float specPower) {\n\n    return specPower;\n\n}\n\n\n",SpecularConstant_FS:"\n\nuniform vec3 uSpecularColor;\n\n\nvec3 getMaterialSpecular() {\n\n    return uSpecularColor;\n\n}\n",SpecularF90_FS:"\nfloat getSpecularF90() {\n\n    // https://google.github.io/filament/Filament.md.html#toc5.6.2\n    // float f90 = clamp(dot(gSpecularF0, 50.0 * 0.33), 0.0, 1.0);\n    // cheap luminance approximation\n\n    return clamp(50.0 * gSpecularF0.g, 0.0, 1.0);\n\n}",SpecularMap_FS:"\nuniform sampler2D specularMap;\n\nvec3 getMaterialSpecular() {\n\n    return texture2D(specularMap, $(UV)).$(CHANNEL);\n\n}\n",SpecularMapTint_FS:"\n\nuniform vec3 uSpecularColor;\n\nuniform sampler2D specularMap;\n\nvec3 getMaterialSpecular() {\n\n    return texture2D(specularMap, $(UV)).$(CHANNEL) * uSpecularColor;\n\n}\n",SpecularOcclusionSimple_FS:"\n/*\nvoid specularOcclusion() {\n\n    gSpecularLight *= gAmbientOcclusion;\n    gReflection *= gAmbientOcclusion;\n\n}\n*/\n\nfloat getSpecularOcclusion(const in float materialAmbientOcclusion, const in vec3 normal, const in vec3 viewDir) {\n\n     float f = dot(normal, viewDir) + materialAmbientOcclusion;\n\n     return clamp( (f * f) - 1.0 + materialAmbientOcclusion, 0.0, 1.0 );\n\n}\n",Sph_FS:"\n//#pragma DECLARE_FUNCTION\nvec3 computeDiffuseSPH(const in vec3 sphCoef[9], const in vec3 n) {\n\n    // vec3 n = envTransform * normal;\n    // https://github.com/cedricpinson/envtools/blob/master/Cubemap.cpp#L523\n    vec3 result = sphCoef[0] +\n    sphCoef[1] * n.y +\n    sphCoef[2] * n.z +\n    sphCoef[3] * n.x +\n    sphCoef[4] * n.y * n.x +\n    sphCoef[5] * n.y * n.z +\n    sphCoef[6] * (3.0 * n.z * n.z - 1.0) +\n    sphCoef[7] * (n.z * n.x) +\n    sphCoef[8] * (n.x * n.x - n.y * n.y);\n\n    return max(result, vec3(0.0));\n\n}",SphereNormalDecode_VS:"#version 120\n\nvoid main() {\n\tgl_Position = vec4(vec3(0.0), 1.0);\n}\n",StripView_FS:"\nuniform vec2 uResolution;\nuniform mat4 uViewMat;\n\nout vec2 stripUV1;\n\nuniform sampler2D uUVTexture;\n\nuniform float uStripeParams[5];\n\nstruct StripeInfo {\n\n    float mask[5];\n    float bg;\n\n};\n\nvoid makeStripeInfo (out StripeInfo info) {\n\n    // We flow from -1.0 1.0;\n    vec2 uStripRes = vec2(2.0 / uResolution.x, 2.0 / uResolution.y);\n    highp vec2 hA = gl_FragCoord.xy * uStripRes - vec2(1.0, 1.0);\n    hA.x = hA.x + 0.25 * hA.y;\n\n    info.mask[0] = step(hA.x, uStripeParams[0]);\n    info.mask[1] = step(hA.x, uStripeParams[1]);\n    info.mask[2] = step(hA.x, uStripeParams[2]);\n    info.mask[3] = step(hA.x, uStripeParams[3]);\n    info.mask[4] = step(hA.x, uStripeParams[4]);\n\n    info.bg = 1.0 - info.mask[4];\n    info.mask[4] -= info.mask[3];\n    info.mask[3] -= info.mask[2];\n    info.mask[2] -= info.mask[1];\n    info.mask[1] -= info.mask[0];\n\n    if (info.bg == 1.0) discard;\n\n}\n\nvec3 maskColor(StripeInfo info, vec3 uv, vec3 normal, vec3 albedo, vec3 specular, vec3 shininess, vec3 shading) {\n\n    return\n     info.mask[0] * uv +\n     info.mask[1] * normal +\n     info.mask[2] * albedo +\n     info.mask[3] * specular +\n\n     info.mask[4] * shininess +\n     info.bg * shading;\n\n}\n\n\nvec3 stripeView(vec3 normal, vec3 albedo, vec3 specular, float shininess, vec3 shading) {\n\n    StripeInfo dU;\n\n    makeStripeInfo(dU);\n\n    vec3 uv = gammaInput(uUVTexture, stripUV1).rgb;\n\n    return maskColor(dU, uv, vec3(0.5 * normal + 0.5), albedo, specular, vec3(shininess), shading);\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",StripeViewLines_FS:"\nvarying vec2 varyUV;\n\nuniform vec2 uResolution;\n\nuniform float uStripeParams[5];\n\nuniform float uWidth;\n\nfloat plot (vec2 st, float pct) {\n\n  vec2 texel = (100.0 + uWidth * 100.0) / uResolution;\n\n  float width = texel.x * texel.y;\n\n  return smoothstep( pct - width, pct, st.y)-\n          smoothstep( pct, pct + width, st.y);\n\n}\n\nvoid main() {\n\n    vec2 st = varyUV * 2.0 - vec2(1.0, 1.0);\n\n    // 可以简化操作.\n    float pct0 = - 4.0 * (st.x - uStripeParams[0]);\n    float pct1 = - 4.0 * (st.x - uStripeParams[1]);\n    float pct2 = - 4.0 * (st.x - uStripeParams[2]);\n    float pct3 = - 4.0 * (st.x - uStripeParams[3]);\n    float pct4 = - 4.0 * (st.x - uStripeParams[4]);\n\n    float width = 0.01;\n\n    float lineMask = plot(st, pct0) + plot(st, pct1) + plot(st, pct2) + plot(st, pct3) + plot(st, pct4);\n\n\tgl_FragColor = vec4(vec3(0.67, 0.67, 0.67), lineMask);\n\n\n}\n",SuperSample_FS:"\nuniform sampler2D uColorTexture;\nuniform sampler2D uPreColorTexture;\nuniform float uFrameIndex;\n\n// More darkness, more obvious vignette...\n\nvarying vec2 varyUV;\n\n#define JITTER_FRAME_NUM 15.0\n\nvoid main() {\n\n    vec4 currFragColor = texture2D(uColorTexture, varyUV);\n    vec4 accumColorN = texture2D(uPreColorTexture, varyUV);\n\n    float ratio = 1.0 / (uFrameIndex + 1.0) * step(uFrameIndex, JITTER_FRAME_NUM);\n\n    gl_FragColor = mix(accumColorN, currFragColor, ratio);\n\n}\n",Tangent_VS:"\n\n\nin Tangent_Type vTangent;\n\n/*\nvec3 getWorldTangent() {\n\n    return normalize(uNormalMat * vTangent.xyz);\n\n}\n*/\n\n\nvec3 getWorldTangent() {\n\n    return normalize((gWorldMatrix * vec4(vTangent.xyz, 0.0)).xyz);\n\n}\n\n// todo: maybe bug here, gl_FrontFaceing considered...\n/*\n sketchfab...\n vec3 frontNormal = normalize(gl_FrontFacing ? vViewNormal : -vViewNormal);\n vec4 tangent = gl_FrontFacing ? vViewTangent : -vViewTangent;\n tangent.xyz = normalize(tangent.xyz);\n vec3 binormal = normalize(cross(frontNormal, tangent.xyz)) * tangent.w;\n*/\nvec3 getWorldBinormal() {\n\n    return normalize(cross(varyWorldNormal, varyWorldTangent) * vTangent.w);\n\n}\n\n",Tbn_FS:"\nvec3 convertNormalByTBN(const in vec3 T, const in vec3 B, const in vec3 N, const in vec3 texNormal) {\n\n    return normalize(mat3(normalize(T), normalize(B), normalize(N)) * texNormal);\n\n}\n\nvec3 convertNormalByTBN(const in vec3 T, const in vec3 B, const in vec3 N, const in vec2 gradient) {\n    // lean to larger component\n    return normalize((gradient.x * normalize(T) + gradient.y * normalize(B)) + N);\n\n}",TextureQuad_FS:"\nuniform sampler2D uColorTexture;\nvarying vec2 varyUV;\n\nvoid main() {\n\n    gl_FragColor = texture2D(uColorTexture, varyUV);\n\n}\n",TonemapAces_FS:"\n\n// https://zhuanlan.zhihu.com/p/21983679?from=timeline&isappinstalled=1\n\nuniform float uExposure;\n\nvec3 toneMapping (vec3 color) {\n\n\tconst float A = 2.51;\n\tconst float B = 0.03;\n\tconst float C = 2.43;\n\tconst float D = 0.59;\n\tconst float E = 0.14;\n\n\tcolor *= uExposure;\n\n\treturn (color * (A * color + B)) / (color * (C * color + D) + E);\n\t// return pow(color, vec3(2.0));//(color * (2.43 * color + 0.59) + 0.14);\n\n}",TonemapNone_FS:"\n// https://zhuanlan.zhihu.com/p/21983679?from=timeline&isappinstalled=1\n\n\nvec3 toneMapping (vec3 color) {\n\n    return color;\n\n}\n",TonemapReinhard_FS:"\nuniform float uExposure;\n\nvec3 toneMapping(vec3 color)\n{\n    color = uExposure * color;\n    return color / (1.0 + color);\n}",UniformCommon_VS:"\nuniform mat4 uProjection;\n\nuniform mat4 uViewMat;\n\nuniform mat4 uWorldMat;\n\n\n\n",UnpackRGBA2Float_FS:"/*\nfloat unpackRGBAToFloat(const vec4 value) {\n\n    const vec4 bitSh = vec4(1.0/(255.0*255.0*255.0), 1.0/(255.0*255.0), 1.0/255.0, 1.0);\n\n    return(dot(value, bitSh));\n\n} */\n\nfloat unpackRGBAToFloat( vec4 rgba ) {\n    return dot( rgba, vec4(1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0) );\n}\n",Uv1_VS:"\n#ifdef QUANTIZATION_DECOMPRESS_UV1\n\nuniform vec2 uQScaleUV1;\nuniform vec2 uQTranslateUV1;\n\nvec2 decompressUV1(vec2 uv1) {\n\n    return uQScaleUV1 * uv1 + uQTranslateUV1;\n\n}\n\n#endif\n\nvec2 getUV1() {\n\n#ifdef QUANTIZATION_DECOMPRESS_UV1\n    return decompressUV1(vUV1);\n#else\n    return vUV1;\n#endif\n\n}\n\n\n",Uv1Transform_VS:"\nvec2 getUV1() {\n\n    return vUV1 * uTiltOffset.xy + uTiltOffset.zw;\n\n}\n\n\n",Uv2_VS:"\n\n#ifdef QUANTIZATION_DECOMPRESS_UV2\n\nuniform vec2 uQScaleUV2;\nuniform vec2 uQTranslateUV2;\n\nvec2 decompressUV2(vec2 uv2) {\n\n    return uQScaleUV2 * uv2 + uQTranslateUV2;\n\n}\n\n#endif\n\nvec2 getUV1() {\n\n#ifdef QUANTIZATION_DECOMPRESS_UV2\n    return decompressUV2(vUV2);\n#else\n    return vUV2;\n#endif\n\n}\n\n",Uv2Transform_VS:"\nvec2 getUV2() {\n\n    return vUV2 * uTiltOffset.xy + uTiltOffset.zw;\n\n}\n\n\n",Version_FS:"#version 100\n",Vertex_VS:"\nvec3 getVertexPosition( const in vec3 position ) {\n\n    return position;\n\n}\n\nvec3 getVertexNormal( const in vec3 normal ) {\n\n    return normal;\n\n}\n",VertexMorph_VS:"\nin vec3 vPositionMorph0;\nin vec3 vPositionMorph1;\nin vec3 vPositionMorph2;\nin vec3 vPositionMorph3;\n\n#ifdef MORPH_NORMAL\n\n\nuniform float uMorphWeights[4];\n\nin vec3 vNormalMorph0;\nin vec3 vNormalMorph1;\nin vec3 vNormalMorph2;\nin vec3 vNormalMorph3;\n\n\nvec3 getVertexNormal(const in vec3 normal) {\n\n    vec3 morphedNormal = normal * (1.0 - (uMorphWeights[0] + uMorphWeights[1] + uMorphWeights[2] + uMorphWeights[3]));\n\n    morphedNormal += vNormalMorph0 * uMorphWeights[0];\n    morphedNormal += vNormalMorph1 * uMorphWeights[1];\n    morphedNormal += vNormalMorph2 * uMorphWeights[2];\n    morphedNormal += vNormalMorph3 * uMorphWeights[3];\n\n    return morphedNormal;\n\n}\n\n#else\n\nuniform float uMorphWeights[8];\n\nin vec3 vPositionMorph4;\nin vec3 vPositionMorph5;\nin vec3 vPositionMorph6;\nin vec3 vPositionMorph7;\n\n\nvec3 getVertexNormal(const in vec3 normal) {\n\n    return normal;\n\n}\n\n#endif\n\n\nvec3 getVertexPosition(const in vec3 position) {\n\n    float baseWeight = 1.0 - (uMorphWeights[0] + uMorphWeights[1] + uMorphWeights[2] + uMorphWeights[3]);\n\n    vec3 morphedPosition = vec3(0.0);\n\n    morphedPosition += vPositionMorph0 * uMorphWeights[0];\n    morphedPosition += vPositionMorph1 * uMorphWeights[1];\n    morphedPosition += vPositionMorph2 * uMorphWeights[2];\n    morphedPosition += vPositionMorph3 * uMorphWeights[3];\n\n\n#ifndef MORPH_NORMAL\n\n    baseWeight -= (uMorphWeights[4] + uMorphWeights[5] + uMorphWeights[6] + uMorphWeights[7]);\n\n    morphedPosition += vPositionMorph4 * uMorphWeights[4];\n    morphedPosition += vPositionMorph5 * uMorphWeights[5];\n    morphedPosition += vPositionMorph6 * uMorphWeights[6];\n    morphedPosition += vPositionMorph7 * uMorphWeights[7];\n\n#endif\n\n    morphedPosition += position * baseWeight;\n\n    return morphedPosition;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",VertexPosition_VS:"\n\n",VideoQuad_VS:"in vec2 vPosition;\nuniform vec4 uSizeInfo;\nout vec2 varyUV;\n\nvoid main(void) {\n\n    varyUV = vPosition;\n\n    float canvasAspect = uSizeInfo.x / uSizeInfo.y;\n    float videoAspect = uSizeInfo.z / uSizeInfo.w;\n\n    if (videoAspect < canvasAspect) {\n\n        varyUV.y *= videoAspect / canvasAspect;\n\n    } else {\n\n        varyUV.x *= canvasAspect / videoAspect;\n\n    }\n\n    // Affine the uv from (-0.5, 0.5) to (0.0, 1.0)\n    varyUV = varyUV * 0.5 + 0.5;\n\n    gl_Position = vec4(vPosition, 0.0, 1.0);    \n\n}",ViewDir_FS:"\n\nvec3 getWorldViewDir(const in vec3 eyePosition, const in vec3 worldPosition) {\n\n    return normalize(eyePosition - worldPosition);\n\n}\n",ViewDirReflect_FS:"\nvec3 gWorldViewReflect;\n\nvoid getWorldViewReflect() {\n\n    gWorldViewReflect = normalize(reflect(-gWorldViewDir, gWorldNormal));\n\n}\n\n",ViewPositionRebuild_FS:"\n\n// https://app.yinxiang.com/shard/s72/nl/15730711/60e0acd7-fe4f-409b-beef-266cfc196e22\nvec3 rebuildViewPosition(vec2 xyNDC, float viewZ, vec2 projMat05) {\n    return vec3(-viewZ * xyNDC / projMat05, viewZ);\n}\n\n\n",Vignette_FS:"out vec4 gl_FragColor;\nuniform sampler2D uColorTexture;\n\n// More darkness, more obvious vignette...\nuniform float uDarkness;\n\nuniform float uOffset;\n\nvarying vec2 varyUV;\n\nvoid main() {\n\n     //gl_FragCoord.xy / vec2(1920.0, 984.0);\n    vec4 texel = texture2D(uColorTexture, varyUV);\n\n    vec2 uv = (varyUV - vec2(0.5)) * vec2(uOffset);\n\n    gl_FragColor = vec4(\n                         mix(texel.rgb, vec3(1.0 - uDarkness), dot(uv, uv)),\n                         texel.a\n                       );\n\n\n}\n\n\n",World_VS:"\nmat4 getWorldMatrix() {\n\n    return uWorldMat;\n\n}\n",WorldPosition_VS:e("Cgp2ZWMzIGdldFdvcmxkUG9zaXRpb24gKGNvbnN0IGluIHZlYzMgcG9zaXRpb25BdHRyKSB7CgogICAgdmVjNCB3b3JsZFBvc2l0aW9uNCA9IGdXb3JsZE1hdHJpeCAqIHZlYzQoZ2V0VmVydGV4UG9zaXRpb24ocG9zaXRpb25BdHRyKSwgMS4wKTsKCiAgICByZXR1cm4gd29ybGRQb3NpdGlvbjQueHl6OwoKfQoK","base64")}}).call(this)}).call(this,e("buffer").Buffer)},{buffer:59}]},{},[76]);
