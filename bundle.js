!function t(e,r,n){function i(a,o){if(!r[a]){if(!e[a]){var _="function"==typeof require&&require;if(!o&&_)return _(a,!0);if(s)return s(a,!0);var h=new Error("Cannot find module '"+a+"'");throw h.code="MODULE_NOT_FOUND",h}var u=r[a]={exports:{}};e[a][0].call(u.exports,(function(t){return i(e[a][1][t]||t)}),u,u.exports,t,e,r,n)}return r[a].exports}for(var s="function"==typeof require&&require,a=0;a<n.length;a++)i(n[a]);return i}({1:[function(t,e,r){const n={Position:"vPosition",Normal:"vNormal",UV1:"vUV1",UV2:"vUV2",Tangent:"vTangent",Binormal:"vBinormal",JointIndex:"vJointIndex",JointWeight:"vJointWeight",VertexColor:"vColor",MorphPosition:"vMorphPosition",MorphPosition1:"vMorphPosition1",MorphPosition2:"vMorphPosition2",MorphPosition3:"vMorphPosition3",MorphPosition4:"vMorphPosition4"};e.exports=n},{}],2:[function(t,e,r){const n=t("./VertexAttribute"),i=t("./VertexBuffer"),s=t("./Model"),a=new n(new i(new Float32Array([-1,-1,4,-1,-1,4]),2));e.exports=({vs:t="\nprecision highp float;\nattribute vec2 position;\nvoid main() {\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n}",fs:e,uniforms:r={}})=>new s({vs:t,fs:e,attributes:{position:a},vertexCount:3,uniforms:r})},{"./Model":8,"./VertexAttribute":16,"./VertexBuffer":17}],3:[function(t,e,r){const n=t("./Texture"),i=t("./WebGLConstants");e.exports=class extends n{constructor(t){(t=t||{}).wrapT=t.wrapT||i.CLAMP_TO_EDGE,t.wrapS=t.wrapS||i.CLAMP_TO_EDGE,t.mipMaping=void 0===t.mipMaping||t.mipMaping,super(t),this.name=t.name||"untitled",this._flipY=!1}get isCubeMap(){return!0}}},{"./Texture":15,"./WebGLConstants":20}],4:[function(t,e,r){const n=t("./Texture"),i=t("./WebGLConstants");class s extends n{constructor(t,e,r){(r=r||{}).magFilter=r.magFilter||i.NEAREST,r.minFilter=r.minFilter||i.NEAREST,r.mipMaping=!1,super(r),this.width=t,this.height=e,this._flipY=!1}}s.createFloat4=(t,e,r,n=!1)=>{const a=new Float32Array(t*e*4);return r&&r(a),new s(t,e,{format:i.RGBA,dataType:i.FLOAT,wrapS:i.CLAMP_TO_EDGE,wrapT:i.CLAMP_TO_EDGE,magFilter:n?i.LINEAR:i.NEAREST,minFilter:n?i.LINEAR:i.NEAREST,anistropy:1,width:t,height:e,source:a})},e.exports=s},{"./Texture":15,"./WebGLConstants":20}],5:[function(t,e,r){let n=0;e.exports=()=>n++},{}],6:[function(t,e,r){arguments[4][5][0].apply(r,arguments)},{dup:5}],7:[function(t,e,r){e.exports={}},{}],8:[function(t,e,r){const n=t("./WebGLConstants"),i=t("./HashShaderSet");e.exports=class{constructor({uniforms:t={},attributes:e,indices:r,vs:i,fs:s,drawMode:a=n.TRIANGLES,vertexCount:o,mesh:_,instanceCount:h}){this._vs=i,this._fs=s,this._uniforms=Object.assign({},t),this._attributes=e,this._indices=r,this._drawMode=a,this._vertexCount=o,this._instanceCount=h,this._shader={vs:i,fs:s},this._shaderHash=null}get vs(){return this._vs}get fs(){return this._fs}get instanceCount(){return this._instanceCount}get uniforms(){return this._uniforms}get attributes(){return this._attributes}get indices(){return this._indices}get vertexCount(){return this._vertexCount}get drawMode(){return this._drawMode}setUniforms(t){this._uniforms=Object.assign(this._uniforms,t)}setMesh(t){}get shaderHash(){return null===this._shaderHash&&this._computeShaderHash(),this._shaderHash}_computeShaderHash(){this._shaderHash=[this._hashShader(this._vs),this._hashShader(this._fs)].join("|")}_hashShader(t){const e=i[t];return e||(i[t]=Object.keys(i).length,i[t])}}},{"./HashShaderSet":7,"./WebGLConstants":20}],9:[function(t,e,r){var n=function(t,e){void 0===e&&(e=!1),this.initialize(t,e)};n.prototype.constructor=n,n.prototype.initialize=function(t,e){return void 0===e&&(e=!1),this.mask=t,this.skipNextObservers=e,this};var i=function(t,e){this.callback=t,this.mask=e};i.prototype.constructor=i;var s=function(){this._observers=[],this._eventState=new n(0)};s.prototype.constructor=s,s.prototype.add=function(t,e,r){if(void 0===e&&(e=-1),void 0===r&&(r=!1),!t)return null;var n=new i(t,e);return r?this._observers.unshift(n):this._observers.push(n),n},s.prototype.addUnique=function(t,e,r){for(var n=0;n<this._observers.length;n++)if(this._observers[n].callback===t)return!1;return this.add(t,e,r)},s.prototype.remove=function(t){var e=this._observers.indexOf(t);return-1!==e&&(this._observers.splice(e,1),!0)},s.prototype.removeCallback=function(t){for(var e=0;e<this._observers.length;e++)if(this._observers[e].callback===t)return this._observers.splice(e,1),!0;return!1},s.prototype.notifyObservers=function(t,e){void 0===e&&(e=-1);var r=this._eventState;r.mask=e,r.skipNextObservers=!1;for(var n=0,i=this._observers;n<i.length;n++){var s=i[n];if(s.mask&e&&s.callback(t,r),r.skipNextObservers)return!1}return!0},s.prototype.hasObservers=function(){return this._observers.length>0},s.prototype.clear=function(){this._observers=[]},s.prototype.clone=function(){var t=new s;return t._observers=this._observers.slice(0),t},e.exports={EventState:n,Observable:s,Observer:i}},{}],10:[function(t,e,r){t("./AttributeNames"),t("./ProgramUniform"),t("./math/Mat4"),t("./WebGLConstants");const n=t("./GlobalID");e.exports=class{constructor({context:t,vs:e,fs:r}){this._id=n(),this._context=t,this._vs=e,this._fs=r,this._programUniforms=null,this._programAttributes=null,this._handler=null,this._samplersUnits={},this._initialize()}_initialize(){this._handler=this._context.createProgram(this._vs,this._fs),this._programUniforms=this._context.acquireProgramUniforms(this._handler),this._context.useProgram(this._handler);let t=0;for(const e in this._programUniforms){const r=this._programUniforms[e];if(!r.sampler)continue;let n=t;const i=r.size;r.array?(n=[...Array(i).keys()],r.setValue(n),t+=i):r.setValue(t++),this._samplersUnits[e]=n}this._programAttributes=this._context.acquireProgramAttributes(this._handler)}bindVertexAttributes(t={}){}_setUniform(t,e,r){}draw({uniforms:t,attributes:e,indices:r,drawMode:n,vertexCount:i,instanceCount:s}){this._context.useProgram(this._handler),this._context.setVertexArray(e,r,this);for(const e in t){const r=this._programUniforms[e];if(!r)continue;let n=t[e];r.size;if(r.sampler){const t=this._samplersUnits[e];let r=Array.isArray(t);if(r&&!Array.isArray(n)&&(n=[n]),r)for(let e=0;e<Math.min(t.length,n.length);e++)this._context.setTexture(n[e],t[e]);else this._context.setTexture(n,t)}else r.setValue(n)}const a=i,o=r;this._context._directDraw({instanceCount:s,drawMode:n,start:0,count:a,hasIndices:o})}}},{"./AttributeNames":1,"./GlobalID":5,"./ProgramUniform":11,"./WebGLConstants":20,"./math/Mat4":25}],11:[function(t,e,r){e.exports=class{constructor({location:t,cache:e,size:r,cacheSize:n,setter:i,type:s,sampler:a=!1,array:o=!1}){this._size=r,this._cacheSize=n,this._cacher=e?new Array(n):null,this._setter=i,this._location=t,this._type=s,this._sampler=a,this._array=o}get array(){return this._array}get size(){return this._size}get sampler(){return this._sampler}cache(t){if(!this._cacher)return!0;const e=this._cacher.length;var r=!1;if(1===e)this._cacher[0]!==t&&(this._cacher[0]=t,r=!0);else for(var n=0;n<e;n++)this._cacher[n]!==t[n]&&(this._cacher[n]=t[n],r=!0);return r}setValue(t){this.cache(t)&&this._setter(this._location,t)}}},{}],12:[function(t,e,r){const n=t("./WebGLConstants"),i=t("./GlobalId"),s=t("./Texture"),a=t("./CubeMap"),{Observable:o}=t("./Observable"),_=t("./DataTexture");class h{constructor(t){var e;if(this._id=i(),this._version=0,t=t||{},this.name=t.name||"untitled",t.texture?e=t.texture:(t.mipMaping=!!t.mipMaping,t.flipY=!1,(e=t.renderToCube?new a:new s(t)).width=t.width?t.width:512,e.height=t.height?t.height:512),this._renderToCube=e instanceof a,this._face=0,this._colorTexture=e,this.enableDepth=void 0!==t.enableDepth&&t.enableDepth,this.enableStencil=void 0!==t.enableStencil&&t.enableStencil,this.useDepthTexture=void 0!==t.useDepthTexture&&t.useDepthTexture,this._shareDepthFrom=t.shareDepthFrom,this.enableDepth&&this.useDepthTexture){if(!0===this._renderToCube)throw new Error("RenderTarget.renderToCube cant work with depthTexture");this.depthTexture=new s({dataType:this.enableStencil?n.UNSIGNED_INT_24_8:n.UNSIGNED_SHORT,mipMaping:!1}),this.depthTexture.width=e.width,this.depthTexture.height=e.height}this._viewport=t.viewport||[0,0,e.width,e.height],this.viewportChanged=!0,this.releaseObservable=new o}get colorTexture(){return this._colorTexture}get face(){return this._face}set face(t){this._face=t}get width(){return this._colorTexture.width}get height(){return this._colorTexture.height}resize(t,e){t===this.width&&e===this.height||(this.release(),this._colorTexture.width=t,this._colorTexture.height=e,this.setViewPort(0,0,t,e))}get renderToCube(){return this._renderToCube}release(){this.releaseObservable.notifyObservers(this)}setViewPort(t,e,r,n){var i=this._viewport;i[0]===t&&i[1]===e&&i[2]===r&&i[3]===n||(i[0]=t,i[1]=e,i[2]=r,i[3]=n,this.markDirty=!0)}copy(t){this._renderToCube=t._renderToCube,this._width=t._width,this._height=t._height,this._face=t._face,this._colorTexture=t._colorTexture.clone(),this.enableDepth=t.enableDepth,this.enableStencil=t.enableStencil,this._viewport=t._viewport.slice(0),this.viewportChanged=t.viewportChanged}get markDirty(){return!1}set markDirty(t){!0===t&&this._version++}}h.createFloat4=(t=512,e=512,r=null,n=!1)=>new h({width:t,height:e,texture:_.createFloat4(t,e,r,n)}),e.exports=h},{"./CubeMap":3,"./DataTexture":4,"./GlobalId":6,"./Observable":9,"./Texture":15,"./WebGLConstants":20}],13:[function(require,module,exports){const WebGLCompatibility=require("./WebGLCompatibility");var isStringInteger=function(t){return/^[\+|\-]?\d+$/.test(t)},getFinalDefinedValue=function(t,e){for(;t[e]&&e!==t[e];)e=t[e];return e},testIf=function(defines,line){if(line.startsWith("#ifdef"))return void 0!==defines[line.substr(7-line.length)];if(line.startsWith("#ifndef"))return void 0===defines[line.substr(8-line.length)];if(line.startsWith("#else"))return!0;for(var txt=line.match(/[#elif|#if]\s+(.*)/)[1],tokens=txt.split(/\b\d+\b|\W+|defined+/g),i=0;i<tokens.length;++i){var tok=tokens[i];if(tok){var value=getFinalDefinedValue(defines,defines[tok]);void 0===value||isStringInteger(value)||(value=!0),txt=txt.replace(tok,value)}}return eval("var defined = function(x) { return x !== undefined | 0; };\n"+txt)},processBranch=function(t,e,r,n){for(var i=[1],s=e;s<t.length;++s){var a=t[s].trim();if(a.startsWith("#endif"))i.length--;else if(a.startsWith("#el")){var o=i.length-1;0===i[o]?i[o]=testIf(r,a)?1:0:1===i[o]&&(i[o]=2)}else if(a.startsWith("#if"))i.push(testIf(r,a)?1:0);else{for(var _=!0,h=i.length;h--;)_=_&&1===i[h];if(_)if(a.startsWith("#"))if(a.startsWith("#extension"))n.push(a);else if(a.startsWith("#undef"))r[a.match(/#undef\s+(\w+)/)[1]]=void 0,n.push(a);else if(a.startsWith("#define")){var u=a.match(/#define\s+(\w+)\s*(.*)/);-1!==a.indexOf(u[1]+"(")?r[u[1]]={args:a.match(/\(.*?\)/)[0].match(/\w+/g),body:a.match(/\)(.*)/)[1]}:r[u[1]]=u[2]}else console.error("unknown preprocessor line: "+a);else n.push(a)}}},preprocessShaderSource=function(t){return t};module.exports={preprocessShaderSource:preprocessShaderSource}},{"./WebGLCompatibility":19}],14:[function(t,e,r){e.exports=class{constructor(t){this.performance=!0,this.startTime=0,this.stopTime=0,this.running=!1,this.performance=!1!==window.performance&&!!window.performance,this.preTime=0,t&&this.start()}currentTime(){return this.performance?window.performance.now():(new Date).getTime()}restart(){this.preTime=this.currentTime()}getIntervalMiniSeconds(){if(this.running){var t=this.currentTime(),e=t-this.preTime;return this.preTime=t,e}return window.window.console.warn("Stop-watch hasn't start yet, will return zero!"),0}getIntervalSeconds(){return this.getIntervalMiniSeconds()/1e3}start(){this.startTime=this.currentTime(),this.preTime=this.startTime,this.running=!0}stop(){this.stopTime=this.currentTime(),this.running=!1}getElapsedMilliseconds(){return this.running&&(this.stopTime=this.currentTime()),this.stopTime-this.startTime}getElapsedSeconds(){return this.getElapsedMilliseconds()/1e3}printElapsed(t){var e=t||"Elapsed:";window.window.console.log(e,"["+this.getElapsedMilliseconds()+"ms]","["+this.getElapsedSeconds()+"s]")}}},{}],15:[function(t,e,r){const{Observable:n}=t("./Observable"),i=t("./WebGLConstants"),s=t("./GlobalID"),a=t("./math/Vec2"),o=t("./math/Math");e.exports=class{constructor(t={}){this._id=s(),this._version=0,this._dataType=t.dataType||i.UNSIGNED_BYTE,this._internalFormat=t.internalFormat||i.RGBA,this._format=t.format||i.RGBA,this._source=t.source||null,this._mipMaping=t.mipMaping||!1,this._flipY=t.flipY||!1,this._wrapS=t.wrapS||i.CLAMP_TO_EDGE,this._wrapT=t.wrapT||i.CLAMP_TO_EDGE,this._magFilter=t.magFilter||i.LINEAR,this._minFilter=t.minFilter||i.LINEAR,this._anisotropy=t.anisotropy||16,this.releaseObservable=new n,this.rgbm=void 0!==t.rgbm&&t.rgbm,this._width=0,this._height=0,this._size=new a(this.width,this.height)}isPowerOfTwo(){return o.isPowerOfTwo(this.width)&&o.isPowerOfTwo(this.height)}get isTexture(){return!0}get width(){return this._width}set width(t){return this._size.x=t,this._width=t,this}get size(){return this._size}get height(){return this._height}set height(t){return this._size.y=t,this._height=t,this}get dataType(){return this._dataType}set dataType(t){if(this._dataType!==t)return this._dataType=t,this.markDirty=!0,this}get format(){return this._format}set format(t){if(this._format!==t)return this._format=t,this.markDirty=!0,this}get internalFormat(){return this._internalFormat}set internalFormat(t){if(this._internalFormat!==t)return this._internalFormat=t,this.markDirty=!0,this}get mipMaping(){return this._mipMaping}set mipMaping(t){if(this._mipMaping!==t)return this._mipMaping=t,this.markDirty=!0,this}get wrapS(){return this._wrapS}set wrapS(t){if(t!==this._wrapS)return this._wrapS=t,this.markDirty=!0,this}get wrapT(){return this._wrapT}set wrapT(t){if(t!==this._wrapT)return this._wrapT=t,this.markDirty=!0,this}get magFilter(){return this._magFilter}set magFilter(t){if(this._magFilter!==t)return this._magFilter=t,this.markDirty=!0,this}get minFilter(){return this._minFilter}set minFilter(t){if(this._minFilter!==t)return this._minFilter=t,this.markDirty=!0,this}get markDirty(){return!1}set markDirty(t){return!0===t&&(this._version=this._version+1),this}set source(t){if(this._source!==t)return this._source=t,this.markDirty=!0,this}get source(){return this._source}set flipY(t){this._flipY!==t&&(this._flipY=t,this.markDirty=!0)}get flipY(){return this._flipY}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy!==t&&(this._anisotropy=t,this.markDirty=!0)}release(){this.releaseObservable.notifyObservers(this)}copy(t){this._dataType=t._dataType,this._internalFormat=t._internalFormat,this._source=t._source,this._mipMaping=t._mipMaping,this.width=t.width,this.height=t.height,this.rgbm=t.rgbm,this._flipY=t._flipY,this._wrapS=t._wrapS,this._wrapT=t._wrapT,this._magFilter=t._magFilter,this._minFilter=t._minFilter,this.markDirty=!0}clone(){}}},{"./GlobalID":5,"./Observable":9,"./WebGLConstants":20,"./math/Math":26,"./math/Vec2":27}],16:[function(t,e,r){t("./AttributeNames");const n=t("./math/Vec4"),i=t("./math/Vec3"),s=t("./math/Vec2"),a=t("./GlobalID");class o{constructor(t,e,r,n=0){this._id=a(),this._buffer=t,this._array=t._array;var i=t.bytesPerElement;this._stride=t._stride,this._strideBytes=this._stride*i,this._offset=r||0,this._offsetBytes=this._offset*i,this._count=t._count,this._itemSize=e||this._stride,this._divisor=n,this.normalized=!1,this.get=o.getter(this._itemSize)}set(){for(var t=0,e=this._stride*arguments[t]+this._offset;t<this._itemSize;t++)this._array[e+t]=arguments[t+1]}setFromArray(t){for(var e,r=0,n=t.length/this._itemSize;r<n;r++){var i=r*this._stride+this._offset;for(e=0;e<this._itemSize;e++)this._array[i+e]=t[r*this._itemSize+e]}}get itemSize(){return this._itemSize}get stride(){return this._stride}get offset(){return this._offset}get count(){return this._count}set markDirty(t){!1!==t&&(this._buffer.markDirty=!0)}}var _;o.getter=((_=new Array(4))[0]=function(t){return this._array[this._stride*t+this._offset]},_[1]=function(t,e){var r=e||new s,n=t*this._stride+this._offset;return r.x=this._array[n],r.y=this._array[n+1],r},_[2]=function(t,e){var r=e||new i,n=t*this._stride+this._offset;return r.x=this._array[n],r.y=this._array[n+1],r.z=this._array[n+2],r},_[3]=function(t,e){var r=e||new n,i=t*this._stride+this._offset;return r.x=this._array[i],r.y=this._array[i+1],r.z=this._array[i+2],r.w=this._array[i+3],r},function(t){return _[t-1]}),e.exports=o},{"./AttributeNames":1,"./GlobalID":5,"./math/Vec2":27,"./math/Vec3":28,"./math/Vec4":29}],17:[function(t,e,r){t("./AttributeNames");const n=t("./WebGLConstants"),{Observable:i}=t("./Observable"),s=t("./GlobalID");e.exports=class{constructor(t,e,r=!0){this._id=s(),this._array=t,this._stride=e,this._storeType=function(t){return t instanceof Int8Array?n.BYTE:t instanceof Uint8Array?n.UNSIGNED_BYTE:t instanceof Int16Array?n.SHORT:t instanceof Uint16Array?n.UNSIGNED_SHORT:t instanceof Int32Array?n.INT:t instanceof Uint32Array?n.UNSIGNED_INT:t instanceof Float32Array?n.FLOAT:t instanceof Float64Array?n.DOUBLE:void 0}(t),this._count=t.length/e,this._version=0,this.releaseObservable=new i,this._staticUsage=r}set markDirty(t){!0===t&&this._version++}get bytesPerElement(){return this._array.BYTES_PER_ELEMENT}get length(){return this._array.length}release(){this.releaseObservable.notifyObservers(this,void 0)}}},{"./AttributeNames":1,"./GlobalID":5,"./Observable":9,"./WebGLConstants":20}],18:[function(t,e,r){const n=t("eventemitter3"),i=t("./WebGLContext"),s=t("./Program");e.exports=class extends n{constructor(t,e){super(),this._canvas=t,this._currentWidth=0,this._currentHeight=0,this.setupDevicePixelRatio(),this._context=new i(this._canvas,e),this._context.initializeStates(),this._programCache={}}get context(){return this._context}runTransform({}){}draw(t,e={}){let r=this._programCache[t.shaderHash];e.renderTarget;const n=this._context;if(void 0===r){const e=t.vs,i=t.fs;r=new s({vs:e,fs:i,context:n}),this._programCache[t.shaderHash]=r}const i=e.uniforms?Object.assign(t.uniforms,e.uniforms):t.uniforms,a=t.attributes,o=t.indices,_=t.vertexCount,h=t.drawMode,u=t.instanceCount;r.draw({uniforms:i,attributes:a,indices:o,vertexCount:_,drawMode:h,instanceCount:u})}get width(){return this._currentWidth}get height(){return this._currentHeight}get canvas(){return this._canvas}setupDevicePixelRatio(){const t=window.devicePixelRatio||1;this._devicePixelRatio=t}computeCanvasSize(){var t,e,r=this._canvas;(t=r.clientWidth)<1&&(t=1),(e=r.clientHeight)<1&&(e=1);var n=this._devicePixelRatio,i=Math.floor(t*n),s=Math.floor(e*n),a=!1;return this._currentWidth!==i&&(r.width=i,this._currentWidth=i,a=!0),this._currentHeight!==s&&(r.height=s,this._currentHeight=s,a=!0),a}}},{"./Program":10,"./WebGLContext":21,eventemitter3:32}],19:[function(t,e,r){const n=t("./WebGLUtils"),i=t("./Texture");var s=function(){this._checkRTT={},this._webGLExtensions={},this._webGLParameters={},this._webGLShaderMaxInt="NONE",this._webGLShaderMaxFloat="NONE",this._bugsDB={},this._webGLPlatforms={},this._webGLParameters.MAX_COMBINED_TEXTURE_IMAGE_UNITS=8,this._webGLParameters.MAX_CUBE_MAP_TEXTURE_SIZE=16,this._webGLParameters.MAX_FRAGMENT_UNIFORM_VECTORS=16,this._webGLParameters.MAX_RENDERBUFFER_SIZE=1,this._webGLParameters.MAX_TEXTURE_IMAGE_UNITS=8,this._webGLParameters.MAX_TEXTURE_SIZE=64,this._webGLParameters.MAX_VARYING_VECTORS=8,this._webGLParameters.MAX_VERTEX_ATTRIBS=8,this._webGLParameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS=0,this._webGLParameters.MAX_VERTEX_UNIFORM_VECTORS=128,this._webGLParameters.MAX_VIEWPORT_DIMS=[1,1],this._webGLParameters.NUM_COMPRESSED_TEXTURE_FORMATS=0,this._webGLParameters.MAX_SHADER_PRECISION_FLOAT="none",this._webGLParameters.MAX_SHADER_PRECISION_INT="none",this._gl=void 0,this.hasFloatRTTSupport=!1,this.hasLinearHalfFloatRTTSupport=!1,this.hasHalfFloatRTTSupport=!1,this.hasLinearHalfFloatRTTSupport=!1};s.instance=function(t,e){if(!s._instance){var r,i=t;if(!i){"undefined"!=typeof window&&window.gli&&(r=window.gli.host.inspectContext,window.gli.host.inspectContext=!1);var a=document.createElement("canvas");a.width=32,a.height=32;var o={antialias:!1};o.extendWithOptionsURL(),i=n.setupWebGL(a,o,(function(){}))}s._instance=new s,i?s._instance.init(i):notify.warn("no support for webgl context detected."),r&&(window.gli.host.inspectContext=r)}return t&&(e||t!==s._instance.getContext())&&s._instance.initContextDependant(t),s._instance},s.prototype={getContext:function(){return this._gl},initContextDependant:function(t){this._gl=t,this._isGL2=void 0!==window.WebGL2RenderingContext&&t instanceof window.WebGL2RenderingContext,this.initWebGLExtensions(t),this.hasFloatRTTSupport=this.hasFloatRTT(t),this.hasLinearHalfFloatRTTSupport=this.hasLinearFloatRTT(t),this.hasHalfFloatRTTSupport=this.hasHalfFloatRTT(t),this.hasLinearHalfFloatRTTSupport=this.hasLinearHalfFloatRTT(t)},init:function(t){if(this.initWebGLParameters(t),this.initPlatformSupport(),this.initBugDB(),this.initContextDependant(t),this._isGL2)for(var e=["OES_element_index_uint","EXT_sRGB","EXT_blend_minmax","EXT_frag_depth","WEBGL_depth_texture","EXT_shader_texture_lod","OES_standard_derivatives","OES_texture_float","OES_texture_half_float","OES_texture_half_float_linear","OES_texture_float_linear","OES_vertex_array_object","WEBGL_draw_buffers","OES_fbo_render_mipmap","ANGLE_instanced_arrays"],r=s._instance.getWebGLExtensions(),n=function(){},i=0,a=e.length;i<a;i++)r[e[i]]=n},isWebGL2:function(){return this._isGL2},initBugDB:function(){var t=this._webGLPlatforms,e=this._webGLParameters;t.Apple&&(e.UNMASKED_VENDOR_WEBGL&&-1===e.UNMASKED_VENDOR_WEBGL.indexOf("Intel")||(this._bugsDB.OES_standard_derivatives=!0))},initPlatformSupport:function(){var t=this._webGLPlatforms;t.Apple=-1!==navigator.vendor.indexOf("Apple")||-1!==navigator.vendor.indexOf("OS X"),t.Mobile=/Mobi/.test(navigator.userAgent)||/ablet/.test(navigator.userAgent)},getWebGLPlatform:function(t){return this._webGLPlatforms[t]},getWebGLPlatforms:function(){return this._webGLPlatforms},getWebGLParameter:function(t){return this._webGLParameters[t]},getWebGLParameters:function(){return this._webGLParameters},getShaderMaxPrecisionFloat:function(){return this._webGLParameters.MAX_SHADER_PRECISION_FLOAT},getShaderMaxPrecisionInt:function(){return this._webGLParameters.MAX_SHADER_PRECISION_INT},checkSupportRTT:function(t,e,r){var n=e+","+r;if(this._isGL2)return!!this._webGLExtensions.EXT_color_buffer_float;if(void 0!==this._checkRTT[n])return this._checkRTT[n];if(!t)return!1;var i=t.createTexture();t.bindTexture(t.TEXTURE_2D,i),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,2,2,0,t.RGBA,e,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,r),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,r);var s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,i,0);var a=this._checkRTT[n]=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.deleteTexture(i),t.deleteFramebuffer(s),t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),a},hasLinearHalfFloatRTT:function(t){return this._webGLExtensions.OES_texture_half_float_linear&&this.checkSupportRTT(t,t.HALF_FLOAT,t.LINEAR)},hasHalfFloatRTT:function(t){return this._webGLExtensions.OES_texture_half_float&&this.checkSupportRTT(t,t.HALF_FLOAT,t.NEAREST)},hasLinearFloatRTT:function(t){return this._webGLExtensions.OES_texture_float_linear&&this.checkSupportRTT(t,t.FLOAT,t.LINEAR)},hasFloatRTT:function(t){return this._webGLExtensions.OES_texture_float&&this.checkSupportRTT(t,t.FLOAT,t.NEAREST)},queryPrecision:function(t,e,r){var n=t.getShaderPrecisionFormat(e,r);return!!n&&0!==n.precision},hasVAO:function(){return!!this._webGLExtensions.OES_vertex_array_object},getDisjointTimerQuery:function(){return this._webGLExtensions.EXT_disjoint_timer_query_webgl2||this._webGLExtensions.EXT_disjoint_timer_query},initWebGLParameters:function(t){if(t){for(var e=["MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_VARYING_VECTORS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORT_DIMS","SHADING_LANGUAGE_VERSION","VERSION","VENDOR","RENDERER","ALIASED_LINE_WIDTH_RANGE","ALIASED_POINT_SIZE_RANGE","RED_BITS","GREEN_BITS","BLUE_BITS","ALPHA_BITS","DEPTH_BITS","STENCIL_BITS"],r=this._webGLParameters,n=0,i=e.length;n<i;++n){var s=e[n];r[s]=t.getParameter(t[s])}this.queryPrecision(t,t.FRAGMENT_SHADER,t.HIGH_FLOAT)?r.MAX_SHADER_PRECISION_FLOAT="highp":this.queryPrecision(t,t.FRAGMENT_SHADER,t.MEDIUM_FLOAT)?r.MAX_SHADER_PRECISION_FLOAT="mediump":this.queryPrecision(t,t.FRAGMENT_SHADER,t.LOW_FLOAT)&&(r.MAX_SHADER_PRECISION_FLOAT="lowp"),this.queryPrecision(t,t.FRAGMENT_SHADER,t.HIGH_INT)?r.MAX_SHADER_PRECISION_INT="highp":this.queryPrecision(t,t.FRAGMENT_SHADER,t.MEDIUM_INT)?r.MAX_SHADER_PRECISION_INT="mediump":this.queryPrecision(t,t.FRAGMENT_SHADER,t.LOW_INT)&&(r.MAX_SHADER_PRECISION_INT="lowp");var a=t.getExtension("WEBGL_debug_renderer_info");a&&(r.UNMASKED_RENDERER_WEBGL=t.getParameter(a.UNMASKED_RENDERER_WEBGL),r.UNMASKED_VENDOR_WEBGL=t.getParameter(a.UNMASKED_VENDOR_WEBGL))}},applyExtension:function(t,e){var r=t.getExtension(e),n=e.split("_")[0],i="_"+n,s=new RegExp(n+"$"),a=new RegExp(i);for(var o in r){if("function"==typeof r[o]){var _=o.replace(s,"");void 0===t[_]&&(t[_]=r[o].bind(r))}else{var h=o.replace(a,"");void 0===t[h]&&(t[h]=r[o])}}},getWebGLExtension:function(t){return this._webGLExtensions[t]},getWebGLExtensions:function(){return this._webGLExtensions},_checkShader:function(t,e,r){var n=e;"string"==typeof n&&(n=t[e]);var i=t.createShader(n);return t.shaderSource(i,r),t.compileShader(i),!(!t.getShaderParameter(i,t.COMPILE_STATUS)&&!t.isContextLost())},_doubleCheckExtension:function(t,e){var r=["#version 100","#extension GL_%ext% : enable","precision mediump float;","varying vec3 vColor;","void main() {","gl_FragColor = vec4(vColor, 1.0);","}"].join("\n");return this._checkShader(t,"FRAGMENT_SHADER",r.replace(/\%ext\%/g,e))},initWebGLExtensions:function(t,e){if(t){var r=e;void 0===r&&(r=!0);var n=t.getSupportedExtensions();if(n){for(var s=this._webGLExtensions,a=0,o=n.length;a<o;++a){var _=n[a];r&&this._bugsDB[_]||(s[_]=t.getExtension(_),this._isGL2||this.applyExtension(t,_))}if(!this._isGL2){var h="EXT_shader_texture_lod";s[h]&&!this._doubleCheckExtension(t,h)&&delete s[h]}var u=this.getWebGLExtension("EXT_texture_filter_anisotropic");u?(i.ANISOTROPIC_SUPPORT_EXT=!0,i.ANISOTROPIC_SUPPORT_MAX=t.getParameter(u.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):(i.ANISOTROPIC_SUPPORT_EXT=!1,i.ANISOTROPIC_SUPPORT_MAX=1)}}}},e.exports=s},{"./Texture":15,"./WebGLUtils":23}],20:[function(t,e,r){e.exports={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,FUNC_ADD:32774,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,BLEND_COLOR:32773,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,VENDOR:7936,RENDERER:7937,VERSION:7938,IMPLEMENTATION_COLOR_READ_TYPE:35738,IMPLEMENTATION_COLOR_READ_FORMAT:35739,BROWSER_DEFAULT_WEBGL:37444,STATIC_DRAW:35044,STREAM_DRAW:35040,DYNAMIC_DRAW:35048,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,CULL_FACE:2884,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,BLEND:3042,DEPTH_TEST:2929,DITHER:3024,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,SCISSOR_TEST:3089,STENCIL_TEST:2960,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CONTEXT_LOST_WEBGL:37442,CW:2304,CCW:2305,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DOUBLE:5130,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,COMPILE_STATUS:35713,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_ATTRIBUTES:35721,ACTIVE_UNIFORMS:35718,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,ALWAYS:519,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,GEQUAL:518,NOTEQUAL:517,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,TEXTURE_WIDTH:4096,TEXTURE_HEIGHT:4097,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,READ_FRAMEBUFFER:36008,DRAW_FRAMEBUFFER:36009,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,READ_BUFFER:3074,UNPACK_ROW_LENGTH:3314,UNPACK_SKIP_ROWS:3315,UNPACK_SKIP_PIXELS:3316,PACK_ROW_LENGTH:3330,PACK_SKIP_ROWS:3331,PACK_SKIP_PIXELS:3332,TEXTURE_BINDING_3D:32874,UNPACK_SKIP_IMAGES:32877,UNPACK_IMAGE_HEIGHT:32878,MAX_3D_TEXTURE_SIZE:32883,MAX_ELEMENTS_VERTICES:33e3,MAX_ELEMENTS_INDICES:33001,MAX_TEXTURE_LOD_BIAS:34045,MAX_FRAGMENT_UNIFORM_COMPONENTS:35657,MAX_VERTEX_UNIFORM_COMPONENTS:35658,MAX_ARRAY_TEXTURE_LAYERS:35071,MIN_PROGRAM_TEXEL_OFFSET:35076,MAX_PROGRAM_TEXEL_OFFSET:35077,MAX_VARYING_COMPONENTS:35659,FRAGMENT_SHADER_DERIVATIVE_HINT:35723,RASTERIZER_DISCARD:35977,VERTEX_ARRAY_BINDING:34229,MAX_VERTEX_OUTPUT_COMPONENTS:37154,MAX_FRAGMENT_INPUT_COMPONENTS:37157,MAX_SERVER_WAIT_TIMEOUT:37137,MAX_ELEMENT_INDEX:36203,RED:6403,RGB8:32849,RGBA8:32856,RGB10_A2:32857,TEXTURE_3D:32879,TEXTURE_WRAP_R:32882,TEXTURE_MIN_LOD:33082,TEXTURE_MAX_LOD:33083,TEXTURE_BASE_LEVEL:33084,TEXTURE_MAX_LEVEL:33085,TEXTURE_COMPARE_MODE:34892,TEXTURE_COMPARE_FUNC:34893,SRGB:35904,SRGB8:35905,SRGB8_ALPHA8:35907,COMPARE_REF_TO_TEXTURE:34894,RGBA32F:34836,RGB32F:34837,RGBA16F:34842,RGB16F:34843,TEXTURE_2D_ARRAY:35866,TEXTURE_BINDING_2D_ARRAY:35869,R11F_G11F_B10F:35898,RGB9_E5:35901,RGBA32UI:36208,RGB32UI:36209,RGBA16UI:36214,RGB16UI:36215,RGBA8UI:36220,RGB8UI:36221,RGBA32I:36226,RGB32I:36227,RGBA16I:36232,RGB16I:36233,RGBA8I:36238,RGB8I:36239,RED_INTEGER:36244,RGB_INTEGER:36248,RGBA_INTEGER:36249,R8:33321,RG8:33323,R16F:33325,R32F:33326,RG16F:33327,RG32F:33328,R8I:33329,R8UI:33330,R16I:33331,R16UI:33332,R32I:33333,R32UI:33334,RG8I:33335,RG8UI:33336,RG16I:33337,RG16UI:33338,RG32I:33339,RG32UI:33340,R8_SNORM:36756,RG8_SNORM:36757,RGB8_SNORM:36758,RGBA8_SNORM:36759,RGB10_A2UI:36975,TEXTURE_IMMUTABLE_FORMAT:37167,TEXTURE_IMMUTABLE_LEVELS:33503,UNSIGNED_INT_2_10_10_10_REV:33640,UNSIGNED_INT_10F_11F_11F_REV:35899,UNSIGNED_INT_5_9_9_9_REV:35902,FLOAT_32_UNSIGNED_INT_24_8_REV:36269,UNSIGNED_INT_24_8:34042,HALF_FLOAT:5131,RG:33319,RG_INTEGER:33320,INT_2_10_10_10_REV:36255,CURRENT_QUERY:34917,QUERY_RESULT:34918,QUERY_RESULT_AVAILABLE:34919,ANY_SAMPLES_PASSED:35887,ANY_SAMPLES_PASSED_CONSERVATIVE:36202,MAX_DRAW_BUFFERS:34852,DRAW_BUFFER0:34853,DRAW_BUFFER1:34854,DRAW_BUFFER2:34855,DRAW_BUFFER3:34856,DRAW_BUFFER4:34857,DRAW_BUFFER5:34858,DRAW_BUFFER6:34859,DRAW_BUFFER7:34860,DRAW_BUFFER8:34861,DRAW_BUFFER9:34862,DRAW_BUFFER10:34863,DRAW_BUFFER11:34864,DRAW_BUFFER12:34865,DRAW_BUFFER13:34866,DRAW_BUFFER14:34867,DRAW_BUFFER15:34868,MAX_COLOR_ATTACHMENTS:36063,COLOR_ATTACHMENT1:36065,COLOR_ATTACHMENT2:36066,COLOR_ATTACHMENT3:36067,COLOR_ATTACHMENT4:36068,COLOR_ATTACHMENT5:36069,COLOR_ATTACHMENT6:36070,COLOR_ATTACHMENT7:36071,COLOR_ATTACHMENT8:36072,COLOR_ATTACHMENT9:36073,COLOR_ATTACHMENT10:36074,COLOR_ATTACHMENT11:36075,COLOR_ATTACHMENT12:36076,COLOR_ATTACHMENT13:36077,COLOR_ATTACHMENT14:36078,COLOR_ATTACHMENT15:36079,SAMPLER_3D:35679,SAMPLER_2D_SHADOW:35682,SAMPLER_2D_ARRAY:36289,SAMPLER_2D_ARRAY_SHADOW:36292,SAMPLER_CUBE_SHADOW:36293,INT_SAMPLER_2D:36298,INT_SAMPLER_3D:36299,INT_SAMPLER_CUBE:36300,INT_SAMPLER_2D_ARRAY:36303,UNSIGNED_INT_SAMPLER_2D:36306,UNSIGNED_INT_SAMPLER_3D:36307,UNSIGNED_INT_SAMPLER_CUBE:36308,UNSIGNED_INT_SAMPLER_2D_ARRAY:36311,MAX_SAMPLES:36183,SAMPLER_BINDING:35097,PIXEL_PACK_BUFFER:35051,PIXEL_UNPACK_BUFFER:35052,PIXEL_PACK_BUFFER_BINDING:35053,PIXEL_UNPACK_BUFFER_BINDING:35055,COPY_READ_BUFFER:36662,COPY_WRITE_BUFFER:36663,COPY_READ_BUFFER_BINDING:36662,COPY_WRITE_BUFFER_BINDING:36663,FLOAT_MAT2x3:35685,FLOAT_MAT2x4:35686,FLOAT_MAT3x2:35687,FLOAT_MAT3x4:35688,FLOAT_MAT4x2:35689,FLOAT_MAT4x3:35690,UNSIGNED_INT_VEC2:36294,UNSIGNED_INT_VEC3:36295,UNSIGNED_INT_VEC4:36296,UNSIGNED_NORMALIZED:35863,SIGNED_NORMALIZED:36764,VERTEX_ATTRIB_ARRAY_INTEGER:35069,VERTEX_ATTRIB_ARRAY_DIVISOR:35070,TRANSFORM_FEEDBACK_BUFFER_MODE:35967,MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:35968,TRANSFORM_FEEDBACK_VARYINGS:35971,TRANSFORM_FEEDBACK_BUFFER_START:35972,TRANSFORM_FEEDBACK_BUFFER_SIZE:35973,TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:35976,MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:35978,MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:35979,INTERLEAVED_ATTRIBS:35980,SEPARATE_ATTRIBS:35981,TRANSFORM_FEEDBACK_BUFFER:35982,TRANSFORM_FEEDBACK_BUFFER_BINDING:35983,TRANSFORM_FEEDBACK:36386,TRANSFORM_FEEDBACK_PAUSED:36387,TRANSFORM_FEEDBACK_ACTIVE:36388,TRANSFORM_FEEDBACK_BINDING:36389,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:33296,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:33297,FRAMEBUFFER_ATTACHMENT_RED_SIZE:33298,FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:33299,FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:33300,FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:33301,FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:33302,FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:33303,FRAMEBUFFER_DEFAULT:33304,DEPTH24_STENCIL8:35056,DRAW_FRAMEBUFFER_BINDING:36006,READ_FRAMEBUFFER_BINDING:36010,RENDERBUFFER_SAMPLES:36011,FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:36052,FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:36182,UNIFORM_BUFFER:35345,UNIFORM_BUFFER_BINDING:35368,UNIFORM_BUFFER_START:35369,UNIFORM_BUFFER_SIZE:35370,MAX_VERTEX_UNIFORM_BLOCKS:35371,MAX_FRAGMENT_UNIFORM_BLOCKS:35373,MAX_COMBINED_UNIFORM_BLOCKS:35374,MAX_UNIFORM_BUFFER_BINDINGS:35375,MAX_UNIFORM_BLOCK_SIZE:35376,MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:35377,MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:35379,UNIFORM_BUFFER_OFFSET_ALIGNMENT:35380,ACTIVE_UNIFORM_BLOCKS:35382,UNIFORM_TYPE:35383,UNIFORM_SIZE:35384,UNIFORM_BLOCK_INDEX:35386,UNIFORM_OFFSET:35387,UNIFORM_ARRAY_STRIDE:35388,UNIFORM_MATRIX_STRIDE:35389,UNIFORM_IS_ROW_MAJOR:35390,UNIFORM_BLOCK_BINDING:35391,UNIFORM_BLOCK_DATA_SIZE:35392,UNIFORM_BLOCK_ACTIVE_UNIFORMS:35394,UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:35395,UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:35396,UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:35398,OBJECT_TYPE:37138,SYNC_CONDITION:37139,SYNC_STATUS:37140,SYNC_FLAGS:37141,SYNC_FENCE:37142,SYNC_GPU_COMMANDS_COMPLETE:37143,UNSIGNALED:37144,SIGNALED:37145,ALREADY_SIGNALED:37146,TIMEOUT_EXPIRED:37147,CONDITION_SATISFIED:37148,WAIT_FAILED:37149,SYNC_FLUSH_COMMANDS_BIT:1,COLOR:6144,DEPTH:6145,STENCIL:6146,MIN:32775,MAX:32776,DEPTH_COMPONENT24:33190,STREAM_READ:35041,STREAM_COPY:35042,STATIC_READ:35045,STATIC_COPY:35046,DYNAMIC_READ:35049,DYNAMIC_COPY:35050,DEPTH_COMPONENT32F:36012,DEPTH32F_STENCIL8:36013,INVALID_INDEX:4294967295,TIMEOUT_IGNORED:-1,MAX_CLIENT_WAIT_TIMEOUT_WEBGL:37447,VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE:35070,UNMASKED_VENDOR_WEBGL:37445,UNMASKED_RENDERER_WEBGL:37446,MAX_TEXTURE_MAX_ANISOTROPY_EXT:34047,TEXTURE_MAX_ANISOTROPY_EXT:34046,COMPRESSED_RGB_S3TC_DXT1_EXT:33776,COMPRESSED_RGBA_S3TC_DXT1_EXT:33777,COMPRESSED_RGBA_S3TC_DXT3_EXT:33778,COMPRESSED_RGBA_S3TC_DXT5_EXT:33779,COMPRESSED_R11_EAC:37488,COMPRESSED_SIGNED_R11_EAC:37489,COMPRESSED_RG11_EAC:37490,COMPRESSED_SIGNED_RG11_EAC:37491,COMPRESSED_RGB8_ETC2:37492,COMPRESSED_RGBA8_ETC2_EAC:37493,COMPRESSED_SRGB8_ETC2:37494,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:37495,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:37496,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:37497,COMPRESSED_RGB_PVRTC_4BPPV1_IMG:35840,COMPRESSED_RGBA_PVRTC_4BPPV1_IMG:35842,COMPRESSED_RGB_PVRTC_2BPPV1_IMG:35841,COMPRESSED_RGBA_PVRTC_2BPPV1_IMG:35843,COMPRESSED_RGB_ETC1_WEBGL:36196,COMPRESSED_RGB_ATC_WEBGL:35986,COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL:35986,COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL:34798,UNSIGNED_INT_24_8_WEBGL:34042,HALF_FLOAT_OES:36193,RGBA32F_EXT:34836,RGB32F_EXT:34837,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT:33297,UNSIGNED_NORMALIZED_EXT:35863,MIN_EXT:32775,MAX_EXT:32776,SRGB_EXT:35904,SRGB_ALPHA_EXT:35906,SRGB8_ALPHA8_EXT:35907,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT:33296,FRAGMENT_SHADER_DERIVATIVE_HINT_OES:35723,COLOR_ATTACHMENT0_WEBGL:36064,COLOR_ATTACHMENT1_WEBGL:36065,COLOR_ATTACHMENT2_WEBGL:36066,COLOR_ATTACHMENT3_WEBGL:36067,COLOR_ATTACHMENT4_WEBGL:36068,COLOR_ATTACHMENT5_WEBGL:36069,COLOR_ATTACHMENT6_WEBGL:36070,COLOR_ATTACHMENT7_WEBGL:36071,COLOR_ATTACHMENT8_WEBGL:36072,COLOR_ATTACHMENT9_WEBGL:36073,COLOR_ATTACHMENT10_WEBGL:36074,COLOR_ATTACHMENT11_WEBGL:36075,COLOR_ATTACHMENT12_WEBGL:36076,COLOR_ATTACHMENT13_WEBGL:36077,COLOR_ATTACHMENT14_WEBGL:36078,COLOR_ATTACHMENT15_WEBGL:36079,DRAW_BUFFER0_WEBGL:34853,DRAW_BUFFER1_WEBGL:34854,DRAW_BUFFER2_WEBGL:34855,DRAW_BUFFER3_WEBGL:34856,DRAW_BUFFER4_WEBGL:34857,DRAW_BUFFER5_WEBGL:34858,DRAW_BUFFER6_WEBGL:34859,DRAW_BUFFER7_WEBGL:34860,DRAW_BUFFER8_WEBGL:34861,DRAW_BUFFER9_WEBGL:34862,DRAW_BUFFER10_WEBGL:34863,DRAW_BUFFER11_WEBGL:34864,DRAW_BUFFER12_WEBGL:34865,DRAW_BUFFER13_WEBGL:34866,DRAW_BUFFER14_WEBGL:34867,DRAW_BUFFER15_WEBGL:34868,MAX_COLOR_ATTACHMENTS_WEBGL:36063,MAX_DRAW_BUFFERS_WEBGL:34852,VERTEX_ARRAY_BINDING_OES:34229,QUERY_COUNTER_BITS_EXT:34916,CURRENT_QUERY_EXT:34917,QUERY_RESULT_EXT:34918,QUERY_RESULT_AVAILABLE_EXT:34919,TIME_ELAPSED_EXT:35007,TIMESTAMP_EXT:36392,GPU_DISJOINT_EXT:36795}},{}],21:[function(t,e,r){const n=t("./WebGLHandlerSet"),i=t("./AttributeNames"),s=t("./math/Vec4"),a=t("./math/Math"),o=t("./Program"),_=t("./DataTexture"),h=t("./WebGLUtils"),u=t("./WebGLCompatibility"),l=t("./Texture"),{preprocessShaderSource:E}=t("./ShaderProcess"),c=t("./ProgramUniform"),T=t("./WebGLConstants");e.exports=class{constructor(t,e={webgl2:!1}){this._gl=h.setupWebGL(t,{antialias:!0,webgl2:!!e.webgl2,reportWebGLError:!1}),u.instance(this._gl,!0),this.screenViewportDirty=!0,this._currentBlendState=!1,this._currentPixelFlipY=!1,this._currentActiveTextureUnit=null,this._currentClear=this._gl.COLOR_BUFFER_BIT|this._gl.DEPTH_BUFFER_BIT,this._auxCanvas2D=document.createElement("canvas"),this._auxContext2D=this._auxCanvas2D.getContext("2d"),this._currentCullState=null,this._cullStateList=[0,this._gl.BACK,this._gl.FRONT,this._gl.FRONT_AND_BACK],this._currentDepthMask=null,this._curDepthTest=null,this._currentLineWidth=null,this._currentBoundTextures=new Array(u.instance().getWebGLParameter("MAX_TEXTURE_IMAGE_UNITS")),this._currentBoundTextureTargets=new Array(u.instance().getWebGLParameter("MAX_TEXTURE_IMAGE_UNITS")),this._currentBoundProgramHandler=null,this._enableAttributes=new Uint8Array(u.instance().getWebGLParameter("MAX_VERTEX_ATTRIBS")),this._newEnableAttributes=new Uint8Array(u.instance().getWebGLParameter("MAX_VERTEX_ATTRIBS")),this._webGLBufferSet=new n,this._webGLTextureSet=new n,this._webGLRenderTargetSet=new n,this._currentViewportState=[0,0,800,600],this._currentDefaultViewport=[0,0,800,600],this._currentFramebufferObject=null,this._currentRenderTarget=null,this._currentBlendMode=null,this._currentBoundIndexBuffer=null,this._currentClearColor=new s(0,0,0,0),this._effectCaches={},this.gl=this._gl,this.isWebGL2=!!e.webgl2,this.compatiblity=u;const r=this;var i;this._renderTargetFactory={checkFramebufferStatus:function(){switch(r._gl.checkFramebufferStatus(r._gl.FRAMEBUFFER)){case r._gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:window.console.error("ERROR: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");break;case r._gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:window.console.error("ERROR: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");break;case r._gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:window.console.error("ERROR: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");break;case r._gl.FRAMEBUFFER_UNSUPPORTED:window.console.error("ERROR: FRAMEBUFFER_UNSUPPORTED");break;case r._gl.FRAMEBUFFER_COMPLETE:}},attachDepthRenderBuffer:function(t,e,n,i,s){r._gl.bindRenderbuffer(r._gl.RENDERBUFFER,e),s?(r._gl.renderbufferStorage(r._gl.RENDERBUFFER,r._gl.DEPTH_STENCIL,n,i),r._gl.framebufferRenderbuffer(r._gl.FRAMEBUFFER,r._gl.DEPTH_STENCIL_ATTACHMENT,r._gl.RENDERBUFFER,e)):(r._gl.renderbufferStorage(r._gl.RENDERBUFFER,r._gl.DEPTH_COMPONENT16,n,i),r._gl.framebufferRenderbuffer(r._gl.FRAMEBUFFER,r._gl.DEPTH_ATTACHMENT,r._gl.RENDERBUFFER,e)),r._gl.bindRenderbuffer(r._gl.RENDERBUFFER,null)},allocate:function(t){r._webGLRenderTargetSet.get(t)._fbo=r._gl.createFramebuffer()},releaseImp:function(t,e){var n=t._fbo,i=t._depthBuffer;if(e)for(var s=0;s<n.length;s++)r._gl.deleteFramebuffer(n[s]),i&&r._gl.deleteRenderbuffer(i[s]);else r._gl.deleteFramebuffer(n),i&&r._gl.deleteRenderbuffer(i)},release:function(t){var e=r._webGLRenderTargetSet.get(t);void 0!==e&&(t.colorTexture.release(),r._renderTargetFactory.releaseImp(e,t._renderToCube),r._webGLRenderTargetSet.remove(t),t.releaseObservable.removeCallback(r.release))},construct:function(t){var e=r._webGLRenderTargetSet.get(t);if(r._gl.bindFramebuffer(r._gl.FRAMEBUFFER,e._fbo),r.useTexture2D(t.colorTexture,0),r._gl.framebufferTexture2D(r._gl.FRAMEBUFFER,r._gl.COLOR_ATTACHMENT0,r._gl.TEXTURE_2D,r._webGLTextureSet.get(t.colorTexture)._texID,0),!0===t.enableDepth){if(t._shareDepthFrom)var n=t._shareDepthFrom;if(t.useDepthTexture){n&&console.error("RenderTarget could not shared depth-texture yet..."),_scope.useTexture2D(t.depthTexture,0);var i=r._webGLTextureSet.get(t.depthTexture),s=t.enableStencil?r._gl.DEPTH_STENCIL_ATTACHMENT:r._gl.DEPTH_ATTACHMENT;r._gl.framebufferTexture2D(r._gl.FRAMEBUFFER,s,r._gl.TEXTURE_2D,i._texID,0)}else{if(n){var a=r._webGLRenderTargetSet.get(n),o=a._depthBuffer;o||(a._depthBuffer=r._gl.createRenderbuffer()),e._depthBuffer=o}else e._depthBuffer||(e._depthBuffer=r._gl.createRenderbuffer());this.attachDepthRenderBuffer(e._fbo,e._depthBuffer,t.width,t.height,t.enableStencil)}this.checkFramebufferStatus()}r._gl.bindFramebuffer(r._gl.FRAMEBUFFER,null)},allocateCube:function(t){for(var e=new Array(6),n=0;n<e.length;n++)e[n]=r._gl.createFramebuffer();r._webGLRenderTargetSet.get(t)._fbo=e},constructCube:function(t){var e=r._webGLRenderTargetSet.get(t),n=e._fbo,i=t.colorTexture;r.useCubeMap(i,0);for(var s=0;s<n.length;s++)r._gl.bindFramebuffer(r._gl.FRAMEBUFFER,n[s]),r._gl.framebufferTexture2D(r._gl.FRAMEBUFFER,r._gl.COLOR_ATTACHMENT0,r._gl.TEXTURE_CUBE_MAP_POSITIVE_X+s,r._webGLTextureSet.get(i)._texID,0),!0===t.enableDepth&&(e._depthBuffer||(e._depthBuffer=new Array(n.length)),e._depthBuffer[s]=r._gl.createRenderbuffer(),this.attachDepthRenderBuffer(e._fbo[s],e._depthBuffer[s],t.width,t.height,t.enableStencil)),r._gl.bindFramebuffer(r._gl.FRAMEBUFFER,null)},generateMipMap:function(t){var e=t.colorTexture;if(!0===e._mipMaping&&e.isPowerOfTwo()){var n=r._webGLTextureSet.get(e),i=!0===e.isCubeMap?r._gl.TEXTURE_CUBE_MAP:r._gl.TEXTURE_2D;_scope.bindTexture(i,n._texID),r._gl.generateMipmap(i),_scope.bindTexture(i,null)}},read:(i=null,function(t,e,n,s,a){null===i&&(i=function(t,e,n,i,s,a,o){var _,h=e,l=n,E=4*a*o;return n===T.UNSIGNED_BYTE?_=new Uint8Array(E):n===T.FLOAT&&(_=new Float32Array(E)),e!==T.RGBA&&h!==r._gl.getParameter(r._gl.IMPLEMENTATION_COLOR_READ_FORMAT)&&window.console.error("renderTarget is not in RGBA or implementation defined format."),n===T.UNSIGNED_BYTE||l===r._gl.getParameter(r._gl.IMPLEMENTATION_COLOR_READ_TYPE)||n===T.FLOAT&&u.instance().FloatColorBuffer||window.console.error("renderTarget is not in UnsignedByteType or implementation defined type."),r._gl.readPixels(i,s,a,o,h,l,_),_});var o=[],_=!1;if(t){e=void 0===e?0:e,n=void 0===n?0:n,s=void 0===s?t.width:s,a=void 0===a?t.height:a;var h=r._webGLRenderTargetSet.get(t);_=t.renderToCube;for(var l=t.colorTexture,E=_?h._fbo:[h._fbo],c=0;c<E.length;c++)o.push(i(E[c],l.format,l.dataType,e,n,s,a))}else e=void 0===e?r._viewport[0]:e,n=void 0===n?r._viewport[1]:n,s=void 0===s?r._viewport[2]:s,a=void 0===a?r._viewport[3]:a,o.push(i(null,T.RGBA,T.UNSIGNED_BYTE,e,n,s,a));return 1===o.length?o[0]:o})},this.blendFuncSeparate({srcRGB:T.SRC_ALPHA,dstRGB:T.ONE_MINUS_SRC_ALPHA,srcAlpha:T.ONE,dstAlpha:T.ONE_MINUS_SRC_ALPHA})}initializeStates(){this.clearMode(!0,!0,!1),this.clearColor(0,0,0,1),this._gl.depthFunc(this._gl.LEQUAL),this.depthMask(!0),this.depthTest(!0),this._gl.depthRange(0,1),this._gl.enable(this._gl.CULL_FACE),this._gl.cullFace(this._gl.BACK),this._currentCull=i.CullBack,this._gl.hint(this._gl.GENERATE_MIPMAP_HINT,this._gl.NICEST),this._gl.pixelStorei(this._gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,this._gl.NONE)}cullstate(t){this._currentCullState!==t&&(t===T.FRONT_AND_BACK?this._gl.disable(this._gl.CULL_FACE):(null===this._currentCullState&&this._gl.enable(this._gl.CULL_FACE),this._gl.cullFace(t)),this._currentCullState=null)}clear(){(this._currentClearBitMask&this._gl.DEPTH_BUFFER_BIT)===this._gl.DEPTH_BUFFER_BIT&&this.depthMask(!0),this._gl.clear(this._currentClearBitMask)}clearColor(t,e,r,n){this._currentClearColor.x===t&&this._currentClearColor.y===e&&this._currentClearColor.z===r&&this._currentClearColor.w===n||(this._gl.clearColor(t,e,r,n),this._currentClearColor.set(t,e,r,n))}getClearColor(t){return t?t.copy(this._currentClearColor):t=this._currentClearColor.clone(),t}clearMode(t,e,r){if(1===arguments.length)this._currentClearBitMask=arguments[0];else{var n=0;t&&(n=this._gl.COLOR_BUFFER_BIT),e&&(n|=this._gl.DEPTH_BUFFER_BIT),r&&(n|=this._gl.STENCIL_BUFFER_BIT),this._currentClearBitMask=n}}getClearMode(){return this._currentClearBitMask}setScreenViewport(t){this._currentDefaultViewport[0]=t[0],this._currentDefaultViewport[1]=t[1],this._currentDefaultViewport[2]=t[2],this._currentDefaultViewport[3]=t[3],this.screenViewportDirty=!0}viewport(t){this._currentViewportState[2]===t[2]&&this._currentViewportState[3]===t[3]&&this._currentViewportState[0]===t[0]&&this._currentViewportState[1]===t[1]||(this._gl.viewport(t[0],t[1],t[2],t[3]),this._currentViewportState[0]=t[0],this._currentViewportState[1]=t[1],this._currentViewportState[2]=t[2],this._currentViewportState[3]=t[3])}pixelFlipY(t){this._currentPixelFlipY!==t&&(this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL,t),this._currentPixelFlipY=t)}depthMask(t){this._currentDepthMask!==t&&(this._gl.depthMask(t),this._currentDepthMask=t)}blend(t){this._currentBlendState!==t&&(!0===t?this._gl.enable(this._gl.BLEND):this._gl.disable(this._gl.BLEND),this._currentBlendState=t)}depthTest(t){this._curDepthTest!==t&&(!0===t?this._gl.enable(this._gl.DEPTH_TEST):this._gl.disable(this._gl.DEPTH_TEST),this._curDepthTest=t)}lineWidth(t){t!==this._currentLineWidth&&(this._gl.lineWidth(t),this._currentLineWidth=t)}activateTextureUnit(t){t!==this._currentActiveTextureUnit&&(this._gl.activeTexture(this._gl.TEXTURE0+t),this._currentActiveTextureUnit=t)}bindTex2Unit(t,e,r){t===this._currentBoundTextureTargets[r]&&e===this._currentBoundTextures[r]||(r!==this._currentActiveTextureUnit&&(this._gl.activeTexture(this._gl.TEXTURE0+r),this._currentActiveTextureUnit=r),this._currentBoundTextures[r]=e,this._currentBoundTextureTargets[r]=t,this._gl.bindTexture(t,e))}bindTexture(t,e){t===this._currentBoundTextureTargets[this._currentActiveTextureUnit]&&e===this._currentBoundTextures[this._currentActiveTextureUnit]||(this._currentBoundTextures[this._currentActiveTextureUnit]=e,this._currentBoundTextureTargets[this._currentActiveTextureUnit]=t,this._gl.bindTexture(t,e))}makeImagePowerOfTwo(t){return a.isPowerOfTwo(t.width)&&a.isPowerOfTwo(t.height)?t:(this._auxCanvas2D.width=a.nextPowerOfTwo(t.width),this._auxCanvas2D.height=a.nextPowerOfTwo(t.height),this._auxContext2D.drawImage(t,0,0,t.width,t.height,0,0,this._auxCanvas2D.width,this._auxCanvas2D.height),window.console.warn("WebGLEngine.makeImagePowerOfTwo: convert ("+t.width+" "+t.height,") to ("+this._auxCanvas2D.width+" "+this._auxCanvas2D.height+")"),this._auxCanvas2D)}textureImage2D(t,e){var r=t.dataType,n=t.format,i=t.internalFormat;e=e||t.source,t instanceof _||null===e?this._gl.texImage2D(this._gl.TEXTURE_2D,0,i,t.width,t.height,0,n,r,e):this._gl.texImage2D(this._gl.TEXTURE_2D,0,i,n,r,e)}finish(){this._gl.finish()}_releaseBuffer(t){var e=this._webGLBufferSet.find(t);void 0!==e&&(this._gl.deleteBuffer(e._vbo),this._webGLBufferSet.remove(t),t.releaseObservable.removeCallback(this._releaseBuffer))}_releaseTexture(t){var e=this._webGLTextureSet.find(t);void 0!==e&&(this._gl.deleteTexture(e._texID),this._webGLTextureSet.remove(t),t.releaseObservable.removeCallback(this._releaseTexture.bind(this)))}texImageCubeMap(t){var e,r,n,i=t.dataType,s=t.internalFormat,a=t.internalFormat,o=0;for(t.source instanceof Array&&0!==t.source.length&&t.source[0]instanceof Array||window.console.error("cubemap source invalid");t._source[o]||0===o;){if(e=t._source[o],1===o&&this._gl.generateMipmap(this._gl.TEXTURE_CUBE_MAP),e[0]instanceof HTMLCanvasElement||e[0]instanceof HTMLImageElement)for(n=0;n<6;n++){var _=e[n];this._gl.texImage2D(this._gl.TEXTURE_CUBE_MAP_POSITIVE_X+n,o,s,a,i,this.makeImagePowerOfTwo(_))}else{var h=t.width,u=t.height;for(r=1/Math.pow(2,o),n=0;n<6;n++){var l=e[n];this._gl.texImage2D(this._gl.TEXTURE_CUBE_MAP_POSITIVE_X+n,o,s,Math.max(h*r,1),Math.max(u*r,1),0,a,i,l)}}o++}1===o&&t.mipMaping&&this._gl.generateMipmap(this._gl.TEXTURE_CUBE_MAP)}textureParameter(t,e,r){var n=void 0===r?e.isPowerOfTwo():r,i=u.instance();if(e._anisotropy>1&&e._anisotropy<=l.ANISOTROPIC_SUPPORT_MAX&&i.getWebGLExtension("EXT_texture_filter_anisotropic")&&this._gl.texParameterf(t,i.getWebGLExtension("EXT_texture_filter_anisotropic").TEXTURE_MAX_ANISOTROPY_EXT,e._anisotropy),e.wrapS){var s=n?e.wrapS:T.CLAMP_TO_EDGE;this._gl.texParameterf(t,this._gl.TEXTURE_WRAP_S,s)}if(e.wrapT){var a=n?e.wrapT:T.CLAMP_TO_EDGE;this._gl.texParameterf(t,this._gl.TEXTURE_WRAP_T,a)}e.magFilter&&this._gl.texParameterf(t,this._gl.TEXTURE_MAG_FILTER,e.magFilter),e.minFilter&&(e.mipMaping&&n?this._gl.texParameterf(t,this._gl.TEXTURE_MIN_FILTER,this._gl.LINEAR_MIPMAP_LINEAR):this._gl.texParameterf(t,this._gl.TEXTURE_MIN_FILTER,e.minFilter))}setTexture(t,e){t.isCubeMap?this.useCubeMap(t,e):t.isTexture&&this.useTexture2D(t,e)}useCubeMap(t,e){var r=this._webGLTextureSet.get(t);r._version!==t._version?(void 0===r._texID&&(r._texID=this.createTexture(),t.releaseObservable.addUnique(this._releaseTexture.bind(this))),this.activateTextureUnit(e),this.bindTexture(this._gl.TEXTURE_CUBE_MAP,r._texID),this.pixelFlipY(t.flipY),this.texImageCubeMap(t),this.textureParameter(this._gl.TEXTURE_CUBE_MAP,t),r._version=t._version):this.bindTex2Unit(this._gl.TEXTURE_CUBE_MAP,r._texID,e)}createTexture(){return this._gl.createTexture()}useTexture2D(t,e){if(t){var r=this._webGLTextureSet.get(t);if(r._version!==t._version){void 0===r._texID&&(r._texID=this.createTexture(),t.releaseObservable.addUnique(this._releaseTexture.bind(this))),this.activateTextureUnit(e),this.bindTexture(this._gl.TEXTURE_2D,r._texID),this.pixelFlipY(t.flipY);var n=t.isPowerOfTwo(),i=t.source;if(!this.isWebGL2&&i&&!1===n)!0===(t._minFilter!==T.NEAREST&&t._minFilter!==T.LINEAR||!(t._wrapS===T.CLAMP_TO_EDGE&&t._wrapT===T.CLAMP_TO_EDGE))&&(i=this.makeImagePowerOfTwo(i),n=!0);this.textureImage2D(t,i),this.textureParameter(this._gl.TEXTURE_2D,t,this.isWebGL2||n),t.mipMaping&&(this.isWebGL2||n)&&this._gl.generateMipmap(this._gl.TEXTURE_2D),r._version=t._version}else this.bindTex2Unit(this._gl.TEXTURE_2D,r._texID,e)}}generateMipMap(t){var e=this._webGLTextureSet.get(t);this.activateTextureUnit(0),this.bindTexture(this._gl.TEXTURE_2D,e._texID),this._gl.generateMipmap(this._gl.TEXTURE_2D)}createBuffer(t){var e=this._gl.createBuffer();return e._typeSize=t.bytesPerElement,e._glType=t._storeType,e}bindIndexBuffer(t){t&&t!==this._currentBoundIndexBuffer&&(this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER,t),this._currentBoundIndexBuffer=t)}bindVertexBuffer(t){t!==this._currentBoundVertexBuffer&&(this._gl.bindBuffer(this._gl.ARRAY_BUFFER,t),this._currentBoundVertexBuffer=t)}dynamicVertexBufferData(t){this._gl.bufferData(this._gl.ARRAY_BUFFER,t._array,this._gl.DYNAMIC_DRAW)}staticVertexBufferData(t){this._gl.bufferData(this._gl.ARRAY_BUFFER,t._array,this._gl.STATIC_DRAW)}staticIndexBufferData(t){this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER,t._array,this._gl.STATIC_DRAW)}dynamicIndexBufferData(t){this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER,t._array,this._gl.DYNAMIC_DRAW)}updateVertexBuffer(t,e){this._gl.bufferSubData(this._gl.ARRAY_BUFFER,e,t._array)}updateIndexBuffer(t,e){this._gl.bufferSubData(this._gl.ELEMENT_ARRAY_BUFFER,e,t._array)}loadShaderByType(t,e){var r=this._gl.createShader(t);if(null===r)return window.console.error("unable to create"+t+"shader"),null;if(this._gl.shaderSource(r,e),this._gl.compileShader(r),!this._gl.getShaderParameter(r,this._gl.COMPILE_STATUS)){var n=this._gl.getShaderInfoLog(r);this._gl.deleteShader(r);const t=Number(n.match(/:[0-9]*:/g)[0].split(":")[1]);var i=e.split("\n");let s="Failed to compile "+n+"\n";for(let e=Math.max(0,t-3);e<=t;e++)s+=e+": "+i[e]+"\n";throw s}return r}createProgram(t,e){t=E(t),e=E(e);var r=this.loadShaderByType(this._gl.VERTEX_SHADER,t),n=this.loadShaderByType(this._gl.FRAGMENT_SHADER,e);if(!r||!n)return null;var i=this._gl.createProgram();if(this._gl.attachShader(i,r),this._gl.attachShader(i,n),this._gl.linkProgram(i),!this._gl.getProgramParameter(i,this._gl.LINK_STATUS)){var s=this._gl.getProgramInfoLog(i);return console.error("Failed to link program: "+s),this._gl.deleteProgram(i),null}return this._gl.deleteShader(n),this._gl.deleteShader(r),i}acquireProgramUniforms(t){for(var e=/^([\w\d_]+)\[0]$/,r={},n=this._gl.getProgramParameter(t,this._gl.ACTIVE_UNIFORMS),i=0;i<n;i++){const n=this._gl.getActiveUniform(t,i),s=n.type,a=n.size;let o=!0,_=!1,h=null;const u=e.exec(n.name),l=!!u,E=u?u[1]:n.name,T=this._gl.getUniformLocation(t,E);let d=a;switch(s){case this._gl.SAMPLER_2D:case this._gl.SAMPLER_CUBE:h=l?this._gl.uniform1iv.bind(this._gl):this._gl.uniform1i.bind(this._gl),_=!0;break;case this._gl.FLOAT:h=l?this._gl.uniform1fv.bind(this._gl):this._gl.uniform1f.bind(this._gl);break;case this._gl.INT:h=l?this._gl.uniform1iv.bind(this._gl):this._gl.uniform1i.bind(this._gl);break;case this._gl.FLOAT_VEC2:h=l?this._gl.uniform2fv.bind(this._gl):(t,e)=>{this._gl.uniform2f(t,e[0],e[1])},d=2*a;break;case this._gl.FLOAT_VEC3:h=l?this._gl.uniform3fv.bind(this._gl):(t,e)=>{this._gl.uniform3f(t,e[0],e[1],e[2])},d=3*a;break;case this._gl.FLOAT_VEC4:h=l?this._gl.uniform4fv.bind(this._gl):(t,e)=>{this._gl.uniform4f(t,e[0],e[1],e[2],e[3])},d=4*a;break;case this._gl.FLOAT_MAT2:h=(t,e)=>{this._gl.uniformMatrix2fv(t,!1,e)},d=4*a;break;case this._gl.FLOAT_MAT3:h=(t,e)=>{this._gl.uniformMatrix3fv(t,!1,e)},d=9*a,o=!1;break;case this._gl.FLOAT_MAT4:h=(t,e)=>{this._gl.uniformMatrix4fv(t,!1,e)},d=16*a,o=!1}r[E]=new c({location:T,cache:o,array:l,size:a,cacheSize:d,sampler:_,setter:h,type:s})}return r}acquireProgramAttributes(t){for(var e={},r=this._gl.getProgramParameter(t,this._gl.ACTIVE_ATTRIBUTES),n=0;n<r;n++){var i=this._gl.getActiveAttrib(t,n).name;e[i]=this._gl.getAttribLocation(t,i)}return e}useProgram(t){this._currentBoundProgramHandler!==t&&(this._gl.useProgram(t),this._currentBoundProgramHandler=t)}enableAttribute(t){0===this._enableAttributes[t]&&(this._enableAttributes[t]=1,this._gl.enableVertexAttribArray(t))}disableAttribute(t){1===this._enableAttributes[t]&&(this._gl.disableVertexAttribArray(t),this._enableAttributes[t]=0)}getCurrentRenderTarget(){return this._currentRenderTarget}bindRenderTarget(t){var e=null;this._currentRenderTarget=t;let r=!1;if(t){var n=this._webGLRenderTargetSet.get(t),i=t.renderToCube;n._version!==t._version&&(void 0===n._fbo&&(i?(this._renderTargetFactory.allocateCube(t),t.releaseObservable.addUnique(this._renderTargetFactory.release),this._renderTargetFactory.constructCube(t)):(this._renderTargetFactory.allocate(t),t.releaseObservable.addUnique(this._renderTargetFactory.release),this._renderTargetFactory.construct(t))),r=!0,n._version=t._version),e=!0===i?n._fbo[t._face]:n._fbo}else e=null;this._currentFramebufferObject!==e&&(this._currentFramebufferObject=e,this._gl.bindFramebuffer(this._gl.FRAMEBUFFER,this._currentFramebufferObject),r=!0),(!0===this.screenViewportDirty||r)&&(this.viewport(t?t._viewport:this._currentDefaultViewport),this.screenViewportDirty=!1)}renderTargetMipmap(t){t&&this._renderTargetFactory.generateMipMap(t)}readRenderTarget(t,e,r,n,i){return this.bindRenderTarget(t),this._renderTargetFactory.read(t,e,r,n,i)}getViewPort(t){return t||(t=new Array(4)),t[0]=this._viewport[0],t[1]=this._viewport[1],t[2]=this._viewport[2],t[3]=this._viewport[3],t}setVertexArray(t,e,r){var n,i,s=r._programAttributes,a=null;for(var o in s)n=s[o],(i=t[o])&&(a!==i._buffer&&(a=i._buffer,this.setupVertexBuffer(a)),this.enableAttribute(n),this._newEnableAttributes[n]=1,this._gl.vertexAttribPointer(n,i._itemSize,a._storeType,i.normalized,i._strideBytes,i._offsetBytes),i._divisor>0&&this._gl.vertexAttribDivisor(n,i._divisor));e&&this.setupIndexBuffer(e._buffer);for(var _=0;_<this._enableAttributes.length;_++)this._newEnableAttributes[_]!==this._enableAttributes[_]?(this._gl.disableVertexAttribArray(_),this._enableAttributes[_]=0):this._newEnableAttributes[_]=0}setupIndexBuffer(t){var e=this._webGLBufferSet.get(t);if(void 0===e._vbo){var r=this.createBuffer(t);t.releaseObservable.addUnique(this._releaseBuffer),e._vbo=r,this.bindIndexBuffer(r),t._staticUsage?this.staticIndexBufferData(t):this.dynamicIndexBufferData(t)}else e._version<t._version?(this.bindIndexBuffer(e._vbo),this.updateIndexBuffer(t)):this.bindIndexBuffer(e._vbo);e._version=t._version}setupVertexBuffer(t){const e=this._webGLBufferSet.get(t);if(void 0===e._vbo){var r=this.createBuffer(t);t.releaseObservable.addUnique(this._releaseBuffer),e._vbo=r,e._glType=r._glType,this.bindVertexBuffer(r),t._staticUsage?this.staticVertexBufferData(t):this.dynamicVertexBufferData(t)}else t._version>e._version?(this.bindVertexBuffer(e._vbo),this.updateVertexBuffer(t,0)):this.bindVertexBuffer(e._vbo);e._version=t._version}getEffectById(t){return this._effectCaches[t]}createEffect(t,e,r){return this._effectCaches[t]=new o(this,e,r,""),this._effectCaches[t]}releaseAllBuffers(){this._webGLBufferSet.iterate((function(t){t._vbo&&this._gl.deleteBuffer(t._vbo)})),this._webGLBufferSet.clear()}releaseAllTextures(){this._webGLTextureSet.iterate((function(t){t._texID&&this._gl.deleteTexture(t._texID)})),this._webGLTextureSet.clear()}releaseAllRenderTargets(){var t=this._renderTargetFactory;this._webGLRenderTargetSet.iterate((function(e){t.releaseImp(e)})),this._webGLRenderTargetSet.clear()}_directDraw({drawMode:t,start:e,count:r,hasIndices:n,instanceCount:i}){i>1?n?this._gl.drawElementsInstanced(t,r,this._currentBoundIndexBuffer._glType,e*this._currentBoundIndexBuffer._typeSize,i):this._gl.drawArraysInstanced(t,e,r,i):n?this._gl.drawElements(t,r,this._currentBoundIndexBuffer._glType,e*this._currentBoundIndexBuffer._typeSize):this._gl.drawArrays(t,e,r)}blendFuncSeparate({srcRGB:t,dstRGB:e,srcAlpha:r,dstAlpha:n}){this._gl.blendFuncSeparate(t,e,r,n)}setStates(t){Object.keys(t).filter((t=>!!this[t])).forEach((e=>{this[e].bind(this)(t[e])}))}}},{"./AttributeNames":1,"./DataTexture":4,"./Program":10,"./ProgramUniform":11,"./ShaderProcess":13,"./Texture":15,"./WebGLCompatibility":19,"./WebGLConstants":20,"./WebGLHandlerSet":22,"./WebGLUtils":23,"./math/Math":26,"./math/Vec4":29}],22:[function(t,e,r){e.exports=class{constructor(t=null){this._handlerSet={},this._initialize=t}reset(t){var e={};return this._initialize&&this._initialize(e),this._handlerSet[t._id]=e,e}get(t){var e=this._handlerSet[t._id];return e||this.reset(t)}getById(t){var e=this._handlerSet[t];return e||this.reset(e)}find(t){return this._handlerSet[t._id]}remove(t){delete this._handlerSet[t._id]}clear(){this._handlerSet={}}iterate(t){for(var e in _handlerSet)t(_handlerSet[e])}}},{}],23:[function(t,e,r){var n,i,s,a=(n=!0,i=function(t,e,r){for(var n=null,i=0;i<r.length;++i){try{n=t.getContext(r[i],e)}catch(t){window.console.log(t)}if(n)break}return n},{create3DContext:s=function(t,e){var r;if(e&&e.webgl2){if(n=!1,r=i(t,e,["webgl2","experimental-webgl2"]))return r;n=!0}return i(t,e,["webgl","experimental-webgl","webkit-3d","moz-webgl"])},setupWebGL:function(t,e,r){r=r||function(t){if(n){var e=document.getElementsByTagName("body")[0];if(e){var r=window.WebGLRenderingContext?'It doesn\'t appear your computer can support WebGL.<br/><a href="http://get.webgl.org">Click here for more information.</a>':'This page requires a browser that supports WebGL.<br/><a href="http://get.webgl.org">Click here to upgrade your browser.</a>';t&&(r+="<br/><br/>Status: "+t),e.innerHTML=function(t){return'<div style="margin: auto width:500pxz-index:10000margin-top:20emtext-align:center">'+t+"</div>"}(r)}}},t.addEventListener&&t.addEventListener("webglcontextcreationerror",(function(t){r(t.statusMessage)}),!1);var i=s(t,e);return i||r(""),i}});e.exports=a},{}],24:[function(t,e,r){const n=t("load-asset"),i=t("../Texture");e.exports=async t=>{const e=await n.all(t);for(key in e)e[key]=new i({source:e[key],mipMaping:!1,flipY:!1});return e}},{"../Texture":15,"load-asset":37}],25:[function(t,e,r){const n=t("./Math"),i=t("./Vec3");e.exports=class t{constructor(){this.data=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this._x,this._y,this._z,this._mat4,this._vec3}set(t,e,r,n,i,s,a,o,_,h,u,l,E,c,T,d){var f=this.data;return f[0]=t,f[4]=e,f[8]=r,f[12]=n,f[1]=i,f[5]=s,f[9]=a,f[13]=o,f[2]=_,f[6]=h,f[10]=u,f[14]=l,f[3]=E,f[7]=c,f[11]=T,f[15]=d,this}setFromArray(t){return this.data.set(t),this}makeIdentity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new t).copy(this)}copy(t){return this.data.set(t.data),this}rotateByEuler(t,e,r,n){n=n||"XYZ";var i,s,a,o,_,h,u,l,E,c,T,d,f=Math.cos(t),R=Math.sin(t),A=Math.cos(e),p=Math.sin(e),m=Math.cos(r),g=Math.sin(r),v=this.data;return"XYZ"===n?(_=f*m,h=f*g,u=R*m,l=R*g,v[0]=A*m,v[4]=-A*g,v[8]=p,v[1]=h+u*p,v[5]=_-l*p,v[9]=-R*A,v[2]=l-_*p,v[6]=u+h*p,v[10]=f*A):"YXZ"===n?(i=A*m,s=A*g,a=p*m,o=p*g,v[0]=i+o*R,v[4]=a*R-s,v[8]=f*p,v[1]=f*g,v[5]=f*m,v[9]=-R,v[2]=s*R-a,v[6]=o+i*R,v[10]=f*A):"ZXY"===n?(i=A*m,s=A*g,a=p*m,o=p*g,v[0]=i-o*R,v[4]=-f*g,v[8]=a+s*R,v[1]=s+a*R,v[5]=f*m,v[9]=o-i*R,v[2]=-f*p,v[6]=R,v[10]=f*A):"ZYX"===n?(_=f*m,h=f*g,u=R*m,l=R*g,v[0]=A*m,v[4]=u*p-h,v[8]=_*p+l,v[1]=A*g,v[5]=l*p+_,v[9]=h*p-u,v[2]=-p,v[6]=R*A,v[10]=f*A):"YZX"===n?(E=f*A,c=f*p,T=R*A,d=R*p,v[0]=A*m,v[4]=d-E*g,v[8]=T*g+c,v[1]=g,v[5]=f*m,v[9]=-R*m,v[2]=-p*m,v[6]=c*g+T,v[10]=E-d*g):"XZY"===n&&(E=f*A,c=f*p,T=R*A,d=R*p,v[0]=A*m,v[4]=-g,v[8]=p*m,v[1]=E*g+d,v[5]=f*m,v[9]=c*g-T,v[2]=T*g-c,v[6]=R*m,v[10]=d*g+E),v[3]=0,v[7]=0,v[11]=0,v[12]=0,v[13]=0,v[14]=0,v[15]=1,this}rotateByQuat(t){var e=this.data,r=t.x,n=t.y,i=t.z,s=t.w,a=r+r,o=n+n,_=i+i,h=r*a,u=r*o,l=r*_,E=n*o,c=n*_,T=i*_,d=s*a,f=s*o,R=s*_;return e[0]=1-(E+T),e[4]=u-R,e[8]=l+f,e[1]=u+R,e[5]=1-(h+T),e[9]=c-d,e[2]=l-f,e[6]=c+d,e[10]=1-(h+E),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}setFromMat3(t){var e=t.data;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}calcNormalMat3(t){return t.setFromMat4(this),t.calcInverse(t),t.transpose(),t}lookAt(t,e,r){void 0===this._x&&(this._x=new i),void 0===this._y&&(this._y=new i),void 0===this._z&&(this._z=new i);var n=this._x,s=this._y,a=this._z,o=this.data;return t.subTo(e,a).normalize(),0===a.squaredLength()&&(a.z=1),r.crossTo(a,n),0===n.squaredLength()&&(1===Math.abs(r.z)?a.x+=1e-4:a.z+=1e-4,a.normalize(),r.crossTo(a,n)),n.normalize(),a.crossTo(n,s),o[0]=n.x,o[4]=s.x,o[8]=a.x,o[1]=n.y,o[5]=s.y,o[9]=a.y,o[2]=n.z,o[6]=s.z,o[10]=a.z,this}getRawFrustum(){var t=this.data;if(0!==t[3]||0!==t[7]||-1!==t[11]||0!==t[15])throw Error("matrix cant getRawFrustum");var e=t[14]/(t[10]-1),r=t[14]/(1+t[10]);return{left:e*(t[8]-1)/t[0],right:e*(1+t[8])/t[0],top:e*(1+t[9])/t[5],bottom:e*(t[9]-1)/t[5],near:e,far:r}}buildByFrustum(t,e,r,n,i,s){var a=this.data,o=2*i/(e-t),_=2*i/(n-r),h=(e+t)/(e-t),u=(n+r)/(n-r),l=-(s+i)/(s-i),E=-2*s*i/(s-i);return a[0]=o,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=_,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=l,a[14]=E,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}mul(t){return this.mulTo(t,this)}mulTo(t,e){var r=this.data,n=t.data,i=e.data,s=r[0],a=r[4],o=r[8],_=r[12],h=r[1],u=r[5],l=r[9],E=r[13],c=r[2],T=r[6],d=r[10],f=r[14],R=r[3],A=r[7],p=r[11],m=r[15],g=n[0],v=n[4],S=n[8],I=n[12],M=n[1],N=n[5],x=n[9],b=n[13],F=n[2],L=n[6],y=n[10],O=n[14],C=n[3],B=n[7],w=n[11],D=n[15];return i[0]=s*g+a*M+o*F+_*C,i[4]=s*v+a*N+o*L+_*B,i[8]=s*S+a*x+o*y+_*w,i[12]=s*I+a*b+o*O+_*D,i[1]=h*g+u*M+l*F+E*C,i[5]=h*v+u*N+l*L+E*B,i[9]=h*S+u*x+l*y+E*w,i[13]=h*I+u*b+l*O+E*D,i[2]=c*g+T*M+d*F+f*C,i[6]=c*v+T*N+d*L+f*B,i[10]=c*S+T*x+d*y+f*w,i[14]=c*I+T*b+d*O+f*D,i[3]=R*g+A*M+p*F+m*C,i[7]=R*v+A*N+p*L+m*B,i[11]=R*S+A*x+p*y+m*w,i[15]=R*I+A*b+p*O+m*D,e}scale(t){var e=this.data;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}mulScale(t){var e=this.data,r=t.x,n=t.y,i=t.z;return e[0]*=r,e[4]*=n,e[8]*=i,e[1]*=r,e[5]*=n,e[9]*=i,e[2]*=r,e[6]*=n,e[10]*=i,e[3]*=r,e[7]*=n,e[11]*=i,this}det(){var t=this.data,e=t[0],r=t[4],n=t[8],i=t[12],s=t[1],a=t[5],o=t[9],_=t[13],h=t[2],u=t[6],l=t[10],E=t[14];return t[3]*(+i*o*u-n*_*u-i*a*l+r*_*l+n*a*E-r*o*E)+t[7]*(+e*o*E-e*_*l+i*s*l-n*s*E+n*_*h-i*o*h)+t[11]*(+e*_*u-e*a*E-i*s*u+r*s*E+i*a*h-r*_*h)+t[15]*(-n*a*h-e*o*u+e*a*l+n*s*u-r*s*l+r*o*h)}transpose(){var t,e=this.data;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setTranslation(t){var e=this.data;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this}getTranslation(t){return t.x=this.data[12],t.y=this.data[13],t.z=this.data[14],t}getEulerRotation(t,e){t||(t=new i);var r,s,a,o=n.clamp,_=this.data,h=_[0],u=_[4],l=_[8],E=_[1],c=_[5],T=_[9],d=_[2],f=_[6],R=_[10];return"XYZ"===e?(s=Math.asin(o(l,-1,1)),Math.abs(l)<.99999?(r=Math.atan2(-T,R),a=Math.atan2(-u,h)):(r=Math.atan2(f,c),a=0)):"YXZ"===e?(r=Math.asin(-o(T,-1,1)),Math.abs(T)<.99999?(s=Math.atan2(l,R),a=Math.atan2(E,c)):(s=Math.atan2(-d,h),a=0)):"ZXY"===e?(r=Math.asin(o(f,-1,1)),Math.abs(f)<.99999?(s=Math.atan2(-d,R),a=Math.atan2(-u,c)):(s=0,a=Math.atan2(E,h))):"ZYX"===e?(s=Math.asin(-o(d,-1,1)),Math.abs(d)<.99999?(r=Math.atan2(f,R),a=Math.atan2(E,h)):(r=0,a=Math.atan2(-u,c))):"YZX"===e?(a=Math.asin(o(E,-1,1)),Math.abs(E)<.99999?(r=Math.atan2(-T,c),s=Math.atan2(-d,h)):(r=0,s=Math.atan2(l,R))):"XZY"===e&&(a=Math.asin(-o(u,-1,1)),Math.abs(u)<.99999?(r=Math.atan2(f,c),s=Math.atan2(l,h)):(r=Math.atan2(-T,R),s=0)),t.set(r,s,a),t}calcInverse(t){var e=t.data,r=this.data,n=r[0],i=r[1],s=r[2],a=r[3],o=r[4],_=r[5],h=r[6],u=r[7],l=r[8],E=r[9],c=r[10],T=r[11],d=r[12],f=r[13],R=r[14],A=r[15],p=E*R*u-f*c*u+f*h*T-_*R*T-E*h*A+_*c*A,m=d*c*u-l*R*u-d*h*T+o*R*T+l*h*A-o*c*A,g=l*f*u-d*E*u+d*_*T-o*f*T-l*_*A+o*E*A,v=d*E*h-l*f*h-d*_*c+o*f*c+l*_*R-o*E*R,S=n*p+i*m+s*g+a*v;if(0===S){return window.window.console.warn("Mat4.calcInverse: det is 0"),this.makeIdentity()}return e[0]=p,e[1]=f*c*a-E*R*a-f*s*T+i*R*T+E*s*A-i*c*A,e[2]=_*R*a-f*h*a+f*s*u-i*R*u-_*s*A+i*h*A,e[3]=E*h*a-_*c*a-E*s*u+i*c*u+_*s*T-i*h*T,e[4]=m,e[5]=l*R*a-d*c*a+d*s*T-n*R*T-l*s*A+n*c*A,e[6]=d*h*a-o*R*a-d*s*u+n*R*u+o*s*A-n*h*A,e[7]=o*c*a-l*h*a+l*s*u-n*c*u-o*s*T+n*h*T,e[8]=g,e[9]=d*E*a-l*f*a-d*i*T+n*f*T+l*i*A-n*E*A,e[10]=o*f*a-d*_*a+d*i*u-n*f*u-o*i*A+n*_*A,e[11]=l*_*a-o*E*a-l*i*u+n*E*u+o*i*T-n*_*T,e[12]=v,e[13]=l*f*s-d*E*s+d*i*c-n*f*c-l*i*R+n*E*R,e[14]=d*_*s-o*f*s-d*i*h+n*f*h+o*i*R-n*_*R,e[15]=o*E*s-l*_*s+l*i*h-n*E*h-o*i*c+n*_*c,t.scale(1/S)}rotateX(t){var e=Math.cos(t),r=Math.sin(t);return this.set(1,0,0,0,0,e,-r,0,0,r,e,0,0,0,0,1),this}rotateY(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,0,r,0,0,1,0,0,-r,0,e,0,0,0,0,1),this}rotateZ(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,-r,0,0,r,e,0,0,0,0,1,0,0,0,0,1),this}rotateByAxisRadian(t,e){var r=Math.cos(e),n=Math.sin(e),i=1-r,s=t.x,a=t.y,o=t.z,_=i*s,h=i*a;return this.set(_*s+r,_*a-n*o,_*o+n*a,0,_*a+n*o,h*a+r,h*o-n*s,0,_*o-n*a,h*o+n*s,i*o*o+r,0,0,0,0,1),this}compose(t,e,r){return this.rotateByQuat(e),this.mulScale(r),this.setTranslation(t),this}decompose(e,r,n){void 0===this._vec3&&(this._vec3=new i),void 0===this._mat4&&(this._mat4=new t);var s=this._vec3,a=this._mat4,o=this.data,_=s.set(o[0],o[1],o[2]).length(),h=s.set(o[4],o[5],o[6]).length(),u=s.set(o[8],o[9],o[10]).length();this.det()<0&&(_=-_),e.x=o[12],e.y=o[13],e.z=o[14],a.data.set(this.data);var l=1/_,E=1/h,c=1/u;return a.data[0]*=l,a.data[1]*=l,a.data[2]*=l,a.data[4]*=E,a.data[5]*=E,a.data[6]*=E,a.data[8]*=c,a.data[9]*=c,a.data[10]*=c,r.buildByMat(a),n.x=_,n.y=h,n.z=u,this}buildPerspective(t,e,r,i){var s=r*Math.tan(n.deg2Rad(.5*t)),a=-s,o=a*e,_=s*e;return this.buildByFrustum(o,_,a,s,r,i)}buildOrtho(t,e,r,n,i,s){var a=this.data,o=1/(e-t),_=1/(r-n),h=1/(s-i),u=(e+t)*o,l=(r+n)*_,E=(s+i)*h;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*_,a[9]=0,a[13]=-l,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-E,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){for(var e=this.data,r=t.data,n=0;n<16;n++)if(e[n]!==r[n])return!1;return!0}}},{"./Math":26,"./Vec3":28}],26:[function(t,e,r){const n=t("./Vec3");var i={guid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){var e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)}))},log2:function(t){return Math.log(t)/Math.log(2)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},rand:function(t,e){return t+Math.random()*(e-t)},randVec3:function(t,e){return new n(this.rand(t,e),this.rand(t,e),this.rand(t,e))},flip:function(){return Math.random()>=.5},randFloat:function(t,e){return t+Math.random()*(e-t)},deg2Rad:function(t){return t*Math.PI/180},rad2Deg:function(t){return 180*t/Math.PI},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},nearestPowerOfTwo:function(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))},nextPowerOfTwo:function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t},clamp:function(t,e,r){return Math.max(e,Math.min(r,t))},mix:function(t,e,r){return t*(1-r)+e*r},hash:function(t){var e=0;if(0===t.length)return e;for(var r=0;r<t.length;r++){e=(e<<5)-e+t.charCodeAt(r),e&=e}return e},smoothStep:function(t,e,r){if(r<=t)return 0;if(r>=e)return 1;var n=(r-t)/(e-t);return n*n*(3-2*n)}};e.exports=i},{"./Vec3":28}],27:[function(t,e,r){e.exports=class t{constructor(t,e){this.x=t||0,this.y=e||0}set(t,e){return this.x=t,this.y=e,this}setFromArray(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this}clone(){return(new t).copy(this)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subTo(t,e){return e.x=this.x-t.x,e.y=this.y-t.y,e}multiply(t){return this.x*=t.x,this.y*=t.y,this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}squaredLength(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}scale(t){return this.x*=t,this.y*=t,this}squaredDistance(t){var e=this.x-t.x,r=this.y-t.y;return e*e+r*r}normalize(){return this.scale(1/this.length())}equals(t){return t.x===this.x&&t.y===this.y}transformByMat3(t){var e=this.x,r=this.y,n=t.data;return this.x=n[0]*e+n[3]*r+n[6],this.y=n[1]*e+n[4]*r+n[7],this}}},{}],28:[function(t,e,r){var n;class i{constructor(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0}set(t,e,r){return this.x=t,this.y=e,this.z=r,this}clone(){return(new i).copy(this)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addTo(t,e){return e.x=this.x+t.x,e.y=this.y+t.y,e.z=this.z+t.z,e}buildFromSpherical(t){var e=Math.sin(t.phi)*t.radius;return this.x=e*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=e*Math.cos(t.theta),this}projectToPlane(t){return void 0===n&&(n=new i),n.copy(t.normal),this.sub(n.scale(this.dot(n))),this}applyProjection(t){var e=this.x,r=this.y,n=this.z,i=t.data,s=1/(i[3]*e+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*e+i[4]*r+i[8]*n+i[12])*s,this.y=(i[1]*e+i[5]*r+i[9]*n+i[13])*s,this.z=(i[2]*e+i[6]*r+i[10]*n+i[14])*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subTo(t,e){return e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z,e}scale(t){return this.x*=t,this.y*=t,this.z*=t,this}transformByMat3(t){var e=this.x,r=this.y,n=this.z,i=t.data;return this.x=i[0]*e+i[3]*r+i[6]*n,this.y=i[1]*e+i[4]*r+i[7]*n,this.z=i[2]*e+i[5]*r+i[8]*n,this}transformByMat4(t){var e=this.x,r=this.y,n=this.z,i=t.data;return this.x=i[0]*e+i[4]*r+i[8]*n+i[12],this.y=i[1]*e+i[5]*r+i[9]*n+i[13],this.z=i[2]*e+i[6]*r+i[10]*n+i[14],this}transformByMat4To(t,e){var r=this.x,n=this.y,i=this.z,s=t.data;e.x=s[0]*r+s[4]*n+s[8]*i+s[12],e.y=s[1]*r+s[5]*n+s[9]*i+s[13],e.z=s[2]*r+s[6]*n+s[10]*i+s[14]}transformByQuat(t){var e=this.x,r=this.y,n=this.z,i=t.x,s=t.y,a=t.z,o=t.w,_=o*e+s*n-a*r,h=o*r+a*e-i*n,u=o*n+i*r-s*e,l=-i*e-s*r-a*n;return this.x=_*o+l*-i+h*-a-u*-s,this.y=h*o+l*-s+u*-i-_*-a,this.z=u*o+l*-a+_*-s-h*-i,this}setFromArray(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}setFromMat4Column(t,e){return this.setFromArray(t.data,4*e)}inverse(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}mul(t){return this.x=this.x*t.x,this.y=this.y*t.y,this.z=this.z*t.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}squaredLength(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}normalize(){return this.scale(1/this.length())}setLength(t){return this.scale(t/this.length())}mixBy(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}mix2(t,e,r){return this.x=t.x+(e.x-t.x)*r,this.y=t.y+(e.y-t.y)*r,this.z=t.z+(e.z-t.z)*r,this}cross(t){var e=this.x,r=this.y,n=this.z;return this.x=r*t.z-n*t.y,this.y=n*t.x-e*t.z,this.z=e*t.y-r*t.x,this}crossTo(t,e){var r=this.x,n=this.y,i=this.z,s=t.x,a=t.y,o=t.z;return e.x=n*o-i*a,e.y=i*s-r*o,e.z=r*a-n*s,e}distance(t){return Math.sqrt(this.squaredDistance(t))}distanceToPlane(t){return this.dot(t.normal)+t.distanceToOrigin}squaredDistance(t){var e=this.x-t.x,r=this.y-t.y,n=this.z-t.z;return e*e+r*r+n*n}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}}i.One=function(){return new i(1,1,1)},i.Zero=function(){return new i(0,0,0)},i.AxisZ=function(){return new i(0,0,1)},i.AxisX=function(){return new i(1,0,0)},i.AxisY=function(){return new i(0,1,0)},e.exports=i},{}],29:[function(t,e,r){e.exports=class t{constructor(t,e,r,n){this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0===n?1:n}set(t,e,r,n){return this.x=t,this.y=e,this.z=r,this.w=n,this}clone(){return(new t).copy(this)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}scale(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}}},{}],30:[function(t,e,r){var n=t("./mime-types.json"),i={};Object.keys(n).forEach((function(t){n[t].forEach((function(e){i[e]=t}))})),e.exports=function(t){if(!t)throw new TypeError("must specify extension string");return 0===t.indexOf(".")&&(t=t.substring(1)),i[t.toLowerCase()]}},{"./mime-types.json":31}],31:[function(t,e,r){e.exports={"audio/midi":["mid","midi","kar","rmi"],"audio/mp4":["mp4a","m4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/webm":["weba"],"audio/x-matroska":["mka"],"audio/x-mpegurl":["m3u"],"audio/wav":["wav"],"video/3gpp":["3gp"],"video/3gpp2":["3g2"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"],"video/x-f4v":["f4v"],"video/x-fli":["fli"],"video/x-flv":["flv"],"video/x-m4v":["m4v"],"video/x-matroska":["mkv","mk3d","mks"]}},{}],32:[function(t,e,r){"use strict";var n=Object.prototype.hasOwnProperty,i="~";function s(){}function a(t,e,r){this.fn=t,this.context=e,this.once=r||!1}function o(t,e,r,n,s){if("function"!=typeof r)throw new TypeError("The listener must be a function");var o=new a(r,n||t,s),_=i?i+e:e;return t._events[_]?t._events[_].fn?t._events[_]=[t._events[_],o]:t._events[_].push(o):(t._events[_]=o,t._eventsCount++),t}function _(t,e){0==--t._eventsCount?t._events=new s:delete t._events[e]}function h(){this._events=new s,this._eventsCount=0}Object.create&&(s.prototype=Object.create(null),(new s).__proto__||(i=!1)),h.prototype.eventNames=function(){var t,e,r=[];if(0===this._eventsCount)return r;for(e in t=this._events)n.call(t,e)&&r.push(i?e.slice(1):e);return Object.getOwnPropertySymbols?r.concat(Object.getOwnPropertySymbols(t)):r},h.prototype.listeners=function(t){var e=i?i+t:t,r=this._events[e];if(!r)return[];if(r.fn)return[r.fn];for(var n=0,s=r.length,a=new Array(s);n<s;n++)a[n]=r[n].fn;return a},h.prototype.listenerCount=function(t){var e=i?i+t:t,r=this._events[e];return r?r.fn?1:r.length:0},h.prototype.emit=function(t,e,r,n,s,a){var o=i?i+t:t;if(!this._events[o])return!1;var _,h,u=this._events[o],l=arguments.length;if(u.fn){switch(u.once&&this.removeListener(t,u.fn,void 0,!0),l){case 1:return u.fn.call(u.context),!0;case 2:return u.fn.call(u.context,e),!0;case 3:return u.fn.call(u.context,e,r),!0;case 4:return u.fn.call(u.context,e,r,n),!0;case 5:return u.fn.call(u.context,e,r,n,s),!0;case 6:return u.fn.call(u.context,e,r,n,s,a),!0}for(h=1,_=new Array(l-1);h<l;h++)_[h-1]=arguments[h];u.fn.apply(u.context,_)}else{var E,c=u.length;for(h=0;h<c;h++)switch(u[h].once&&this.removeListener(t,u[h].fn,void 0,!0),l){case 1:u[h].fn.call(u[h].context);break;case 2:u[h].fn.call(u[h].context,e);break;case 3:u[h].fn.call(u[h].context,e,r);break;case 4:u[h].fn.call(u[h].context,e,r,n);break;default:if(!_)for(E=1,_=new Array(l-1);E<l;E++)_[E-1]=arguments[E];u[h].fn.apply(u[h].context,_)}}return!0},h.prototype.on=function(t,e,r){return o(this,t,e,r,!1)},h.prototype.once=function(t,e,r){return o(this,t,e,r,!0)},h.prototype.removeListener=function(t,e,r,n){var s=i?i+t:t;if(!this._events[s])return this;if(!e)return _(this,s),this;var a=this._events[s];if(a.fn)a.fn!==e||n&&!a.once||r&&a.context!==r||_(this,s);else{for(var o=0,h=[],u=a.length;o<u;o++)(a[o].fn!==e||n&&!a[o].once||r&&a[o].context!==r)&&h.push(a[o]);h.length?this._events[s]=1===h.length?h[0]:h:_(this,s)}return this},h.prototype.removeAllListeners=function(t){var e;return t?(e=i?i+t:t,this._events[e]&&_(this,e)):(this._events=new s,this._eventsCount=0),this},h.prototype.off=h.prototype.removeListener,h.prototype.addListener=h.prototype.on,h.prefixed=i,h.EventEmitter=h,void 0!==e&&(e.exports=h)},{}],33:[function(t,e,r){(function(t){(function(){var r;r="undefined"!=typeof window?window:void 0!==t?t:"undefined"!=typeof self?self:{},e.exports=r}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],34:[function(t,e,r){e.exports=function(t){"string"==typeof t&&(t=[t]);for(var e=[].slice.call(arguments,1),r=[],n=0;n<t.length-1;n++)r.push(t[n],e[n]||"");return r.push(t[n]),r.join("")}},{}],35:[function(t,e,r){e.exports=function(t){if(!t)return!1;var e=n.call(t);return"[object Function]"===e||"function"==typeof t&&"[object RegExp]"!==e||"undefined"!=typeof window&&(t===window.setTimeout||t===window.alert||t===window.confirm||t===window.prompt)};var n=Object.prototype.toString},{}],36:[function(t,e,r){function n(t){return!!t&&("object"==typeof t||"function"==typeof t)&&"function"==typeof t.then}e.exports=n,e.exports.default=n},{}],37:[function(t,e,r){var n=t("./loaders"),i=t("object-assign"),s=t("is-promise"),a=function(){};function o(t,e,r){if("function"!=typeof(e=e||a))return Promise.reject(new Error("The second argument to load.all() and load.any() must be a function, or undefined"));var n,i,s=0,o=function(t,r,i,s){var a={target:t,total:n,count:i,progress:i/n,value:r};s&&(a.error=s),e(a)};if(i=r?function(t){return _(t).then((function(t){return{value:t}}),(function(t){return{value:null,error:t}})).then((function(e){return o(t,e.value,++s,e.error),e.value}))}:function(t){return _(t).then((function(e){return o(t,e,++s),e}))},Array.isArray(t))return n=t.length,Promise.all(t.map((function(t){return i(t)})));if(t){var h=Object.keys(t).map((function(e){return{key:e,value:t[e]}}));return n=h.length,Promise.all(h.map((function(t){var e=t.key;return i(t.value).then((function(t){return{value:t,key:e}}))}))).then((function(t){return t.reduce((function(t,e){return t[e.key]=e.value,t}),{})}))}return Promise.reject(new Error("You must specify an array of assets or object group to load"))}function _(t){return t?("string"==typeof t&&(t={url:t}),s(t)?t:function(t){var e,r,i=t.type?t.type:null;if(i){if("function"==typeof i)return Promise.resolve(i);if(i=i.toLowerCase(),!t.url)return Promise.reject(new Error("When using loadAsset(), you must specify a URL or descriptor of the asset to load"));for(e=0;e<n.length;e++)if((r=n[e]).key===i)return Promise.resolve(r.load);return Promise.reject(new Error('Could not find an asset loader by the key "'+t.type+'"'))}if(!t.url)return Promise.reject(new Error("When using loadAsset(), you must specify a URL or descriptor of the asset to load"));var s=function(t){if(!t)return"";var e=t.lastIndexOf("/");-1!==e&&(t=t.substring(e+1));-1!==(e=t.indexOf("?"))&&(t=t.substring(0,e));-1!==(e=t.indexOf("#"))&&(t=t.substring(0,e));return-1!==(e=t.lastIndexOf("."))?t.substring(e):""}(t.url);if(!s)return Promise.reject(new Error('No extension found for input URL "'+t.url+'", try to specify a { type } such as "image" or "text"'));for(e=0;e<n.length;e++){if((r=n[e]).match)if("function"==typeof r.match?r.match(s):r.match.test(s))return Promise.resolve(r.load)}return Promise.reject(new Error('Could not infer an asset loader from the file type "'+s+'", try specifying { type } such as "image" or "text"'))}(t).then((function(e){return delete(t=i({},t)).type,e(t)}))):Promise.reject(new Error("You must specify a URL or descriptor of the asset to load"))}e.exports=_,e.exports.all=function(t,e){return o(t,e,!1)},e.exports.any=function(t,e){return o(t,e,!0)}},{"./loaders":40,"is-promise":36,"object-assign":42}],38:[function(t,e,r){var n=t("xhr"),i=t("object-assign");e.exports=function(t){return function(e){return("fetch"in window?window.fetch(e.url,e).then((function(e){if(/404/.test(e.status))throw new Error("Resource not found");if(!/^2/.test(e.status))throw new Error("Unexpected HTTP Status Code: "+e.status);if(!e.ok)throw new Error("Response not OK");return"json"===t?e.json():"binary"===t?e.arrayBuffer():"blob"===t?e.blob():e.text()})):function(t,e){return new Promise((function(r,s){var a="text";"json"===t?a="text":"binary"===t?a="arraybuffer":"blob"===t&&(a="blob"),e=i({},e,{json:!1,responseType:a}),n(e,(function(e,n,i){if(e)return s(e);if(/404/.test(n.statusCode))throw new Error("Resource not found");if(!/^2/.test(n.statusCode))return s(new Error("Unexpected HTTP Status Code: "+n.statusCode));if("json"===t)try{i=JSON.parse(i)}catch(e){return s(e)}r(i)}))}))}(t,e)).catch((function(t){throw new Error(t.message+" while loading file "+e.url)}))}}},{"object-assign":42,xhr:44}],39:[function(t,e,r){var n=t("browser-media-mime-type");e.exports=function(t,e){return{key:t,match:function(e){return function(t){var e=n(t);return e?0===e.indexOf("audio")?"audio":0===e.indexOf("video")?"video":null:null}(e)===t},load:function(r){return new Promise((function(n,i){var s=!1,a=e(),o=function(){s||(s=!0,n(a))},_=(r.event||"canplay").toLowerCase();if("loadedmetadata"===_?a.onloadedmetadata=o:"canplaythrough"===_?a.oncanplaythrough=o:"loadeddata"===_?a.onloadeddata=o:a.oncanplay=o,a.onerror=function(e){s||(s=!0,i(new Error("Error while loading "+t+" at "+r.url)))},r.crossOrigin&&(a.crossOrigin=r.crossOrigin),void 0!==r.volume&&(a.volume=r.volume),void 0!==r.preload&&(a.preload=r.volume),void 0!==r.playbackRate&&(a.playbackRate=r.volume),void 0!==r.muted&&(a.muted=r.volume),void 0!==r.currentTime&&(a.currentTime=r.volume),void 0!==r.controls&&(a.controls=r.volume),void 0!==r.autoPlay&&(a.autoPlay=r.volume),a.src=r.url,a.readyState>=a.HAVE_ENOUGH_DATA)return s=!0,n(a);a.load()}))}}}},{"browser-media-mime-type":30}],40:[function(t,e,r){const n=t("./createMediaLoader"),i=t("./createFileLoader"),s=t("./loadImage");e.exports=[{key:"json",match:/\.json$/i,load:i("json")},{key:"text",match:/\.txt$/i,load:i("text")},{key:"image",match:/\.(jpg|jpeg|svg|png|gif|webp|bmp|tga|tif|apng|wbpm|ico)$/i,load:s},n("audio",(function(){return new window.Audio})),n("video",(function(){return document.createElement("video")})),{key:"binary",match:/\.bin$/i,load:i("binary")},{key:"blob",load:i("blob")}]},{"./createFileLoader":38,"./createMediaLoader":39,"./loadImage":41}],41:[function(t,e,r){e.exports=function(t){return new Promise((function(e,r){var n=!1,i=new window.Image;i.onload=function(){n||(n=!0,e(i))},i.onerror=function(){n||(n=!0,r(new Error("Error while loading image at "+t.url)))},t.crossOrigin&&(i.crossOrigin=t.crossOrigin),i.src=t.url}))}},{}],42:[function(t,e,r){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
"use strict";var n=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;function a(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}e.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},r=0;r<10;r++)e["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(t){n[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var r,o,_=a(t),h=1;h<arguments.length;h++){for(var u in r=Object(arguments[h]))i.call(r,u)&&(_[u]=r[u]);if(n){o=n(r);for(var l=0;l<o.length;l++)s.call(r,o[l])&&(_[o[l]]=r[o[l]])}}return _}},{}],43:[function(t,e,r){var n=function(t){return t.replace(/^\s+|\s+$/g,"")};e.exports=function(t){if(!t)return{};for(var e,r={},i=n(t).split("\n"),s=0;s<i.length;s++){var a=i[s],o=a.indexOf(":"),_=n(a.slice(0,o)).toLowerCase(),h=n(a.slice(o+1));void 0===r[_]?r[_]=h:(e=r[_],"[object Array]"===Object.prototype.toString.call(e)?r[_].push(h):r[_]=[r[_],h])}return r}},{}],44:[function(t,e,r){"use strict";var n=t("global/window"),i=t("is-function"),s=t("parse-headers"),a=t("xtend");function o(t,e,r){var n=t;return i(e)?(r=e,"string"==typeof t&&(n={uri:t})):n=a(e,{uri:t}),n.callback=r,n}function _(t,e,r){return h(e=o(t,e,r))}function h(t){if(void 0===t.callback)throw new Error("callback argument missing");var e=!1,r=function(r,n,i){e||(e=!0,t.callback(r,n,i))};function n(){var t=void 0;if(t=u.response?u.response:u.responseText||function(t){try{if("document"===t.responseType)return t.responseXML;var e=t.responseXML&&"parsererror"===t.responseXML.documentElement.nodeName;if(""===t.responseType&&!e)return t.responseXML}catch(t){}return null}(u),R)try{t=JSON.parse(t)}catch(t){}return t}function i(t){return clearTimeout(l),t instanceof Error||(t=new Error(""+(t||"Unknown XMLHttpRequest Error"))),t.statusCode=0,r(t,A)}function a(){if(!h){var e;clearTimeout(l),e=t.useXDR&&void 0===u.status?200:1223===u.status?204:u.status;var i=A,a=null;return 0!==e?(i={body:n(),statusCode:e,method:c,headers:{},url:E,rawRequest:u},u.getAllResponseHeaders&&(i.headers=s(u.getAllResponseHeaders()))):a=new Error("Internal XMLHttpRequest Error"),r(a,i,i.body)}}var o,h,u=t.xhr||null;u||(u=t.cors||t.useXDR?new _.XDomainRequest:new _.XMLHttpRequest);var l,E=u.url=t.uri||t.url,c=u.method=t.method||"GET",T=t.body||t.data,d=u.headers=t.headers||{},f=!!t.sync,R=!1,A={body:void 0,headers:{},statusCode:0,method:c,url:E,rawRequest:u};if("json"in t&&!1!==t.json&&(R=!0,d.accept||d.Accept||(d.Accept="application/json"),"GET"!==c&&"HEAD"!==c&&(d["content-type"]||d["Content-Type"]||(d["Content-Type"]="application/json"),T=JSON.stringify(!0===t.json?T:t.json))),u.onreadystatechange=function(){4===u.readyState&&setTimeout(a,0)},u.onload=a,u.onerror=i,u.onprogress=function(){},u.onabort=function(){h=!0},u.ontimeout=i,u.open(c,E,!f,t.username,t.password),f||(u.withCredentials=!!t.withCredentials),!f&&t.timeout>0&&(l=setTimeout((function(){if(!h){h=!0,u.abort("timeout");var t=new Error("XMLHttpRequest timeout");t.code="ETIMEDOUT",i(t)}}),t.timeout)),u.setRequestHeader)for(o in d)d.hasOwnProperty(o)&&u.setRequestHeader(o,d[o]);else if(t.headers&&!function(t){for(var e in t)if(t.hasOwnProperty(e))return!1;return!0}(t.headers))throw new Error("Headers cannot be set on an XDomainRequest object");return"responseType"in t&&(u.responseType=t.responseType),"beforeSend"in t&&"function"==typeof t.beforeSend&&t.beforeSend(u),u.send(T||null),u}e.exports=_,e.exports.default=_,_.XMLHttpRequest=n.XMLHttpRequest||function(){},_.XDomainRequest="withCredentials"in new _.XMLHttpRequest?_.XMLHttpRequest:n.XDomainRequest,function(t,e){for(var r=0;r<t.length;r++)e(t[r])}(["get","put","post","patch","head","delete"],(function(t){_["delete"===t?"del":t]=function(e,r,n){return(r=o(e,r,n)).method=t.toUpperCase(),h(r)}}))},{"global/window":33,"is-function":35,"parse-headers":43,xtend:45}],45:[function(t,e,r){e.exports=function(){for(var t={},e=0;e<arguments.length;e++){var r=arguments[e];for(var i in r)n.call(r,i)&&(t[i]=r[i])}return t};var n=Object.prototype.hasOwnProperty},{}],46:[function(t,e,r){(function(e){(function(){const r=t("../WebGLCanvas"),n=t("../StopWatch"),i=t("../RenderTarget"),s=t("../loader/texture"),a=t("../WebGLConstants"),o=t("../BigTriangle"),_=t("glslify"),h=document.getElementById("canvas"),u="#version 300 es\n    precision highp float;\n    in vec2 position;\n    void main() {\n        gl_Position = vec4(position.xy, 0.0, 1.0);\n}";!async function(){let t=0,l=0,E=INITIAL_SPEED;var c=new Slider(document.getElementById("speed-slider"),1,MAX_SPEED,INITIAL_SPEED,(function(e){E=e,t=0})),T=new Buttons([document.getElementById("LAMBERT"),document.getElementById("METAL"),document.getElementById("GLASS"),document.getElementById("WOOD")],(function(e){l=e,t=0})),d=[1,1,1];new HuePicker(document.getElementById("picker"),(function(e){t=0;var r="rgb("+(255*(d=hsvToRGB(e,UI_SATURATION,UI_VALUE))[0]).toFixed(0)+","+(255*d[1]).toFixed(0)+","+(255*d[2]).toFixed(0)+")";c.setColor(r),T.setColor(r)}));const f=await s({wood:e+"/assets/wood.jpg"}),R=o({vs:u,fs:_(['#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define GLSLIFY 1\nuniform vec2 size;\nuniform int frame;\nuniform float time;\n\nout vec4 fragColor;\n\nuniform sampler2D buffer;\n\nuniform int MAX_BOUNCES;\n\n#define MAX_DIST 1e20\n#define EPS 0.0001\n\nuint wang_hash(inout uint seed) {\n    seed = uint(seed ^ uint(61)) ^ uint(seed >> uint(16));\n    seed *= uint(9);\n    seed = seed ^ (seed >> 4);\n    seed *= uint(0x27d4eb2d);\n    seed = seed ^ (seed >> 15);\n    return seed;\n}\n\nfloat hash(inout uint state) {\n    return float(wang_hash(state)) / 4294967296.0;\n}\n\nvec2 hash2(inout uint state) {\n    return vec2(hash(state), hash(state));\n}\n\nconst float PI_0 = 3.14159265358979323846;\n\nstruct PerRayData {\n    float seed;\n    vec3 normal;\n    vec3 throughput;\n    vec3 rad; // radiance\n    vec3 wi; // bsdf dir\n    vec3 wo; // out dir\n    vec3 li; // light emissive radiance\n    vec3 li_pdf; // light pdf\n    bool light;  // is light    \n    vec3 hit;\n    int bounce;\n};\n\nstruct Ray {\n    vec3 o;\n    vec3 dir;    \n};\n\n#define QUAD_LIGHT 0\n#define DIR_LIGHT 1\n\nstruct Light {\n    int type;    \n    vec3 color; // 12\n    vec3 pos;   // 12\n    vec3 u; // 12\n    vec3 v; // 12\n    mat3 rotation;\n};\n\nconst float PI_1 = 3.14159265358979323846;\n\nRay camera_ray_3771232466(vec3 eye, vec3 tar, vec2 ndc) {\n    vec3 near = tar - eye;\n    float fov = 50.0;\n    vec3 dir = normalize(near);\n    vec3 u = normalize(cross(dir, vec3(0., 1., 0.))); // right\n    vec3 v = normalize(cross(u, dir)); // up\n\n    float vlen = length(near) * tan (fov * 0.5 * PI_1 / 180.);\n    float ulen = vlen * size.x / size.y;\n    dir = ndc.x * (u * ulen) + ndc.y * (v * vlen) + near;\n\n    Ray ray;\n    ray.o = eye;\n    ray.dir = normalize(dir);\n\n    return ray;\n}\n\n#define BSDF_REFLECTION 1 << 0\n#define BSDF_TRANSMISSION 1 << 1\n#define BSDF_DIFFUSE 1 << 2\n#define BSDF_GLOSSY 1 << 3\n#define BSDF_SPECULAR 1 << 4\n#define BSDF_ALL BSDF_DIFFUSE | BSDF_GLOSSY | BSDF_SPECULAR | BSDF_REFLECTION | BSDF_TRANSMISSION\n\nstruct Material {   \n    vec3 color; \n    float ior;\n    int type;\n};\n\nfloat intersect_1 (in vec3 ro_0, in vec3 rd_0, vec4 sph, in vec2 dist_bound_1677582278, inout vec3 normal_1) {\n    vec3 oc = ro_0 - sph.xyz;\n    float b = dot( oc, rd_0 );\n    float c = dot( oc, oc ) - sph.w*sph.w;\n    float h = b * b - c;\n    if (h < 0.) {\n        return MAX_DIST;\n    } else {\n\t    h = sqrt(h);\n        float d1 = -b-h;\n        float d2 = -b+h;\n        if (d1 >= dist_bound_1677582278.x && d1 <= dist_bound_1677582278.y) {\n            normal_1 = normalize(ro_0 + rd_0 * d1 - sph.xyz);\n            return d1;\n        } else if (d2 >= dist_bound_1677582278.x && d2 <= dist_bound_1677582278.y) { \n            normal_1 = normalize(ro_0 + rd_0 * d2 - sph.xyz);\n            return d2;\n        } else {\n            return MAX_DIST;\n        }\n    }\n}\n\nfloat intersect_3( in vec3 ro, in vec3 rd, in vec4 plane, in vec2 distBound, inout vec3 normal) {\n    float a = dot(rd, plane.xyz); // (a > 0) means backface\n    float d = -(dot(ro, plane.xyz) + plane.w) / a;\n    if (a > 0. || d < distBound.x || d > distBound.y) {\n        return MAX_DIST; // no intersection if back hit\n    } else {\n        normal = plane.xyz;\n    \treturn d;\n    }\n}\n\n// when ro inside the box, tN will be negative, return tF\n// box automactically flip normal\n\nfloat intersect_0(in vec3 ro, in vec3 rd, in vec3 boxSize, in vec2 distBound, inout vec3 normal) {\n    vec3 m = 1.0 / rd;\n    vec3 n = m * ro;\n    vec3 k = abs(m) * boxSize;\n\t\n    vec3 t1 = -n - k;\n    vec3 t2 = -n + k;\n\n\tfloat tN = max( max( t1.x, t1.y ), t1.z );\n\tfloat tF = min( min( t2.x, t2.y ), t2.z );\n\t\n    if (tN > tF || tF <= 0.) {\n        return MAX_DIST;\n    } else {\n        if (tN >= distBound.x && tN <= distBound.y) {  // if near < 0 means inside, only intersection at tF\n        \tnormal = -sign(rd)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n            return tN;\n        } else if (tF >= distBound.x && tF <= distBound.y) { \n        \tnormal = -sign(rd)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n            return tF;\n        } else {\n            return MAX_DIST;\n        }\n    }\n}\n/*\nfloat intersect(in vec3 ro, in vec3 rd, in vec3 boxSize, in vec2 distBound, inout vec3 normal) {\n    vec3 cubeMin = -boxSize;\n    vec3 cubeMax = boxSize;\n    vec3 tMin = (cubeMin - ro) / rd;\n    vec3 tMax = (cubeMax - ro) / rd;\n    vec3 t1 = min(tMin, tMax);\n    vec3 t2 = max(tMin, tMax);\n    float tNear = max(max(t1.x, t1.y), t1.z);\n    float tFar = min(min(t2.x, t2.y), t2.z);\n\n\n    vec3 hit;\n    float r;\n    \n    if (tNear > tFar) {\n        return MAX_DIST;\n    } else {\n        if (tNear >= distBound.x && tNear <= distBound.y) {  // if near < 0 means inside, only intersection at tF\n            r = tNear;\n        } else if (tFar >= distBound.x && tFar <= distBound.y) { \n            r = tFar;\n        } else {\n            return MAX_DIST;\n        }\n    } \n\n    hit = r * rd + ro;\n\n    if (hit.x < cubeMin.x + distBound.x) normal = vec3(-1.0, 0.0, 0.0);\n    else if (hit.x > cubeMax.x - distBound.x) normal = vec3(1.0, 0.0, 0.0);\n    else if (hit.y < cubeMin.y + distBound.x) normal = vec3(0.0, -1.0, 0.0);\n    else if (hit.y > cubeMax.y - distBound.x) normal = vec3(0.0, 1.0, 0.0);\n    else if (hit.z < cubeMin.z + distBound.x) normal =  vec3(0.0, 0.0, -1.0);\n    else normal = vec3(0.0, 0.0, 1.0);    \n\n    normal = -1. * normal;    \n\n    return r;\n}\n*/\n\n// Noteice that: cornel box intersection with back-face culling\n// always return tF in intersection, make sure every thing is inside this cornel box \n/*\nfloat intersect(in vec3 ro, in vec3 rd, in vec3 boxSize, in vec2 distBound, inout vec3 normal) {\n    vec3 m = sign(rd)/max(abs(rd), 1e-8);\n    vec3 n = m*ro;\n    vec3 k = abs(m)*boxSize;\t\n    vec3 t1 = -n - k;\n    vec3 t2 = -n + k;\n\tfloat tN = max( max( t1.x, t1.y ), t1.z );\n\tfloat tF = min( min( t2.x, t2.y ), t2.z );\t\n\n    if (tN > tF || tF <= 0.) {\n        return -1.;\n    } else {\n       if (tF >= distBound.x && tF <= distBound.y) { \n        \tnormal = -sign(rd)*step(t1.yzx,t1.xyz)*step(t1.zxy,t1.xyz);\n            return tF;    \n        } else {\n            return -1.;\n        }\n    }    \n}\n*/\n\nfloat intersect_2(in vec3 ro, in vec3 rd, in vec3 boxSize, in vec2 distBound, inout vec3 normal) {\n    vec3 cubeMin = -boxSize;\n    vec3 cubeMax = boxSize;\n    vec3 tMin = (cubeMin - ro) / rd;\n    vec3 tMax = (cubeMax - ro) / rd;\n    vec3 t1 = min(tMin, tMax);\n    vec3 t2 = max(tMin, tMax);\n    float tNear = max(max(t1.x, t1.y), t1.z);\n    float tFar = min(min(t2.x, t2.y), t2.z);\n\n    if (tNear > tFar) return MAX_DIST;\n\n    vec3 hit;\n    float r;\n    \n    if (tFar >= distBound.x && tFar <= distBound.y) { \n        hit = tFar * rd + ro;\n        r = tFar;\n    } else {\n        return MAX_DIST;\n    }\n    if (hit.x < cubeMin.x + distBound.x) normal = vec3(-1.0, 0.0, 0.0);\n    else if (hit.x > cubeMax.x - distBound.x) normal = vec3(1.0, 0.0, 0.0);\n    else if (hit.y < cubeMin.y + distBound.x) normal = vec3(0.0, -1.0, 0.0);\n    else if (hit.y > cubeMax.y - distBound.x) normal = vec3(0.0, 1.0, 0.0);\n    else if (hit.z < cubeMin.z + distBound.x) normal =  vec3(0.0, 0.0, -1.0);\n    else normal = vec3(0.0, 0.0, 1.0);    \n\n    normal = -1. * normal;    \n\n    return r;\n}\n\nvoid make_coord_421267681(in vec3 N, inout vec3 T, inout vec3 B) {\n   if (abs(N.x) > abs(N.y)) \n        T = vec3(N.z, 0, -N.x) / sqrt(N.x * N.x + N.z * N.z); \n    else\n        T = vec3(0, -N.z, N.y) / sqrt(N.y * N.y + N.z * N.z); \n    // T is already normalized\n    B = cross(N, T); // conserve right hand\n}\n\nvoid cos_hemi_sample_2197045468(in vec2 rand, out vec3 p) {\n    // uniformly sample in a unit-disk.\n    float r  = sqrt(rand.x); // cos(theta), theta(0, PI / 2)\n    float phi = 2.0 * PI_0 * rand.y; // phi (0, 2 * PI)\n    p.x = r * cos(phi);\n    p.y = r * sin(phi);\n     // then project up to hemisphere.\n    p.z = sqrt(max(0.0, 1.0 - p.x * p.x - p.y * p.y));\n}\n\nvec3 eval_1(const vec3 N, const vec3 wo, const vec3 wi) {\n    float dot_wi_n = dot(wi, N);\n    if (dot_wi_n <= 0. || dot(wo, N) <= 0.) return vec3(0);\n    return vec3(dot_wi_n / PI_0);\n}\n\n// "sample" is revsered identify\nvec3 sample_f_1921068617(in vec2 rand, in vec3 N, vec3 wo, inout vec3 wi, inout float pdf) {\n    cos_hemi_sample_2197045468(rand, wi); // z up\n    vec3 T;\n    vec3 B;\n    make_coord_421267681(N, T, B);    \n    wi = wi.x * T + wi.y * B + wi.z * N;    \n    pdf = abs(dot(N, wi)) / PI_0;        \n    return eval_1(N, wo, wi);\n}\n\nfloat dielectric_fr_1535977339(float cosThetaI, float etaI, float etaT) {\n    cosThetaI = clamp(cosThetaI, -1., 1.);\n\n    // Potentially swap indices of refraction\n    bool entering = cosThetaI > 0.f;\n    if (!entering) {\n        float temp;\n        temp = etaI;\n        etaI = etaT;\n        etaT = temp;\n        cosThetaI = abs(cosThetaI);\n    }\n\n    // Compute _cosThetaT_ using Snell\'s law\n    float sinThetaI = sqrt(max(0., 1. - cosThetaI * cosThetaI));\n    float sinThetaT = etaI / etaT * sinThetaI;\n\n    // Handle total internal reflection\n    if (sinThetaT >= 1.) return 1.;\n    float cosThetaT = sqrt(max(0., 1. - sinThetaT * sinThetaT));\n    float Rparl = ((etaT * cosThetaI) - (etaI * cosThetaT)) /\n                  ((etaT * cosThetaI) + (etaI * cosThetaT));\n    float Rperp = ((etaI * cosThetaI) - (etaT * cosThetaT)) /\n                  ((etaI * cosThetaI) + (etaT * cosThetaT));\n    return (Rparl * Rparl + Rperp * Rperp) / 2.;\n}\n\nvec3 sample_f_4181093413(vec2 rand, vec3 N, vec3 wo, inout vec3 wi, inout float pdf) {    \n    float ior1 = 1.0;\n    float ior2 = 1.45;\n    vec3 reflect_color = vec3(1.0);\n    float F = dielectric_fr_1535977339(dot(N, wo), ior1, ior2);\n    F = 1.0;\n    bool entering = dot(wo, N) >= 0.0;\n    ior1 = entering? ior1: ior2;\n    ior2 = entering? ior2: ior1;\n    vec3 normal = entering? N : -N;\n\n    if (rand.x < F) {\n        pdf = F;\n        wi = reflect(-wo, normal);        \n        return vec3(F) * reflect_color;\n    } else {        \n        pdf = 1.0 - F;            \n        wi = refract(-wo, normal, ior1 / ior2);        \n        return vec3(1.0 - F) * reflect_color;\n    }\n}\n\nvec3 eval_0(const vec3 N, const vec3 wo, const vec3 wi) {\n    float dot_wi_n = dot(wi, N);\n    if (dot_wi_n <= 0. || dot(wo, N) <= 0.) return vec3(0);\n    return vec3(dot_wi_n / PI_0);\n}\n\nfloat pdf_0(in vec3 N, in vec3 wi) {\n    return abs(dot(N, wi)) / PI_0;\n}\n\nfloat sdBox( vec3 p, vec3 b ) {\n    vec3 q = abs(p) - b;\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat sdCross( in vec3 p ) {\n    float da = sdBox(p.xyz,vec3(10000.,1.0,1.0));\n    float db = sdBox(p.yzx,vec3(1.0,10000.,1.0));\n    float dc = sdBox(p.zxy,vec3(1.0,1.0,10000.));\n    return min(da,min(db,dc));\n}\n\nfloat map( in vec3 p ) {\n\n    float d = sdBox(p,vec3(1.0));\n    float s = 1.0;\n    for( int m=0; m<3; m++ ) {\n        vec3 a = mod( p*s, 2.0 )-1.0;\n        s *= 3.0;\n        vec3 r = abs(1.0 - 3.0*abs(a));\n        float c = sdCross(r)/s;\n        d = max(d,-c);\n    }\n    return d;\n\n/*\n    float d = sdf_box(p,vec3(0.7));\n    float s = 1.0;\n    for( int m=0; m<4; m++ ) {\n        vec3 a = mod( p*s, 2.0 )-1.0;\n        s *= 3.0;\n        vec3 r = abs(1.0 - 3.0*abs(a));\n        float da = max(r.x,r.y);\n        float db = max(r.y,r.z);\n        float dc = max(r.z,r.x);\n        float c = (min(da,min(db,dc))-1.0)/s;\n        d = max(d,c);\n    }\n    return d;\n    */\n}\n\nvec3 normal_0( in vec3 pos ) {\n    vec3 eps = vec3(0.0001,0.0,0.0);\n    return normalize( vec3(\n      map( pos+eps.xyy ) - map( pos-eps.xyy ),\n      map( pos+eps.yxy ) - map( pos-eps.yxy ),\n      map( pos+eps.yyx ) - map( pos-eps.yyx ) ) );\n}\n\nfloat raymarch( in vec3 ro, in vec3 rd, inout vec3 normal ) {    \n    float res = -1.0;\n    float tmax = 3.;\n    float t = 0.01;\n    for (int i=0; i <45; i++) {\n        float h = map(ro+rd*t);\n        if( h<0.001 || t>tmax ) break;\n        t +=  h;\n    }    \n    if( t < tmax ) {\n        res = t;\n        normal = normal_0(ro + rd * t);\n    }\n    else res = MAX_DIST;\n    return res;\n}\n\n#define DIRECT_LIGHT_SAMPLE\n#define MI_SAMPLE\n\n#define LIGHT_NUM 1\nLight lights[LIGHT_NUM];\n\nconst vec3 colors[6] = vec3[6](\n    vec3(1),\n    vec3(0.9647, 0.5255, 0.9804),\n    vec3(0.3529, 0.9686, 0.8627),\n    vec3(0.4471, 0.4118, 0.9608),\n    vec3(0.8667, 0.6353, 0.1294),\n    vec3(1)\n);\n\nvec3 glass_sample_f(vec2 rand, vec3 N, vec3 wo, inout vec3 wi, inout float pdf) {    \n    float ior1 = 1.0;\n    float ior2 = 1.45;\n    vec3 reflect_color = vec3(1.0);\n    float F = dielectric_fr_1535977339(dot(N, wo), ior1, ior2);\n    \n    bool entering = dot(wo, N) >= 0.0;\n    ior1 = entering? ior1: ior2;\n    ior2 = entering? ior2: ior1;\n    vec3 normal = entering? N : -N;\n\n    if (rand.x < F) {\n        pdf = F;\n        wi = reflect(-wo, normal);        \n        return vec3(F) * reflect_color;\n    } else {        \n        pdf = 1.0 - F;            \n        wi = refract(-wo, normal, ior1 / ior2);        \n        return vec3(1.0 - F) * reflect_color;\n    }\n}\n\nvec3 metal_sample_f(vec2 rand, vec3 N, vec3 wo, inout vec3 wi, inout float pdf) {    \n    float ior1 = 1.0;\n    float ior2 = 1.45;\n    vec3 reflect_color = vec3(1.0);\n    bool entering = dot(wo, N) >= 0.0;\n    vec3 normal = entering? N : -N;\n    pdf = 1.0;\n    wi = reflect(-wo, normal);        \n    return reflect_color;    \n}\n\n// must be trace last\nbool trace_lights(in vec2 nearfar, in Ray ray, inout int light_id) {\n    vec3 normal;\n    light_id = -1;\n    for (int i = 0; i < LIGHT_NUM; i++) {\n        Light light = lights[i];\n        switch (light.type) {\n            case QUAD_LIGHT: \n                vec3 size = vec3((light.rotation * light.u).x, 0.0001, (light.rotation * light.v).z);\n                float t = intersect_0(light.rotation * (ray.o - light.pos), light.rotation * ray.dir, size, nearfar, normal);\n                if (t < nearfar.y) {\n                    light_id = i;\n                    nearfar.y = t;\n                } break;\n            case DIR_LIGHT: break;\n        }\n    }\n    return (light_id >= 0);\n}\n\nbool compare(inout vec2 nearfar, float t) {\n\tif (t < nearfar.y) {\n        nearfar = vec2(nearfar.x, t);\n        return true;\n    } \n    return false;\n}\n\n#define LAMBERT 0\n#define METAL_SPECULAR 1\n#define GLASS_SPECULAR 2\n#define WOOD 3\n\n#define SPHERE_POSITION vec4(-0.58, .4, .3, .4)\n\nfloat trace_shadow(vec2 near_far, in Ray ray) {\n    vec2 result = vec2(near_far); // near, far, hit_id\n    vec3 normal;\n    //result = compare(2., result, raymarch(ray.o + vec3(0, -1.0, 0), ray.dir, normal));\n\n    compare(result, intersect_1(ray.o, ray.dir, SPHERE_POSITION, result.xy, normal));\n    compare(result, intersect_1(ray.o, ray.dir, vec4(0.6, .4, -.6, .4),     result.xy, normal));\n    compare(result, intersect_1(ray.o, ray.dir, vec4(0.2, .2, 0.6, .2), result.xy, normal));\n    \n    return result.y;\n}\n\nuniform vec3 color;\nuniform int type;\n\nfloat trace_ray(vec2 near_far, in Ray ray, inout PerRayData prd, inout Material material) {\n    vec2 result = near_far; // near, far, hit_id\n    if (compare(result, intersect_1(ray.o, ray.dir, SPHERE_POSITION, result.xy, prd.normal))) {\n        material.type = type;\n        material.color = vec3(1.0);\n    }\n\n    if (compare(result, intersect_1(ray.o, ray.dir, vec4(0.6, .4, -.6, .4), result.xy, prd.normal))) {\n        material.type = LAMBERT;\n        material.color =  vec3(0.851, 0.2235, 0.9333);\n    }          \n\n    if (compare(result, intersect_1(ray.o, ray.dir, vec4(.2, .2, 0.6, .2), result.xy, prd.normal))) {\n        material.type = METAL_SPECULAR;\n        material.color =vec3(1.0);\n    }\n\n    if (compare(result, intersect_3(ray.o, ray.dir,  vec4(0, 1, 0, 0), result.xy, prd.normal))) {\n        material.type = LAMBERT;\n        material.color = vec3(1.0);\n    } // bottom\n\n    if (compare(result, intersect_3(ray.o, ray.dir,  vec4(1, 0, 0, 1), result.xy, prd.normal))) {\n        material.type = METAL_SPECULAR;\n        material.color = vec3(1.0);\n    } // left \n\n    if (compare( result, intersect_3(ray.o, ray.dir,  vec4(-1, 0, 0, 1),  result.xy, prd.normal))) {\n        material.type = LAMBERT;\n        material.color = color;\n    } // right\n\n    if (compare(result, intersect_3(ray.o, ray.dir,  vec4(0, -1, 0, 2),  result.xy, prd.normal))) {\n        material.type = LAMBERT;\n        material.color = vec3(1.0);\n    } // top\n    \n    if (compare(result, intersect_3(ray.o, ray.dir,  vec4(0, 0, 1, 1), result.xy, prd.normal))) {    \n        material.type = LAMBERT;\n        material.color = vec3(1.0);\n    } // back  \n\n    prd.light = false;\n    int lightId;     \n\n    // if we detect lights first, we must ensure that prd.light is set false\n    if (/*prd.bounce > 0 &&*/ trace_lights(result, ray, lightId)) {\n        Light light = lights[lightId];        \n        prd.light = true;\n        prd.li = light.color;\n    } \n\n    return result.y;\n\n}\n\nuniform sampler2D wood;\n\nvec2 map_dir_to_uv(vec3 dir) {\n    float PI = 3.14;\n    float phi = atan(dir.z, dir.x);  // [-PI , PI]\n    float theta = asin(dir.y); // [-PI/2, PI/2]\n    vec2 uv;\n    uv.x = phi / (2.0 * PI) + 0.5; // [0, 1], +x -> 0.5\n    uv.y = theta / PI + 0.5; // [0, 1]\n    return uv;\n}\n\n// sample_f\nvec3 material_sample (inout Material mat, vec2 u, in vec3 hit, in vec3 N, in vec3 wo, inout vec3 wi, inout float pdf) {\n    vec3 bsdf;\n    switch(mat.type) {\n        case LAMBERT:\n            bsdf = sample_f_1921068617(u, N, wo, wi, pdf) * mat.color;\n            break;\n        case METAL_SPECULAR:\n            bsdf = metal_sample_f(u, N, wo, wi, pdf) * mat.color;\n            break;\n        case GLASS_SPECULAR:    \n            bsdf = glass_sample_f(u, N, wo, wi, pdf);\n            break;\n        case WOOD:\n            vec3 dir = normalize(hit - vec3(SPHERE_POSITION));\n            vec2 uv = map_dir_to_uv(dir);\n            vec4 woodTex = texture(wood, uv);\n            bsdf = sample_f_1921068617(u, N, wo, wi, pdf) * woodTex.rgb;\n    }\n    return bsdf;\n}\n\nvec3 material_eval (inout Material mat, in vec3 hit, in vec3 N, in vec3 wo, in vec3 wi) {    \n    vec3 bsdf;\n    switch(mat.type) {\n        case LAMBERT:\n            bsdf = eval_0(N, wo, wi) * mat.color;\n            break;\n        case METAL_SPECULAR:\n        case GLASS_SPECULAR:\n            bsdf = vec3(0);\n            break; // no chance\n        case WOOD:\n            vec3 dir = normalize(hit - vec3(SPHERE_POSITION));            \n            vec2 uv = map_dir_to_uv(dir);\n            vec4 woodTex = texture(wood, uv);\n            bsdf = eval_0(N, wo, wi) * woodTex.rgb;            \n    }\n    return bsdf;\n}\n\nfloat material_pdf(int type, vec3 normal, vec3 wi, vec3 wo) {\n    float pdf;\n    switch(type) {\n        case LAMBERT:\n            pdf = pdf_0(normal, wi);\n        case METAL_SPECULAR:            \n            pdf = 0.0; // no chance\n    }\n    return pdf;\n}\n\nvoid direct_sample_light(inout uint seed, inout PerRayData prd, in Material material) {\n    vec3 li; vec3 sample_dir; float pdf; float dist; vec3 wi; vec3 facing_dir; vec3 cross_uv;\n    for (int i = 0; i < LIGHT_NUM; i++) {\n        Light light = lights[i];\n\n        switch (light.type) {\n            case QUAD_LIGHT:\n                cross_uv = cross(light.u, light.v);\n                float area = length(cross_uv) * 4.;\n                vec2 rand = 2.0 * hash2(seed) - 1.0;    \n                wi = light.pos + rand.x * light.u + rand.y * light.v - prd.hit;\n                dist = length(wi);\n                wi = wi / dist;\n                li = light.color;\n                pdf = (dist * dist / abs(dot(normalize(cross_uv), wi))) * (1. / area); // convert pdf(A) to pdf(W)\n                break;\n            case DIR_LIGHT:\n                break;\n        }\n\n        if (dot(prd.normal, wi) <= 0. || pdf <= 0.0) break; // shading nomral is not facing the sample light\n        Ray ray;\n        ray.o = prd.hit;\n        ray.dir = wi;\n        if (trace_shadow(vec2(EPS, dist), ray) < dist) break;  // damn we are in shadow\n        vec3 bsdf = material_eval(material, prd.hit, prd.normal, prd.wo, wi);\n        prd.rad += prd.throughput * bsdf * li / max(0.0001, pdf);\n    }\n\n}\n\nvec3 run_path_tracer(inout Ray ray, inout uint seed) {\n    PerRayData prd;\n    prd.rad = vec3(0);\n    prd.throughput = vec3(1.0);\n    prd.light = false;\n    Material material;\n    bool is_specular_bounce = false;\n    for (int bounce = 0; bounce <= MAX_BOUNCES; bounce++) {\n        prd.bounce = bounce;\n        float t = trace_ray(vec2(EPS, MAX_DIST), ray, prd, material);    \n        if (prd.light) {        \n            #ifndef DIRECT_LIGHT_SAMPLE\n                prd.rad += prd.throughput * prd.li;\n            #else\n                if (bounce == 0 || is_specular_bounce) prd.rad += prd.throughput * prd.li;\n            #endif\n            break; // quit here\n        }\n\n        vec3 hit = ray.o + ray.dir * t;\n        prd.hit = hit;\n        prd.wo = -ray.dir;\n\n        is_specular_bounce = (material.type == METAL_SPECULAR || material.type == GLASS_SPECULAR);\n\n        #ifdef DIRECT_LIGHT_SAMPLE\n            if (!is_specular_bounce) direct_sample_light(seed, prd, material);\n        #endif\n        float pdf;        \n\n        vec3 bsdf = material_sample(material, hash2(seed), hit, prd.normal, prd.wo, prd.wi, pdf);\n        \n        prd.throughput *= bsdf / vec3(pdf);\n        ray.o = hit;\n        ray.dir = prd.wi;        \n    }\n    return prd.rad;\n}\n\nvoid init_lights() {\n    vec3 u = vec3(.4, 0, 0);\n    vec3 v = vec3(0, 0, .4);\n    mat3 invRot = transpose(mat3(normalize(u), normalize(cross(v, u)), normalize(v)));\n    lights[0] = Light(QUAD_LIGHT, vec3(5.), vec3(0, 2.0, 0), u, v, invRot);\n}\n\nvoid main() {\n     \n    vec3 eye = vec3(0., 1., 2.9);\n    vec3 tar = vec3(0., 1., 2.0);\n\n    vec2 ndc = (gl_FragCoord.xy - 0.5) / size * 2.0 - 1.0;  // -1, 1\n    //float seed = float(baseHash(floatBitsToUint(ndc))) / float(0xffffffffU) + time;  // hash1\n    uint seed = uint(uint(gl_FragCoord.x) * uint(1973) + uint(gl_FragCoord.y) * uint(9277) + uint(frame) * uint(26699)) | uint(1);    \n\n    ndc += 2.0 * hash2(seed) / size; // jitter AA    \n    Ray ray = camera_ray_3771232466(eye, tar, ndc);    \n\n    init_lights();\n    vec3 rad = run_path_tracer(ray, seed);\n    \n    // windows wired black dots\n    vec4 result = max(vec4(rad, 1.0), vec4(vec3(EPS), 1.0));\n\n    if (frame > 0) {\n        vec2 uv = gl_FragCoord.xy / size;    \n        vec4 prev = texture(buffer, uv);\n        result = mix(result, prev, float(frame) / (float(frame) + 1.));\n    }\n\n    fragColor = result;\n\n}\n'])}),A=o({vs:u,fs:_(["#version 300 es\nprecision highp float;\n#define GLSLIFY 1\nuniform vec2 size;\nuniform sampler2D buffer;\n\nout vec4 fragColor;\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / size;\n    vec4 color = texture(buffer, uv);\n    fragColor = vec4(sqrt(color.rgb), color.a);\n}\n"])}),p=new n(!0),m=new r(h,{webgl2:!0});let g,v=0;const S={dataType:a.FLOAT,format:a.RGBA,internalFormat:a.RGBA32F,wrapS:a.CLAMP_TO_EDGE,wrapT:a.CLAMP_TO_EDGE,magFilter:a.NEAREST,minFilter:a.NEAREST,anistropy:1};let I=new i(S),M=new i(S);const N=()=>{const e=p.getIntervalSeconds();g=requestAnimationFrame(N),m.computeCanvasSize()&&(m.context.setScreenViewport([0,0,m.width,m.height]),I.resize(m.width,m.height),M.resize(m.width,m.height),t=0);try{v+=e,t++,((t,e,r)=>{t.context.bindRenderTarget(I);const n={size:[t.width,t.height],frame:e,time:r,buffer:M.colorTexture,wood:f.wood,color:d,type:l,MAX_BOUNCES:Number(E)};t.draw(R,{uniforms:n}),t.context.bindRenderTarget(null),n.buffer=I.colorTexture,t.draw(A,{uniforms:n});let i=I;I=M,M=i})(m,t,v)}catch(t){console.error(t),cancelAnimationFrame(g)}};N()}()}).call(this)}).call(this,"/pathtracer_3")},{"../BigTriangle":2,"../RenderTarget":12,"../StopWatch":14,"../WebGLCanvas":18,"../WebGLConstants":20,"../loader/texture":24,glslify:34}]},{},[46]);
